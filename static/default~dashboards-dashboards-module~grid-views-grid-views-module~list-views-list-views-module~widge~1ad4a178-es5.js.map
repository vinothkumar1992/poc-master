{"version":3,"sources":["node_modules/ng-simple-slideshow/ng-simple-slideshow.js"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Inject, Injectable, Input, NgModule, NgZone, Output, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BrowserTransferStateModule, DomSanitizer, TransferState, makeStateKey } from '@angular/platform-browser';\n\nclass SwipeService {\n    /**\n     * \\@description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n     *              else return a 0 to do nothing\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    swipe(e, when) {\n        const /** @type {?} */ coord = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const /** @type {?} */ time = new Date().getTime();\n        if (when === 'start') {\n            this._swipeCoord = coord;\n            this._swipeTime = time;\n        }\n        else if (when === 'end') {\n            const /** @type {?} */ direction = [coord[0] - this._swipeCoord[0], coord[1] - this._swipeCoord[1]];\n            const /** @type {?} */ duration = time - this._swipeTime;\n            if (duration < 1000 // Short enough\n                && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n                && Math.abs(direction[0]) > 30) {\n                return direction[0] < 0 ? 1 : -1;\n            }\n        }\n        return 0;\n    }\n}\nSwipeService.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSwipeService.ctorParameters = () => [];\n\nconst FIRST_SLIDE_KEY = makeStateKey('firstSlide');\nclass SlideshowComponent {\n    /**\n     * @param {?} _swipeService\n     * @param {?} _renderer\n     * @param {?} _transferState\n     * @param {?} _ngZone\n     * @param {?} sanitizer\n     * @param {?} platform_id\n     * @param {?} document\n     */\n    constructor(_swipeService, _renderer, _transferState, _ngZone, sanitizer, platform_id, document) {\n        this._swipeService = _swipeService;\n        this._renderer = _renderer;\n        this._transferState = _transferState;\n        this._ngZone = _ngZone;\n        this.sanitizer = sanitizer;\n        this.platform_id = platform_id;\n        this.document = document;\n        this.slideIndex = -1;\n        this.slides = [];\n        this._initial = true;\n        this._isHidden = false;\n        this.imageUrls = [];\n        this.height = '100%';\n        this.showArrows = true;\n        this.disableSwiping = false;\n        this.autoPlay = false;\n        this.autoPlayInterval = 3333;\n        this.stopAutoPlayOnSlide = true;\n        this.autoPlayWaitForLazyLoad = false;\n        this.backgroundSize = 'cover';\n        this.backgroundPosition = 'center center';\n        this.backgroundRepeat = 'no-repeat';\n        this.showDots = false;\n        this.dotColor = '#FFF';\n        this.showCaptions = true;\n        this.captionColor = '#FFF';\n        this.captionBackground = 'rgba(0, 0, 0, .35)';\n        this.lazyLoad = false;\n        this.hideOnNoSlides = false;\n        this.fullscreen = false;\n        this.onSlideLeft = new EventEmitter();\n        this.onSlideRight = new EventEmitter();\n        this.onSwipeLeft = new EventEmitter();\n        this.onSwipeRight = new EventEmitter();\n        this.onFullscreenExit = new EventEmitter();\n        this.onIndexChanged = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get safeStyleDotColor() {\n        return this.sanitizer.bypassSecurityTrustStyle(`--dot-color: ${this.dotColor}`);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.debug !== undefined) {\n            console.warn('[Deprecation Warning]: The debug input will be removed from ng-simple-slideshow in 1.3.0');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // if this is the first being called, create a copy of the input\n        if (this.imageUrls && this.imageUrls.length > 0) {\n            if (this._initial === true) {\n                this._urlCache = Array.from(this.imageUrls);\n            }\n            if (this._isHidden === true) {\n                this._renderer.removeStyle(this.container.nativeElement, 'display');\n                this._isHidden = false;\n            }\n            this.setSlides();\n        }\n        else if (this.hideOnNoSlides === true) {\n            this._renderer.setStyle(this.container.nativeElement, 'display', 'none');\n            this._isHidden = true;\n        }\n        this.setStyles();\n        this.handleAutoPlay();\n    }\n    /**\n     * \\@description this is the function that should be called to make the slides change.\n     *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n     *              0 is taken into account for failed swipes\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    onSlide(indexDirection, isSwipe) {\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slide(indexDirection, isSwipe);\n    }\n    /**\n     * \\@description Use the swipe service to detect swipe events from phone and tablets\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    onSwipe(e, when) {\n        if (this.disableSwiping === true) {\n            return;\n        }\n        const /** @type {?} */ indexDirection = this._swipeService.swipe(e, when);\n        // handle a failed swipe\n        if (indexDirection === 0) {\n            return;\n        }\n        else {\n            this.onSlide(indexDirection, true);\n        }\n    }\n    /**\n     * \\@description Redirect to current slide \"href\" if defined\n     * @param {?} e\n     * @return {?}\n     */\n    onClick(e) {\n        e.preventDefault();\n        const /** @type {?} */ currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n        if (currentSlide && currentSlide.image.clickAction) {\n            currentSlide.image.clickAction();\n        }\n        else if (currentSlide && currentSlide.image.href) {\n            this.document.location.href = currentSlide.image.href;\n        }\n    }\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    goToSlide(index) {\n        const /** @type {?} */ beforeClickIndex = this.slideIndex;\n        this.slideIndex = index - 1;\n        this.setSlideIndex(1);\n        if (!this.slides[this.slideIndex].loaded) {\n            this.loadRemainingSlides();\n        }\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slideRight(beforeClickIndex);\n        this.slides[beforeClickIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    }\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    getSlideStyle(index) {\n        const /** @type {?} */ slide = this.slides[index];\n        if (slide.loaded) {\n            return {\n                \"background-image\": 'url(' + slide.image.url + ')',\n                \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n                \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n                \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n            };\n        }\n        else {\n            // doesn't compile correctly if returning an empty object, sooooo.....\n            return {\n                \"background-image\": undefined,\n                \"background-size\": undefined,\n                \"background-position\": undefined,\n                \"background-repeat\": undefined\n            };\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    exitFullScreen(e) {\n        e.preventDefault();\n        this.fullscreen = false;\n        this.onFullscreenExit.emit(true);\n    }\n    /**\n     * \\@description Set the new slide index, then make the transition happen.\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slide(indexDirection, isSwipe) {\n        const /** @type {?} */ oldIndex = this.slideIndex;\n        this.setSlideIndex(indexDirection);\n        if (!this.slides[this.slideIndex].loaded) {\n            this.loadRemainingSlides();\n        }\n        if (indexDirection === 1) {\n            this.slideRight(oldIndex, isSwipe);\n        }\n        else {\n            this.slideLeft(oldIndex, isSwipe);\n        }\n        this.slides[oldIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    }\n    /**\n     * \\@description This is just treating the url array like a circular list.\n     * @param {?} indexDirection\n     * @return {?}\n     */\n    setSlideIndex(indexDirection) {\n        this.slideIndex += indexDirection;\n        if (this.slideIndex < 0) {\n            this.slideIndex = this.slides.length - 1;\n        }\n        if (this.slideIndex >= this.slides.length) {\n            this.slideIndex = 0;\n        }\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slideLeft(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n            this.onSwipeLeft.emit(this.slideIndex);\n        }\n        else {\n            this.onSlideLeft.emit(this.slideIndex);\n        }\n        this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n        this.slides[oldIndex].leftSide = true;\n        this.slides[oldIndex].action = 'slideOutLeft';\n        this.slides[this.slideIndex].rightSide = false;\n        this.slides[this.getRightSideIndex()].rightSide = true;\n        this.slides[this.slideIndex].action = 'slideInRight';\n    }\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slideRight(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n            this.onSwipeRight.emit(this.slideIndex);\n        }\n        else {\n            this.onSlideRight.emit(this.slideIndex);\n        }\n        this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n        this.slides[oldIndex].rightSide = true;\n        this.slides[oldIndex].action = 'slideOutRight';\n        this.slides[this.slideIndex].leftSide = false;\n        this.slides[this.getLeftSideIndex()].leftSide = true;\n        this.slides[this.slideIndex].action = 'slideInLeft';\n    }\n    /**\n     * \\@description Check to make sure slide images have been set or haven't changed\n     * @return {?}\n     */\n    setSlides() {\n        if (this.imageUrls) {\n            if (this.checkCache() || this._initial === true) {\n                this._initial = false;\n                this._urlCache = Array.from(this.imageUrls);\n                this.slides = [];\n                if (this.lazyLoad === true) {\n                    this.buildLazyLoadSlideArray();\n                }\n                else {\n                    this.buildSlideArray();\n                }\n            }\n        }\n    }\n    /**\n     * \\@description create the slides without background urls, which will be added in\n     *              for the \"lazy load,\" then load only the first slide\n     * @return {?}\n     */\n    buildLazyLoadSlideArray() {\n        for (let /** @type {?} */ image of this.imageUrls) {\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: false\n            });\n        }\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.loadFirstSlide();\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description create the slides with background urls all at once\n     * @return {?}\n     */\n    buildSlideArray() {\n        for (let /** @type {?} */ image of this.imageUrls) {\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: image } : image),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: true\n            });\n        }\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description load the first slide image if lazy loading\n     *              this takes server side and browser side into account\n     * @return {?}\n     */\n    loadFirstSlide() {\n        const /** @type {?} */ tmpIndex = this.slideIndex;\n        const /** @type {?} */ tmpImage = this.imageUrls[tmpIndex];\n        // if server side, we don't need to worry about the rest of the slides\n        if (isPlatformServer(this.platform_id)) {\n            this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[tmpIndex].loaded = true;\n            this._transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n        }\n        else {\n            const /** @type {?} */ firstSlideFromTransferState = this._transferState.get(FIRST_SLIDE_KEY, /** @type {?} */ (null));\n            // if the first slide didn't finish loading on the server side, we need to load it\n            if (firstSlideFromTransferState === null) {\n                let /** @type {?} */ loadImage = new Image();\n                loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                loadImage.addEventListener('load', () => {\n                    this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                    this.slides[tmpIndex].loaded = true;\n                });\n            }\n            else {\n                this.slides[tmpIndex] = firstSlideFromTransferState;\n                this._transferState.remove(FIRST_SLIDE_KEY);\n            }\n        }\n    }\n    /**\n     * \\@description if lazy loading in browser, start loading remaining slides\n     * \\@todo: figure out how to not show the spinner if images are loading fast enough\n     * @return {?}\n     */\n    loadRemainingSlides() {\n        for (let /** @type {?} */ i = 0; i < this.slides.length; i++) {\n            if (!this.slides[i].loaded) {\n                new Promise((resolve) => {\n                    const /** @type {?} */ tmpImage = this.imageUrls[i];\n                    let /** @type {?} */ loadImage = new Image();\n                    loadImage.addEventListener('load', () => {\n                        this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                        this.slides[i].loaded = true;\n                        resolve();\n                    });\n                    loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                });\n            }\n        }\n    }\n    /**\n     * \\@description Start or stop autoPlay, don't do it at all server side\n     * @param {?=} stopAutoPlay\n     * @return {?}\n     */\n    handleAutoPlay(stopAutoPlay) {\n        if (isPlatformServer(this.platform_id)) {\n            return;\n        }\n        if (stopAutoPlay === true || this.autoPlay === false) {\n            if (this._autoplayIntervalId) {\n                this._ngZone.runOutsideAngular(() => clearInterval(this._autoplayIntervalId));\n                this._autoplayIntervalId = null;\n            }\n        }\n        else if (!this._autoplayIntervalId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._autoplayIntervalId = setInterval(() => {\n                    if (!this.autoPlayWaitForLazyLoad || (this.autoPlayWaitForLazyLoad && this.slides[this.slideIndex].loaded)) {\n                        this._ngZone.run(() => this.slide(1));\n                    }\n                }, this.autoPlayInterval);\n            });\n        }\n    }\n    /**\n     * \\@description Keep the styles up to date with the input\n     * @return {?}\n     */\n    setStyles() {\n        if (this.fullscreen) {\n            this._renderer.setStyle(this.container.nativeElement, 'height', '100%');\n            // Would be nice to make it configurable\n            this._renderer.setStyle(this.container.nativeElement, 'background-color', 'white');\n        }\n        else {\n            // Would be nice to make it configurable\n            this._renderer.removeStyle(this.container.nativeElement, 'background-color');\n            if (this.height) {\n                this._renderer.setStyle(this.container.nativeElement, 'height', this.height);\n            }\n            if (this.minHeight) {\n                this._renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n            }\n        }\n        if (this.arrowSize) {\n            this._renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n            this._renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n            this._renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n            this._renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n        }\n    }\n    /**\n     * \\@description compare image array to the cache, returns false if no changes\n     * @return {?}\n     */\n    checkCache() {\n        return !(this._urlCache.length === this.imageUrls.length && this._urlCache.every((cacheElement, i) => cacheElement === this.imageUrls[i]));\n    }\n    /**\n     * \\@description get the index for the slide to the left of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    getLeftSideIndex(i) {\n        if (i === undefined) {\n            i = this.slideIndex;\n        }\n        if (--i < 0) {\n            i = this.slides.length - 1;\n        }\n        return i;\n    }\n    /**\n     * \\@description get the index for the slide to the right of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    getRightSideIndex(i) {\n        if (i === undefined) {\n            i = this.slideIndex;\n        }\n        if (++i >= this.slides.length) {\n            i = 0;\n        }\n        return i;\n    }\n    /**\n     * \\@description a trackBy function for the ngFor loops\n     * @param {?} index\n     * @param {?} slide\n     * @return {?}\n     */\n    trackByFn(index, slide) {\n        return slide.image;\n    }\n}\nSlideshowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'slideshow',\n                template: `\n    <!-- fullscreen bar -->\n    <div [class.display-none]=\"!fullscreen\"\n         class=\"fs-container\"\n         (click)=\"exitFullScreen($event)\">\n      <i title=\"Back\"\n         class=\"arrow-exitfs prev\"></i>\n    </div>\n    <div #container\n         (touchstart)=\"onSwipe($event, 'start')\"\n         (touchend)=\"onSwipe($event, 'end')\"\n         class=\"slideshow-container\"\n         [class.slideshow-container-fs]=\"fullscreen\">\n      <!-- slides -->\n      <a *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n         class=\"slides\"\n         href=\"{{slide?.image?.clickAction ? '#' : slide?.image?.href}}\"\n         title=\"{{slide?.image?.title}}\"\n         [ngStyle]=\"getSlideStyle(i)\"\n         [class.selected]=\"slide?.selected\"\n         [class.hide-slide]=\"!slide?.selected && !slide?.leftSide && !slide?.rightSide\"\n         [class.left-side]=\"slide?.leftSide\"\n         [class.right-side]=\"slide?.rightSide\"\n         [class.slide-in-left]=\"slide?.action === 'slideInLeft'\"\n         [class.slide-in-right]=\"slide?.action === 'slideInRight'\"\n         [class.slide-out-left]=\"slide?.action === 'slideOutLeft'\"\n         [class.slide-out-right]=\"slide?.action === 'slideOutRight'\"\n         [class.link]=\"slide?.image?.clickAction || slide?.image?.href\"\n         (click)=\"onClick($event)\">\n        <div class=\"loader\"\n             *ngIf=\"!slide?.loaded\"></div>\n        <div *ngIf=\"showCaptions && slide?.image?.caption\"\n             class=\"caption\"\n             [ngStyle]=\"{\n               'color': captionColor,\n               'background-color': captionBackground\n              }\"\n             [innerHTML]=\"slide?.image?.caption\">\n        </div>\n      </a>\n      <!-- left arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(-1)\"\n           class=\"arrow-container prev\">\n        <i #prevArrow\n           title=\"Previous\"\n           class=\"arrow prev\"></i>\n      </div>\n      <!-- right arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(1)\"\n           class=\"arrow-container next\">\n        <i #nextArrow\n           title=\"Next\"\n           class=\"arrow next\"></i>\n      </div>\n      <!-- dots -->\n      <ul class=\"slick-dots\"\n          *ngIf=\"showDots\">\n        <li *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n            (click)=\"goToSlide(i)\"\n            [class.slick-active]=\"slide.selected\">\n          <button type=\"button\"\n                  [attr.style]=\"safeStyleDotColor\">\n            {{i}}\n          </button>\n        </li>\n      </ul>\n    </div>\n  `,\n                styles: [`\n    /*\n     styles adapted from https://www.w3schools.com/w3css/4/w3.css\n     arrow styles adapted from https://codepen.io/minustalent/pen/Frhaw\n     */\n    .display-none {\n      display: none !important; }\n\n    .fs-container {\n      display: block;\n      cursor: pointer;\n      position: fixed;\n      z-index: 1;\n      top: 16px;\n      left: 16px;\n      width: 46px;\n      height: 46px;\n      text-align: center;\n      padding: 0;\n      background-color: rgba(0, 0, 0, 0.2);\n      -webkit-transition: all .2s ease-in-out;\n      transition: all .2s ease-in-out; }\n      .fs-container:hover {\n        background-color: rgba(0, 0, 0, 0.33); }\n      .fs-container .arrow-exitfs {\n        display: block;\n        width: 30px;\n        height: 30px;\n        background: transparent;\n        border-top: 2px solid #f2f2f2;\n        -webkit-transition: all .2s ease-in-out;\n        transition: all .2s ease-in-out; }\n        .fs-container .arrow-exitfs.prev {\n          -webkit-transform: rotate(-45deg);\n                  transform: rotate(-45deg);\n          position: relative;\n          left: 18px;\n          top: 18px; }\n        .fs-container .arrow-exitfs:after {\n          content: '';\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          -webkit-transform: rotate(90deg);\n                  transform: rotate(90deg);\n          position: absolute;\n          left: -15px;\n          top: -17px; }\n\n    .slideshow-container.slideshow-container-fs {\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%; }\n\n    .slideshow-container {\n      position: relative;\n      display: block;\n      margin: auto;\n      height: 100%;\n      width: 100%;\n      overflow: hidden; }\n      .slideshow-container .hide-slide {\n        visibility: hidden;\n        position: absolute;\n        top: -100vw;\n        left: -100vw;\n        opacity: 0; }\n      .slideshow-container .slides {\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: 100%;\n        visibility: visible;\n        opacity: 1;\n        display: block; }\n        .slideshow-container .slides.selected {\n          left: 0; }\n        .slideshow-container .slides.left-slide {\n          left: -100%; }\n        .slideshow-container .slides.right-slide {\n          left: 100%; }\n        .slideshow-container .slides.slide-in-left {\n          left: 0;\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-in-right {\n          left: 0;\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-left {\n          left: -100%;\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-right {\n          left: 100%;\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.link {\n          cursor: pointer; }\n        .slideshow-container .slides:not(.link) {\n          cursor: default; }\n      .slideshow-container .caption {\n        position: absolute;\n        bottom: 0;\n        padding: 10px;\n        width: 100%; }\n      .slideshow-container .arrow-container {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n        background-size: 100%;\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\n        background-image: linear-gradient(transparent, transparent);\n        z-index: 100;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none; }\n        .slideshow-container .arrow-container:before {\n          display: block;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          left: 0;\n          opacity: 0;\n          width: 100%;\n          z-index: -100;\n          -webkit-transition: opacity 0.45s;\n          transition: opacity 0.45s; }\n        .slideshow-container .arrow-container.prev {\n          left: 0; }\n          .slideshow-container .arrow-container.prev:before {\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container.next {\n          right: 0; }\n          .slideshow-container .arrow-container.next:before {\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container .arrow {\n          display: block;\n          margin: auto;\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          border-left: 2px solid #f2f2f2;\n          -webkit-transition: all .2s ease-in-out;\n          transition: all .2s ease-in-out;\n          -webkit-user-select: none;\n             -moz-user-select: none;\n              -ms-user-select: none;\n                  user-select: none; }\n          .slideshow-container .arrow-container .arrow:before {\n            display: block;\n            height: 200%;\n            width: 200%;\n            margin-left: -50%;\n            margin-top: -50%;\n            content: \"\";\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .slideshow-container .arrow-container .arrow.prev {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg);\n            position: relative;\n            left: 20px;\n            margin-right: 10px; }\n          .slideshow-container .arrow-container .arrow.next {\n            -webkit-transform: rotate(135deg);\n                    transform: rotate(135deg);\n            position: relative;\n            right: 20px;\n            margin-left: 10px; }\n      .slideshow-container .slick-dots {\n        display: block;\n        bottom: 15px;\n        z-index: 1;\n        text-align: center;\n        position: absolute;\n        padding: 0;\n        left: 0;\n        right: 0;\n        margin: 0 auto; }\n        .slideshow-container .slick-dots li {\n          display: inline;\n          margin: 0;\n          padding: 0; }\n          .slideshow-container .slick-dots li button {\n            border: none;\n            background: none;\n            text-indent: -9999px;\n            font-size: 0;\n            width: 20px;\n            height: 20px;\n            outline: none;\n            position: relative;\n            z-index: 1;\n            cursor: pointer; }\n            .slideshow-container .slick-dots li button:before {\n              content: '';\n              width: 4px;\n              height: 4px;\n              background: var(--dot-color, #FFF);\n              border-radius: 4px;\n              display: block;\n              position: absolute;\n              top: 50%;\n              left: 50%;\n              -webkit-transform: translate(-50%, -50%);\n                      transform: translate(-50%, -50%);\n              opacity: .7;\n              -webkit-transition: all .5s ease-out;\n              transition: all .5s ease-out; }\n          .slideshow-container .slick-dots li.slick-active button:before {\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\n                    transform: translate(-50%, -50%) scale(1.4);\n            opacity: 1; }\n\n    @media screen and (min-width: 768px) {\n      .slideshow-container .arrow-container:hover:before {\n        opacity: 1; }\n      .slideshow-container .arrow-container:hover .arrow {\n        border-width: 4px; }\n      .slideshow-container .arrow-container .arrow:hover {\n        border-width: 4px; } }\n\n    @-webkit-keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @-webkit-keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    @keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    .loader {\n      position: absolute;\n      left: 50%;\n      margin-left: -20px;\n      top: 50%;\n      margin-top: -20px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #555;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite; }\n\n    @-webkit-keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n\n    @keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n  `]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowComponent.ctorParameters = () => [\n    { type: SwipeService, },\n    { type: Renderer2, },\n    { type: TransferState, },\n    { type: NgZone, },\n    { type: DomSanitizer, },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n];\nSlideshowComponent.propDecorators = {\n    'imageUrls': [{ type: Input },],\n    'height': [{ type: Input },],\n    'minHeight': [{ type: Input },],\n    'arrowSize': [{ type: Input },],\n    'showArrows': [{ type: Input },],\n    'disableSwiping': [{ type: Input },],\n    'autoPlay': [{ type: Input },],\n    'autoPlayInterval': [{ type: Input },],\n    'stopAutoPlayOnSlide': [{ type: Input },],\n    'autoPlayWaitForLazyLoad': [{ type: Input },],\n    'debug': [{ type: Input },],\n    'backgroundSize': [{ type: Input },],\n    'backgroundPosition': [{ type: Input },],\n    'backgroundRepeat': [{ type: Input },],\n    'showDots': [{ type: Input },],\n    'dotColor': [{ type: Input },],\n    'showCaptions': [{ type: Input },],\n    'captionColor': [{ type: Input },],\n    'captionBackground': [{ type: Input },],\n    'lazyLoad': [{ type: Input },],\n    'hideOnNoSlides': [{ type: Input },],\n    'fullscreen': [{ type: Input },],\n    'onSlideLeft': [{ type: Output },],\n    'onSlideRight': [{ type: Output },],\n    'onSwipeLeft': [{ type: Output },],\n    'onSwipeRight': [{ type: Output },],\n    'onFullscreenExit': [{ type: Output },],\n    'onIndexChanged': [{ type: Output },],\n    'container': [{ type: ViewChild, args: ['container',] },],\n    'prevArrow': [{ type: ViewChild, args: ['prevArrow',] },],\n    'nextArrow': [{ type: ViewChild, args: ['nextArrow',] },],\n};\n\nclass SlideshowModule {\n}\nSlideshowModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    SlideshowComponent\n                ],\n                exports: [\n                    SlideshowComponent\n                ],\n                providers: [\n                    SwipeService\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowModule.ctorParameters = () => [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SlideshowModule, SlideshowComponent as ɵa, SwipeService as ɵb };\n//# sourceMappingURL=ng-simple-slideshow.js.map\n"],"sourceRoot":"webpack:///","file":"default~dashboards-dashboards-module~grid-views-grid-views-module~list-views-list-views-module~widge~1ad4a178-es5.js"}