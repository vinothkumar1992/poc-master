{"version":3,"sources":["src/app/content/apps/contacts/contacts-header/contacts-header.component.html","src/app/content/apps/contacts/contacts-header/search-bar/search-bar.component.html","src/app/content/apps/contacts/contacts-list/contact-list-header/contact-list-header.component.html","src/app/content/apps/contacts/contacts-list/contact-list-item/contact-list-item.component.html","src/app/content/apps/contacts/contacts-list/contacts-list.component.html","src/app/content/apps/contacts/contacts-sidebar/contacts-sidebar.component.html","src/app/content/apps/contacts/contacts.component.html","src/app/content/apps/contacts/drawer/drawer.component.html","src/app/content/apps/contacts/drawer/notifications/notifications.component.html","src/app/content/apps/contacts/drawer/search/search.component.html","src/app/content/apps/contacts/edit-contact/edit-contact.component.html","src/app/content/apps/contacts/contact.model.ts","src/app/content/apps/contacts/contacts-header/contacts-header.component.scss","src/app/content/apps/contacts/contacts-header/contacts-header.component.ts","src/app/content/apps/contacts/contacts-header/search-bar/search-bar.component.ts","src/app/content/apps/contacts/contacts-list/contact-list-header/contact-list-header.component.scss","src/app/content/apps/contacts/contacts-list/contact-list-header/contact-list-header.component.ts","src/app/content/apps/contacts/contacts-list/contact-list-item/contact-list-item.component.scss","src/app/content/apps/contacts/contacts-list/contact-list-item/contact-list-item.component.ts","src/app/content/apps/contacts/contacts-list/contacts-list.component.scss","src/app/content/apps/contacts/contacts-list/contacts-list.component.ts","src/app/content/apps/contacts/contacts-sidebar/contacts-sidebar.component.ts","src/app/content/apps/contacts/contacts.component.scss","src/app/content/apps/contacts/contacts.component.ts","src/app/content/apps/contacts/contacts.module.ts","src/app/content/apps/contacts/contacts.service.ts","src/app/content/apps/contacts/drawer/drawer.component.scss","src/app/content/apps/contacts/drawer/drawer.component.ts","src/app/content/apps/contacts/drawer/notifications/notifications.component.scss","src/app/content/apps/contacts/drawer/notifications/notifications.component.ts","src/app/content/apps/contacts/drawer/search/search.component.scss","src/app/content/apps/contacts/drawer/search/search.component.ts","src/app/content/apps/contacts/edit-contact/edit-contact.component.scss","src/app/content/apps/contacts/edit-contact/edit-contact.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<contact-search-bar></contact-search-bar>\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto dt-notification\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n  <!-- Dropdown Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"dt-icon-alert\\\"></gx-icon>\\r\\n  </a>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu class=\\\"dropdown-menu-media\\\">\\r\\n    <!-- Dropdown Menu Header -->\\r\\n    <div class=\\\"dropdown-menu-header\\\">\\r\\n      <h4 class=\\\"title\\\">Notifications (9)</h4>\\r\\n\\r\\n      <div class=\\\"ml-auto action-area\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\">Mark All Read</a> <a class=\\\"ml-2\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /dropdown menu header -->\\r\\n\\r\\n    <!-- Dropdown Menu Body -->\\r\\n    <div class=\\\"dropdown-menu-body position-relative\\\" perfectScrollbar>\\r\\n\\r\\n      <div class=\\\"h-auto\\\">\\r\\n        <!-- Media -->\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n          <!-- Avatar -->\\r\\n          <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n          <!-- avatar -->\\r\\n\\r\\n          <!-- Media Body -->\\r\\n          <span class=\\\"media-body\\\">\\r\\n            <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n            <span class=\\\"meta-date\\\">\\r\\n              <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n                       [name]=\\\"notification.icon.name\\\"\\r\\n                       [ngClass]=\\\"notification.icon.color\\\"\\r\\n                       [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n              {{notification.time}}\\r\\n            </span>\\r\\n          </span>\\r\\n          <!-- /media body -->\\r\\n\\r\\n        </a>\\r\\n        <!-- /media -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Dropdown Menu Footer -->\\r\\n    <div class=\\\"dropdown-menu-footer\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\"> See All\\r\\n        <gx-icon name=\\\"arrow-right\\\" [fw]=\\\"true\\\"></gx-icon></a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu footer -->\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<form>\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control border-0 shadow-none bg-focus form-control-sm\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in contacts...\\\">\\r\\n  <span class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></span>\\r\\n</form>\\r\\n\"","export default \"<!-- Action Bar -->\\r\\n<div class=\\\"d-flex flex-wrap\\\">\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown class=\\\"mr-auto\\\">\\r\\n\\r\\n    <!-- Checkbox -->\\r\\n    <gx-checkbox class=\\\"mr-3\\\"\\r\\n                 [gxModel]=\\\"hasSelectedContacts\\\"\\r\\n                 [indeterminate]=\\\"isIndeterminate\\\"\\r\\n                 (gxInputChange)=\\\"toggleSelectAll()\\\"></gx-checkbox>\\r\\n    <!-- /checkbox -->\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"text-dark\\\" ngbDropdownToggle> {{selected}} </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectContacts()\\\">All</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deselectContacts()\\\">None</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Starred', 'starred', true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Unstarred', 'starred', false)\\\">Unstarred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Favourite', 'favourite', true)\\\">Favourite</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Unfavourite', 'favourite', false)\\\">Unfavourite</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div *ngIf=\\\"hasSelectedContacts\\\" class=\\\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setPropertyOnSelectedContacts('favourite', true)\\\">\\r\\n      <gx-icon name=\\\"heart-o\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setPropertyOnSelectedContacts('starred', true)\\\">\\r\\n      <gx-icon name=\\\"star-fill\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setPropertyOnSelectedContacts('suggested', true)\\\">\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div *ngIf=\\\"hasSelectedContacts\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-dark btn-sm\\\" ngbDropdownToggle>\\r\\n      More\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('favourite', false)\\\">Unfavourite</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('favourite', true)\\\">Favourite</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('suggested', true)\\\">Add\\r\\n        in Suggestions</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('starred', true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('starred', false)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /action bar -->\\r\\n\"","export default \"<!-- Checkbox -->\\r\\n<gx-checkbox class=\\\"mr-5\\\" [gxModel]=\\\"selected\\\" (gxInputChange)=\\\"onSelectedChange($event)\\\"></gx-checkbox>\\r\\n<!-- /checkbox -->\\r\\n\\r\\n<gx-star class=\\\"mr-5\\\" [gxModel]=\\\"contact.starred\\\" (gxInputChange)=\\\"onToggleStarred($event)\\\"></gx-star>\\r\\n\\r\\n<gx-avatar [user]=\\\"contact\\\" class=\\\"mr-4\\\"></gx-avatar>\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__list-item-content\\\">\\r\\n  <div class=\\\"user-detail\\\">\\r\\n    <span class=\\\"user-name\\\">{{contact.first_name}}</span>\\r\\n    <span class=\\\"dt-separator-v\\\">&nbsp;</span>\\r\\n    <span class=\\\"designation\\\">{{contact.designation | htmlToPlainText | slice:0:30}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"text-light-gray\\\">\\r\\n    <span class=\\\"d-inline-block mr-3\\\">{{contact.email}}</span>\\r\\n    <span class=\\\"d-inline-block\\\">{{contact.phone}}</span>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown placement=\\\"bottom-right\\\">\\r\\n    <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n      <gx-icon name=\\\"vertical-more\\\" [fw]=\\\"true\\\" size=\\\"xl\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"  (click)=\\\"editContact(contact)\\\">\\r\\n        <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Edit\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deleteContact(contact)\\\">\\r\\n        <gx-icon name=\\\"trash\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Delete\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onFavouriteContact()\\\">\\r\\n        <gx-icon name=\\\"heart-o\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Favourite List\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Content Inner -->\\r\\n<div class=\\\"dt-module__content-inner\\\">\\r\\n  <app-contact-list-header></app-contact-list-header>\\r\\n\\r\\n  <!-- Module List -->\\r\\n  <div class=\\\"dt-module__list\\\">\\r\\n\\r\\n    <div *ngIf=\\\"contacts.length == 0\\\" class=\\\"dt-module__list-item\\\">\\r\\n      <p class=\\\"empty-result\\\">No record found.</p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Module Item -->\\r\\n    <app-contact-list-item *ngFor=\\\"let contact of contacts | filter: searchQuery\\\"\\r\\n                           [contact]=\\\"contact\\\"></app-contact-list-item>\\r\\n    <!-- /Module Item -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Module List -->\\r\\n</div>\\r\\n\"","export default \"<!-- Sidebar Header -->\\r\\n<div class=\\\"dt-module__sidebar-header border-bottom\\\">\\r\\n  <div class=\\\"d-none d-md-flex align-items-center\\\">\\r\\n    <gx-icon name=\\\"user-account\\\" size=\\\"1x\\\" class=\\\"mr-3 text-dark\\\"></gx-icon>\\r\\n    <span class=\\\"h3 mb-0\\\">Contacts</span>\\r\\n  </div>\\r\\n\\r\\n  <!-- App Quick Menu -->\\r\\n  <div class=\\\"quick-menu-list d-md-none\\\">\\r\\n    <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n       href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n       (click)=\\\"toggleNavigation($event)\\\">\\r\\n      <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Search Box -->\\r\\n    <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Search in app...\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n        <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n    </form>\\r\\n    <!-- /search box -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n      <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"quick-menu\\\" (click)=\\\"onClickNewContact()\\\">\\r\\n      <gx-icon name=\\\"contacts\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n      <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n       (click)=\\\"toggleOpen($event)\\\">\\r\\n      <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /app quick menu -->\\r\\n</div>\\r\\n<!-- /sidebar header -->\\r\\n\\r\\n<!-- Sidebar Menu -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\" perfectScrollbar>\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner\\\">\\r\\n    <!-- Button -->\\r\\n    <div class=\\\"action-area mt-5 mb-7 d-none d-md-block\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\"\\r\\n         class=\\\"btn btn-shadow btn-default compose-btn btn-rounded\\\"\\r\\n         (click)=\\\"onClickNewContact()\\\">\\r\\n        <gx-icon name=\\\"contacts\\\" class=\\\"mr-2\\\" [fw]=\\\"true\\\"></gx-icon>Add Contact\\r\\n      </a>\\r\\n    </div>\\r\\n    <!-- /button -->\\r\\n\\r\\n    <!-- Sidebar Navigation -->\\r\\n    <ul class=\\\"dt-module-side-nav\\\">\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">Contacts</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/all'\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">All Contacts</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/favourite'\\\">\\r\\n          <gx-icon name=\\\"heart-o\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Favourite List</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/suggested'\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Suggestions</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/starred'\\\">\\r\\n          <gx-icon name=\\\"star-o\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Starred contacts</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"dt-module-side-nav__link\\\">\\r\\n          <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Settings</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n    </ul>\\r\\n    <!-- /sidebar navigation -->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar Menu -->\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module\\\">\\r\\n\\r\\n      <!-- Module Sidebar -->\\r\\n      <app-contacts-sidebar></app-contacts-sidebar>\\r\\n      <!-- /Module Sidebar -->\\r\\n\\r\\n      <!-- Module Container -->\\r\\n      <div class=\\\"dt-module__container\\\">\\r\\n\\r\\n        <!-- Module Header -->\\r\\n        <app-contacts-header></app-contacts-header>\\r\\n        <!-- /Module Header -->\\r\\n\\r\\n        <!-- Module Content -->\\r\\n        <app-contacts-list perfectScrollbar></app-contacts-list>\\r\\n        <!-- Module Content -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /Module Container -->\\r\\n\\r\\n      <!-- Module Drawer -->\\r\\n      <contact-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></contact-drawer>\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n      <!-- Module Drawer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /Module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\"","export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <gx-icon name=\\\"remove\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-lg-4 text-center text-center order-lg-2\\\">\\r\\n      <img *ngIf=\\\"contact.thumb\\\" class=\\\"ml-lg-3 mb-4 mb-lg-0 dt-avatar size-120\\\" [src]=\\\"contact.thumb\\\" alt=\\\"Avatar\\\">\\r\\n      <img *ngIf=\\\"!contact.thumb\\\" class=\\\"ml-lg-3 mb-4 mb-lg-0 dt-avatar size-120\\\" src=\\\"assets/images/placeholder.jpg\\\"\\r\\n           alt=\\\"Avatar\\\">\\r\\n\\r\\n      <div class=\\\"form-group col-lg-12 mt-4\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"custom-file\\\">\\r\\n            <input type=\\\"file\\\"\\r\\n                   class=\\\"custom-file-input\\\"\\r\\n                   id=\\\"imageUrl\\\"\\r\\n                   name=\\\"imageUrl\\\"\\r\\n                   accept=\\\"image/*\\\"\\r\\n                   (change)=\\\"handleInputChange($event)\\\">\\r\\n            <label class=\\\"custom-file-label text-left\\\" for=\\\"imageUrl\\\">{{filename}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 order-lg-1\\\">\\r\\n      <form #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"First Name\\\"\\r\\n                 name=\\\"fisrt_name\\\"\\r\\n                 [(ngModel)]=\\\"contact.first_name\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Last Name\\\"\\r\\n                 name=\\\"last_name\\\"\\r\\n                 [(ngModel)]=\\\"contact.last_name\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Email\\\"\\r\\n                 name=\\\"email\\\"\\r\\n                 [(ngModel)]=\\\"contact.email\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Phone\\\"\\r\\n                 name=\\\"phone\\\"\\r\\n                 [(ngModel)]=\\\"contact.phone\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Designation\\\"\\r\\n                 name=\\\"designation\\\"\\r\\n                 [(ngModel)]=\\\"contact.designation\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <textarea type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"Designation\\\"\\r\\n                    name=\\\"bio\\\"\\r\\n                    [(ngModel)]=\\\"contact.bio\\\"></textarea>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer justify-content-start\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"contactForm.invalid\\\" (click)=\\\"onFormSubmit()\\\">\\r\\n    <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n    <span> Save Contact </span>\\r\\n  </button>\\r\\n</div>\\r\\n\"","export class Contact {\r\n  id: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  phone: string;\r\n  designation: string;\r\n  starred: boolean;\r\n  favourite: boolean;\r\n  suggested: boolean;\r\n  thumb: string;\r\n  thumb_placeholder: string;\r\n  bio: string;\r\n  location: string;\r\n  connections: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy1oZWFkZXIvY29udGFjdHMtaGVhZGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-contacts-header',\r\n  templateUrl: './contacts-header.component.html',\r\n  styleUrls: ['./contacts-header.component.scss']\r\n})\r\nexport class ContactsHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header d-none d-md-flex';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n}\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {ContactsService} from './../../contacts.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'contact-search-bar',\r\n  templateUrl: './search-bar.component.html'\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'search-box ml-n4';\r\n  searchQuery: FormControl;\r\n\r\n  constructor(private contactService: ContactsService) {\r\n    this.searchQuery = new FormControl('');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.contactService.onSearchQueryChanged.next(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL2NvbnRhY3RzL2NvbnRhY3RzLWxpc3QvY29udGFjdC1saXN0LWhlYWRlci9DOlxcVXNlcnNcXHZpbm9cXHZpbm90aFxcdHJ1c3RwcmltZS12My4xXFx0cnVzdC1wcmltZS12My9zcmNcXGFwcFxcY29udGVudFxcYXBwc1xcY29udGFjdHNcXGNvbnRhY3RzLWxpc3RcXGNvbnRhY3QtbGlzdC1oZWFkZXJcXGNvbnRhY3QtbGlzdC1oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb250ZW50L2FwcHMvY29udGFjdHMvY29udGFjdHMtbGlzdC9jb250YWN0LWxpc3QtaGVhZGVyL2NvbnRhY3QtbGlzdC1oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4iXX0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ContactsService} from './../../contacts.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-list-header',\r\n  templateUrl: './contact-list-header.component.html',\r\n  styleUrls: ['./contact-list-header.component.scss']\r\n})\r\nexport class ContactListHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'px-1 pb-4 border-bottom border-w-2 mb-1 mt-n1';\r\n  hasSelectedContacts: boolean;\r\n  isIndeterminate: boolean;\r\n  onSelectedContactsChanged: Subscription;\r\n  selected = 'None';\r\n\r\n  constructor(private contactService: ContactsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedContactsChanged =\r\n      this.contactService.onSelectedContactsChanged\r\n        .subscribe(selectedContacts => {\r\n\r\n          setTimeout(() => {\r\n            this.hasSelectedContacts = selectedContacts.length > 0;\r\n            this.isIndeterminate = (selectedContacts.length !== this.contactService.contacts.length && selectedContacts.length > 0);\r\n\r\n            if (selectedContacts.length === 0) {\r\n              this.selected = 'None';\r\n            } else if (selectedContacts.length === this.contactService.contacts.length) {\r\n              this.selected = 'All';\r\n            }\r\n          }, 0);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Toggle select all contacts\r\n   */\r\n  toggleSelectAll() {\r\n    this.contactService.toggleSelectAll();\r\n  }\r\n\r\n  /**\r\n   * Select contacts by filter\r\n   * @param selected\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectContacts(selected?, filterParameter?, filterValue?) {\r\n    this.selected = (selected) ? selected : this.selected;\r\n    this.contactService.selectContacts(filterParameter, filterValue);\r\n  }\r\n\r\n  /**\r\n   * Deselect all contacts\r\n   */\r\n  deselectContacts() {\r\n    this.contactService.deselectContacts();\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected contacts\r\n   * @param property\r\n   * @param value\r\n   */\r\n  setPropertyOnSelectedContacts(property, value) {\r\n    this.contactService.setPropertyOnSelectedContacts(property, value);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onSelectedContactsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy1saXN0L2NvbnRhY3QtbGlzdC1pdGVtL2NvbnRhY3QtbGlzdC1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {Contact} from './../../contact.model';\r\nimport {ContactsService} from './../../contacts.service';\r\nimport {EditContactComponent} from './../../edit-contact/edit-contact.component';\r\n  '';\r\n\r\n@Component({\r\n  selector: 'app-contact-list-item',\r\n  templateUrl: './contact-list-item.component.html',\r\n  styleUrls: ['./contact-list-item.component.scss']\r\n})\r\nexport class ContactListItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.selected') selected: boolean;\r\n  @Input() contact: Contact;\r\n  onSelectedContactsChanged: Subscription;\r\n\r\n  constructor(private contactService: ContactsService, private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedContactsChanged =\r\n      this.contactService.onSelectedContactsChanged\r\n        .subscribe(selectedContacts => {\r\n          this.selected = selectedContacts.find((contact: Contact) => {\r\n            return contact.id === this.contact.id;\r\n          });\r\n        });\r\n  }\r\n\r\n  onSelectedChange(event) {\r\n    this.selected = event;\r\n    this.contactService.toggleSelectedContact(this.contact.id);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.contact.starred = event;\r\n\r\n    this.contactService.saveContact(this.contact);\r\n  }\r\n\r\n  /**\r\n   * Edit a contact\r\n   * @param {Contact} contact\r\n   */\r\n  editContact(contact: Contact) {\r\n    const modalRef = this.modalService.open(EditContactComponent, { size: 'lg' });\r\n    modalRef.componentInstance.contact = contact;\r\n    modalRef.componentInstance.title = 'Edit Contact';\r\n  }\r\n\r\n  /**\r\n   * Delete a contact\r\n   * @param {Contact} contact\r\n   */\r\n  deleteContact(contact: Contact) {\r\n    this.contactService.deleteContact(contact.id);\r\n  }\r\n\r\n  /**\r\n   * Add contact in Favourite List\r\n   */\r\n  onFavouriteContact() {\r\n    this.contact.favourite = true;\r\n\r\n    this.contactService.saveContact(this.contact);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onSelectedContactsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy1saXN0L2NvbnRhY3RzLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {ContactsService} from './../contacts.service';\r\nimport {Contact} from './../contact.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-contacts-list',\r\n  templateUrl: './contacts-list.component.html',\r\n  styleUrls: ['./contacts-list.component.scss']\r\n})\r\nexport class ContactsListComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n\r\n  public contacts: Contact[] = [];\r\n  public searchQuery = '';\r\n\r\n  onContactsChanged: Subscription;\r\n  onSearchQueryChanged: Subscription;\r\n\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private contactService: ContactsService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update mails on changes\r\n    this.onContactsChanged = this.contactService.onContactsChanged\r\n      .subscribe(contacts => {\r\n        this.contacts = contacts;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      });\r\n\r\n    // Subscribe to update search keywords on changes\r\n    this.onSearchQueryChanged = this.contactService.onSearchQueryChanged\r\n      .subscribe(searchStr => {\r\n        this.searchQuery = searchStr;\r\n      });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onSearchQueryChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Subscription} from 'rxjs';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {GxHelper} from '@gaxon/helpers';\r\nimport {EditContactComponent} from './../edit-contact/edit-contact.component';\r\nimport {Contact} from './../contact.model';\r\n\r\n@Component({\r\n  selector: 'app-contacts-sidebar',\r\n  templateUrl: './contacts-sidebar.component.html',\r\n  animations: appAnimations\r\n})\r\nexport class ContactsSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private modalService: NgbModal,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  onClickNewContact() {\r\n    const modalRef = this.modalService.open(EditContactComponent, {size: 'lg', windowClass: 'contact-modal'});\r\n    modalRef.componentInstance.contact = this.createNewContact();\r\n  }\r\n\r\n  createNewContact() {\r\n    const newContact = new Contact();\r\n    newContact.id = GxHelper.generateGUID();\r\n\r\n    return newContact;\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {DrawerService} from './../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.scss']\r\n})\r\nexport class ContactsComponent implements OnInit, OnDestroy {\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {ContactsService} from './contacts.service';\r\nimport {ContactsComponent} from './contacts.component';\r\nimport {ContactsListComponent} from './contacts-list/contacts-list.component';\r\nimport {ContactListItemComponent} from './contacts-list/contact-list-item/contact-list-item.component';\r\nimport {ContactsSidebarComponent} from './contacts-sidebar/contacts-sidebar.component';\r\nimport {ContactsHeaderComponent} from './contacts-header/contacts-header.component';\r\nimport {SearchBarComponent} from './contacts-header/search-bar/search-bar.component';\r\nimport { ContactListHeaderComponent } from './contacts-list/contact-list-header/contact-list-header.component';\r\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all',\r\n    component: ContactsComponent,\r\n    resolve: {\r\n      contacts: ContactsService\r\n    }\r\n  },\r\n  {\r\n    path: ':handle',\r\n    component: ContactsComponent,\r\n    resolve: {\r\n      contacts: ContactsService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'all'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    ContactsComponent,\r\n    ContactsListComponent,\r\n    ContactListItemComponent,\r\n    ContactsSidebarComponent,\r\n    ContactsHeaderComponent,\r\n    SearchBarComponent,\r\n    ContactListHeaderComponent,\r\n    EditContactComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  entryComponents: [\r\n    EditContactComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ]\r\n})\r\nexport class ContactsModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {Contact} from './contact.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactsService implements Resolve<any> {\r\n  private contactsUrl = 'api/contacts';  // URL to web api\r\n  contacts: Contact[];\r\n  selectedContacts: Contact[] = [];\r\n  routeParams: any;\r\n\r\n  onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSelectedContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getContacts(),\r\n      ]).then(() => {\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getContacts(): Promise<Contact[]> {\r\n    if (this.routeParams.handle) {\r\n      return this.getContactsByParams(this.routeParams.handle);\r\n    } else {\r\n      return this.getAllContacts();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getAllContacts(): Promise<Contact[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get contacts by param\r\n   * @param param\r\n   * @return {Promise<Contact[]>}\r\n   */\r\n  getContactsByParams(param: any): Promise<Contact[]> {\r\n    const params = '?' + param + '=true';\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl + params)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selected contact by id\r\n   * @param id\r\n   */\r\n  toggleSelectedContact(id) {\r\n    // First, check if we already have that contact as selected\r\n    if (this.selectedContacts.length > 0) {\r\n      for (const contact of this.selectedContacts) {\r\n        // delete the selected contact\r\n        if (contact.id === id) {\r\n          const index = this.selectedContacts.indexOf(contact);\r\n\r\n          if (index !== -1) {\r\n            this.selectedContacts.splice(index, 1);\r\n\r\n            // Trigger the next event\r\n            this.onSelectedContactsChanged.next(this.selectedContacts);\r\n\r\n            // Return\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we don't have it, push in selected list\r\n    this.selectedContacts.push(\r\n      this.contacts.find(contact => {\r\n        return contact.id === id;\r\n      })\r\n    );\r\n\r\n    // Trigger the next event\r\n    this.onSelectedContactsChanged.next(this.selectedContacts);\r\n  }\r\n\r\n  /**\r\n   * Toggle select all\r\n   */\r\n  toggleSelectAll() {\r\n    if (this.selectedContacts.length > 0) {\r\n      this.deselectContacts();\r\n    } else {\r\n      this.selectContacts();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Add contact in selectedContacts list\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectContacts(filterParameter?, filterValue?) {\r\n    this.selectedContacts = [];\r\n\r\n    // If there is no filter, select all mails\r\n    if (filterParameter === undefined || filterValue === undefined) {\r\n      this.selectedContacts = this.contacts.map(x => Object.assign({}, x));\r\n    } else {\r\n      this.selectedContacts.push(...\r\n        this.contacts.filter(contact => {\r\n          return contact[filterParameter] === filterValue;\r\n        })\r\n      );\r\n    }\r\n\r\n    // Trigger the next event\r\n    this.onSelectedContactsChanged.next(this.selectedContacts);\r\n  }\r\n\r\n  /**\r\n   * Deselect all contacts\r\n   */\r\n  deselectContacts() {\r\n    this.selectedContacts = [];\r\n\r\n    // Trigger the next event\r\n    this.onSelectedContactsChanged.next(this.selectedContacts);\r\n  }\r\n\r\n  /**\r\n   * Set property on selected contacts\r\n   * @param property\r\n   * @param value\r\n   */\r\n  setPropertyOnSelectedContacts(property, value) {\r\n    this.selectedContacts.map(contact => {\r\n      contact[property] = value;\r\n\r\n      this.saveContact(contact);\r\n    });\r\n\r\n    this.deselectContacts();\r\n  }\r\n\r\n  /**\r\n   * Save a contact\r\n   * @param {Contact} contact\r\n   * @return {Promise<any>}\r\n   */\r\n  saveContact(contact: Contact) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.contactsUrl + '/' + contact.id, {...contact})\r\n        .subscribe(response => {\r\n          this.getContacts().then(contacts => {\r\n            resolve(contacts);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete a contact from data\r\n   * @param contactId\r\n   * @return {Promise<any>}\r\n   */\r\n  deleteContact(contactId) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.delete(this.contactsUrl + '/' + contactId)\r\n        .subscribe(response => {\r\n          this.getContacts().then(contacts => {\r\n            resolve(contacts);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9kcmF3ZXIvZHJhd2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'contact-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9kcmF3ZXIvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9kcmF3ZXIvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9lZGl0LWNvbnRhY3QvZWRpdC1jb250YWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {NgForm} from '@angular/forms';\r\n\r\nimport {Contact} from './../contact.model';\r\nimport {ContactsService} from './../contacts.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-contact',\r\n  templateUrl: './edit-contact.component.html',\r\n  styleUrls: ['./edit-contact.component.scss']\r\n})\r\nexport class EditContactComponent implements OnInit {\r\n  @Input() title = 'Add Contact';\r\n  @Input() contact: Contact;\r\n  private imageSrc: string = '';\r\n  filename = 'Change Thumb';\r\n\r\n  @ViewChild('contactForm', {static: false}) public contactForm: NgForm;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private contactService: ContactsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    const pattern = /image-*/;\r\n    const reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n\r\n    this.filename = file.name\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  /**\r\n   * Handle file reader loaded\r\n   * @param e\r\n   * @private\r\n   */\r\n  _handleReaderLoaded(e) {\r\n    const reader = e.target;\r\n    this.contact.thumb = reader.result;\r\n  }\r\n\r\n  /**\r\n   * On form submit call this function\r\n   */\r\n  onFormSubmit() {\r\n    if (this.contactForm.valid) {\r\n      this.contactService.saveContact(this.contact).then((response) => {\r\n        this.contactForm.resetForm();\r\n        this.activeModal.close();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"contacts-contacts-module-es5.js"}