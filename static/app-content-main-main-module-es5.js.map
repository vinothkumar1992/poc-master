{"version":3,"sources":["src/app/content/main/metrics/metrics.component.html","src/app/content/main/main.module.ts","src/app/content/main/metrics/metrics.component.scss","src/app/content/main/metrics/metrics.component.ts","src/app/content/main/metrics/metrics.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- Page Header -->\\r\\n<div class=\\\"dt-page__header\\\">\\r\\n  <h1 class=\\\"dt-page__title\\\">Metrics</h1>\\r\\n</div>\\r\\n<!-- /page header -->\\r\\n\\r\\n<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-4 col-md-6 order-md-1\\\">\\r\\n\\r\\n    <app-section-revenue-chart gxCard fullHeight class=\\\"dt-chart overflow-hidden\\\"></app-section-revenue-chart>\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-6 col-md-6 order-md-2\\\">\\r\\n\\r\\n    <app-section-static-chart gxCard fullHeight class=\\\"dt-chart overflow-hidden\\\"></app-section-static-chart>\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-3 col-md-5 col-sm-6 order-xl-6 order-md-3\\\">\\r\\n\\r\\n    <gx-echarts-liquidfill gxCard\\r\\n                           fullHeight\\r\\n                           title=\\\"Realtime Users\\\"\\r\\n                           figure=\\\"270\\\"\\r\\n                           [data]=\\\"widgets.realUsersChart\\\"></gx-echarts-liquidfill>\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-3 col-md-5 col-sm-6 order-xl-5 order-md-6\\\">\\r\\n\\r\\n    <gx-card fullHeight\\r\\n             body-class=\\\"d-flex justify-content-center align-items-center\\\"\\r\\n             [card-title]=\\\"widgets.ticketsStatus.title\\\">\\r\\n\\r\\n      <!-- Chart -->\\r\\n      <gx-chart [chartType]=\\\"widgets.ticketsStatus.chart.chartType\\\"\\r\\n                [options]=\\\"widgets.ticketsStatus.chart.options\\\"\\r\\n                [labels]=\\\"widgets.ticketsStatus.chart.labels\\\"\\r\\n                [colors]=\\\"widgets.ticketsStatus.chart.colors\\\"\\r\\n                [datasets]=\\\"widgets.ticketsStatus.chart.datasets\\\"></gx-chart>\\r\\n      <!-- /chart -->\\r\\n\\r\\n    </gx-card>\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-6 col-md-7 order-md-4\\\">\\r\\n\\r\\n    <!-- Card -->\\r\\n    <gx-referral-traffic gxCard fullHeight\\r\\n                         [chart]=\\\"widgets.referralTrafficChart\\\"\\r\\n                         [progressRecords]=\\\"widgets.progressRecords\\\"></gx-referral-traffic>\\r\\n    <!-- /card -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-2 col-md-7 order-xl-3 order-md-5\\\">\\r\\n    <!-- Grid -->\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <!-- Grid Item -->\\r\\n      <div class=\\\"col-xl-12 col-6\\\" *ngFor=\\\"let widget of simpleWidgets.slice(4, 6)\\\">\\r\\n\\r\\n        <gx-counter-card gxCard fullHeight\\r\\n                         [data]=\\\"widget\\\"\\r\\n                         [isVertical]=\\\"true\\\"\\r\\n                         [ngClass]=\\\"widget.bgColor\\\"></gx-counter-card>\\r\\n\\r\\n      </div>\\r\\n      <!-- /grid item -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /grid -->\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n</div>\\r\\n<!-- /grid -->\\r\\n\\r\\n<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-3 col-sm-6\\\" *ngFor=\\\"let widget of simpleWidgets.slice(0, 4)\\\">\\r\\n\\r\\n    <gx-counter-card gxCard fullHeight\\r\\n                     class=\\\"text-white\\\"\\r\\n                     [ngClass]=\\\"widget.bgColor\\\"\\r\\n                     [data]=\\\"widget\\\"></gx-counter-card>\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-2 col-sm-4 col-6\\\" *ngFor=\\\"let card of trendingCards.slice(4, 7)\\\">\\r\\n\\r\\n    <!-- Chart Card -->\\r\\n    <gx-trending-card gxCard fullHeight\\r\\n                      [data]=\\\"card.data\\\"\\r\\n                      [isVertical]=\\\"true\\\"\\r\\n                      [ngClass]=\\\"card.bgColor\\\">\\r\\n      <!-- Chart -->\\r\\n      <gx-chart chartClasses=\\\"rounded-bottom\\\"\\r\\n                [shadowType]=\\\"card.shadowType\\\"\\r\\n                [datasets]=\\\"card.chart.datasets\\\"\\r\\n                [labels]=\\\"card.chart.labels\\\"\\r\\n                [options]=\\\"card.chart.options\\\"\\r\\n                [colors]=\\\"card.chart.colors\\\"\\r\\n                [chartType]=\\\"card.chart.chartType\\\"\\r\\n                [gradients]=\\\"card.chart.gradients\\\"></gx-chart>\\r\\n      <!-- /chart -->\\r\\n\\r\\n    </gx-trending-card>\\r\\n    <!-- /chart card -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-6\\\">\\r\\n\\r\\n    <!-- Grid -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <!-- Grid Item -->\\r\\n      <div class=\\\"col-sm-6\\\" *ngFor=\\\"let card of trendingCards.slice(0, 4)\\\">\\r\\n\\r\\n        <!-- Chart Card -->\\r\\n        <gx-trending-card gxCard fullHeight\\r\\n                          [data]=\\\"card.data\\\">\\r\\n          <!-- Chart -->\\r\\n          <gx-chart chartClasses=\\\"rounded-bottom\\\"\\r\\n                    [shadowType]=\\\"card.shadowType\\\"\\r\\n                    [datasets]=\\\"card.chart.datasets\\\"\\r\\n                    [labels]=\\\"card.chart.labels\\\"\\r\\n                    [options]=\\\"card.chart.options\\\"\\r\\n                    [colors]=\\\"card.chart.colors\\\"\\r\\n                    [chartType]=\\\"card.chart.chartType\\\"\\r\\n                    [gradients]=\\\"card.chart.gradients\\\"></gx-chart>\\r\\n          <!-- /chart -->\\r\\n\\r\\n        </gx-trending-card>\\r\\n        <!-- /chart card -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /grid item -->\\r\\n    </div>\\r\\n    <!-- /grid -->\\r\\n\\r\\n  </div>\\r\\n  <!-- / grid Item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-md-4 col-sm-6\\\">\\r\\n\\r\\n    <!-- Chart Card -->\\r\\n    <gx-card body-class=\\\"p-5\\\">\\r\\n\\r\\n      <!-- Grid -->\\r\\n      <div class=\\\"row no-gutters\\\">\\r\\n\\r\\n        <!-- Grid Item -->\\r\\n        <div class=\\\"col-xl-5 pr-2 d-flex flex-column justify-content-center\\\">\\r\\n          <div class=\\\"d-flex align-items-center text-success\\\">\\r\\n            <span class=\\\"mb-0 display-3 font-weight-500 mr-1\\\">{{widgets.chartTrafficRaise.data.trending.value}}</span>\\r\\n            <gx-icon [name]=\\\"widgets.chartTrafficRaise.data.trending.icon\\\"></gx-icon>\\r\\n          </div>\\r\\n          <p class=\\\"mb-0 text-light-gray\\\">{{widgets.chartTrafficRaise.data.tagLine.text}}</p>\\r\\n        </div>\\r\\n        <!-- /grid item -->\\r\\n\\r\\n        <!-- Grid Item -->\\r\\n        <div class=\\\"col-xl-7\\\">\\r\\n\\r\\n          <!-- Chart -->\\r\\n          <gx-chart class=\\\"dt-chart__body\\\" chartClasses=\\\"rounded-bottom\\\"\\r\\n                    [datasets]=\\\"widgets.chartTrafficRaise.chart.datasets\\\"\\r\\n                    [labels]=\\\"widgets.chartTrafficRaise.chart.labels\\\"\\r\\n                    [options]=\\\"widgets.chartTrafficRaise.chart.options\\\"\\r\\n                    [colors]=\\\"widgets.chartTrafficRaise.chart.colors\\\"\\r\\n                    [chartType]=\\\"widgets.chartTrafficRaise.chart.chartType\\\"></gx-chart>\\r\\n          <!-- /chart -->\\r\\n\\r\\n        </div>\\r\\n        <!-- /grid item -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /grid -->\\r\\n\\r\\n    </gx-card>\\r\\n    <!-- /chart card -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-md-4\\\"\\r\\n       *ngFor=\\\"let card of trendingCards.slice(8, 10); first as isFirst; last as isLast\\\"\\r\\n       [ngClass]=\\\"{'col-sm-6':!isLast, 'col-sm-8': isLast}\\\">\\r\\n\\r\\n    <!-- Chart Card -->\\r\\n    <gx-progress-card class=\\\"overflow-hidden\\\" [data]=\\\"card.data\\\" [coloums]=\\\"card.coloums\\\">\\r\\n      <!-- Chart -->\\r\\n      <gx-chart class=\\\"dt-chart__body\\\"\\r\\n                [ngClass]=\\\"{'mb-n5 mr-n5': card.chart.chartType != 'bar'}\\\"\\r\\n                [datasets]=\\\"card.chart.datasets\\\"\\r\\n                [labels]=\\\"card.chart.labels\\\"\\r\\n                [options]=\\\"card.chart.options\\\"\\r\\n                [colors]=\\\"card.chart.colors\\\"\\r\\n                [chartType]=\\\"card.chart.chartType\\\"\\r\\n                [gradients]=\\\"card.chart.gradients\\\"></gx-chart>\\r\\n      <!-- /chart -->\\r\\n\\r\\n    </gx-progress-card>\\r\\n    <!-- /chart card -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n</div>\\r\\n<!-- /grid -->\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {SectionsModule} from '@app/content/sections/sections.module';\r\n\r\nimport {MetricsComponent} from './metrics/metrics.component';\r\nimport {MetricsService} from './metrics/metrics.service';\r\n\r\nconst appsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: './dashboards/dashboards.module#DashboardsModule'\r\n  },\r\n  {\r\n    path: 'dashboards',\r\n    loadChildren: './dashboards/dashboards.module#DashboardsModule'\r\n  },\r\n  {\r\n    path: 'widgets',\r\n    loadChildren: './widgets/widgets.module#WidgetsModule'\r\n  },\r\n  {\r\n    path: 'metrics',\r\n    component: MetricsComponent,\r\n    resolve: {\r\n      data: MetricsService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    SectionsModule,\r\n    RouterModule.forChild(appsRoutes)\r\n  ],\r\n  declarations: [\r\n    MetricsComponent\r\n  ]\r\n})\r\nexport class MainModule {\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvbWFpbi9tZXRyaWNzL21ldHJpY3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MetricsService } from './metrics.service';\r\n\r\n@Component({\r\n  selector: 'app-metrics',\r\n  templateUrl: './metrics.component.html',\r\n  styleUrls: ['./metrics.component.scss']\r\n})\r\nexport class MetricsComponent implements OnInit {\r\n  widgets: any;\r\n  simpleWidgets: any[];\r\n  trendingCards: any[];\r\n\r\n  constructor(\r\n    private metrics: MetricsService\r\n  ) {\r\n    this.widgets = this.metrics.widgets;\r\n    this.simpleWidgets = this.metrics.simpleWidgets;\r\n    this.trendingCards = this.metrics.trendingCards;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MetricsService implements Resolve<any> {\r\n  private simpleWidgetsUrl = 'api/metrics-simple-widgets';  // URL to web api\r\n  private trendingCardsUrl = 'api/metrics-trending-cards';  // URL to web api\r\n  private widgetsUrl = 'api/metrics-widgets';  // URL to web api\r\n\r\n  widgets: any;\r\n  simpleWidgets: any[];\r\n  trendingCards: any[];\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getWidgets(),\r\n        this.getSimpleWidgets(),\r\n        this.getTrendingCards()\r\n      ]).then(() => {\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get widgets\r\n   * @return {Promise<any>}\r\n   */\r\n  getWidgets(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.widgetsUrl).subscribe((widgets: any) => {\r\n        this.widgets = widgets;\r\n        resolve(widgets);\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get simple widgets\r\n   * @return {Promise<any>}\r\n   */\r\n  getSimpleWidgets(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.simpleWidgetsUrl).subscribe((widgets: any[]) => {\r\n          this.simpleWidgets = widgets;\r\n          resolve(widgets);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get trending cards\r\n   * @return {Promise<any>}\r\n   */\r\n  getTrendingCards(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.trendingCardsUrl).subscribe((cards: any[]) => {\r\n        this.trendingCards = cards;\r\n        resolve(cards);\r\n      }, reject);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"app-content-main-main-module-es5.js"}