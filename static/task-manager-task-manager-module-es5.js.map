{"version":3,"sources":["src/app/content/apps/task-manager/drawer/drawer.component.html","src/app/content/apps/task-manager/drawer/messages/messages.component.html","src/app/content/apps/task-manager/drawer/notifications/notifications.component.html","src/app/content/apps/task-manager/drawer/search/search.component.html","src/app/content/apps/task-manager/helper-widgets/badges/badges.component.html","src/app/content/apps/task-manager/helper-widgets/btn-complete/btn-complete.component.html","src/app/content/apps/task-manager/helper-widgets/header/header.component.html","src/app/content/apps/task-manager/task-details/comment-box/comment-box.component.html","src/app/content/apps/task-manager/task-details/header/assignees/assignees.component.html","src/app/content/apps/task-manager/task-details/header/date/date.component.html","src/app/content/apps/task-manager/task-details/header/header.component.html","src/app/content/apps/task-manager/task-details/header/labels/labels.component.html","src/app/content/apps/task-manager/task-details/task-conversation/task-conversation.component.html","src/app/content/apps/task-manager/task-details/task-details.component.html","src/app/content/apps/task-manager/task-list/task-list-item/task-list-item.component.html","src/app/content/apps/task-manager/task-list/task-list.component.html","src/app/content/apps/task-manager/task-manager.component.html","src/app/content/apps/task-manager/task-sidebar/task-sidebar.component.html","src/app/content/apps/task-manager/drawer/drawer.component.scss","src/app/content/apps/task-manager/drawer/drawer.component.ts","src/app/content/apps/task-manager/drawer/messages/messages.component.scss","src/app/content/apps/task-manager/drawer/messages/messages.component.ts","src/app/content/apps/task-manager/drawer/notifications/notifications.component.scss","src/app/content/apps/task-manager/drawer/notifications/notifications.component.ts","src/app/content/apps/task-manager/drawer/search/search.component.scss","src/app/content/apps/task-manager/drawer/search/search.component.ts","src/app/content/apps/task-manager/helper-widgets/badges/badges.component.ts","src/app/content/apps/task-manager/helper-widgets/btn-complete/btn-complete.component.ts","src/app/content/apps/task-manager/helper-widgets/header/header.component.ts","src/app/content/apps/task-manager/task-details/comment-box/comment-box.component.ts","src/app/content/apps/task-manager/task-details/header/assignees/assignees.component.ts","src/app/content/apps/task-manager/task-details/header/date/date.component.ts","src/app/content/apps/task-manager/task-details/header/header.component.ts","src/app/content/apps/task-manager/task-details/header/labels/labels.component.ts","src/app/content/apps/task-manager/task-details/task-conversation/task-conversation.component.ts","src/app/content/apps/task-manager/task-details/task-details.component.ts","src/app/content/apps/task-manager/task-list/task-list-item/task-list-item.component.scss","src/app/content/apps/task-manager/task-list/task-list-item/task-list-item.component.ts","src/app/content/apps/task-manager/task-list/task-list.component.scss","src/app/content/apps/task-manager/task-list/task-list.component.ts","src/app/content/apps/task-manager/task-manager.component.scss","src/app/content/apps/task-manager/task-manager.component.ts","src/app/content/apps/task-manager/task-manager.module.ts","src/app/content/apps/task-manager/task-manager.service.ts","src/app/content/apps/task-manager/task-sidebar/task-sidebar.component.scss","src/app/content/apps/task-manager/task-sidebar/task-sidebar.component.ts","src/app/content/apps/task-manager/task.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'messages'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'messages')\\\">\\r\\n            <gx-icon name=\\\"message\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" ngbDropdown>\\r\\n          <!-- Dropdown Button -->\\r\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow dt-action-nav__link\\\" ngbDropdownToggle>\\r\\n            <gx-icon name=\\\"circle-add-o\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n          <!-- /dropdown button -->\\r\\n\\r\\n          <!-- Dropdown Menu -->\\r\\n          <div ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Project</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onCreateTask()\\\">Add New Task</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Team Member</a>\\r\\n          </div>\\r\\n          <!-- /dropdown menu -->\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'messages'}\\\" perfectScrollbar>\\r\\n        <todo-messages></todo-messages>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Messages ({{messages.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let message of messages\\\">\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body text-truncate\\\">\\r\\n    <span class=\\\"user-name mb-1\\\">{{message.name}}</span>\\r\\n    <span class=\\\"message text-light-gray text-truncate\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n  <span class=\\\"action-area h-100 min-w-80 text-right\\\">\\r\\n    <span class=\\\"meta-date mb-1\\\">{{message.time}}</span>\\r\\n\\r\\n    <ng-template #tipContent>{{message.read ? 'Mark as read' : 'Mark as unread'}}</ng-template>\\r\\n\\r\\n    <!-- Toggle Button -->\\r\\n    <span class=\\\"toggle-button\\\"\\r\\n          [ngClass]=\\\"{'active':message.read}\\\"\\r\\n          [ngbTooltip]=\\\"tipContent\\\"\\r\\n          (click)=\\\"message.read = !message.read\\\">\\r\\n      <span class=\\\"show\\\"><gx-icon name=\\\"dot-o\\\" [fw]=\\\"true\\\" class=\\\"f-10 text-light-gray\\\"></gx-icon></span>\\r\\n      <span class=\\\"hide\\\"><gx-icon name=\\\"dot\\\" [fw]=\\\"true\\\"  class=\\\"f-10 text-light-gray\\\"></gx-icon></span>\\r\\n    </span>\\r\\n    <!-- /toggle button -->\\r\\n  </span>\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<div *ngIf=\\\"wrap; else unwrapped\\\">\\r\\n  <div class=\\\"badge-group\\\">\\r\\n<span *ngFor=\\\"let lid of items\\\" class=\\\"badge\\\"\\r\\n      [ngClass]=\\\"labels | getById:lid:'color'\\\">{{labels | getById:lid:'title'}}</span>\\r\\n\\r\\n    <span *ngIf=\\\"!showAll && ids.length > 2\\\" #moreBadges class=\\\"badge badge-light\\\">...</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #unwrapped>\\r\\n  <div class=\\\"badge-group\\\">\\r\\n<span *ngFor=\\\"let lid of items\\\" class=\\\"badge\\\"\\r\\n      [ngClass]=\\\"labels | getById:lid:'color'\\\">{{labels | getById:lid:'title'}}</span>\\r\\n\\r\\n    <span *ngIf=\\\"!showAll && ids.length > 2\\\" #moreBadges class=\\\"badge badge-light\\\">...</span>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<span *ngIf=\\\"display === 'checkbox'; else typeBtn\\\" class=\\\"dt-checkbox dt-checkbox-icon dt-checkbox-only mr-4\\\" [ngClass]=\\\"{'active':task.completed}\\\"\\r\\n      (click)=\\\"$event.stopPropagation()\\\">\\r\\n  <input id=\\\"task-checkbox-{{task.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"task.completed\\\" (change)=\\\"onToggleChange()\\\">\\r\\n  <label class=\\\"font-weight-light dt-checkbox-content\\\" for=\\\"task-checkbox-{{task.id}}\\\">\\r\\n    <span class=\\\"unchecked\\\">\\r\\n      <gx-icon name=\\\"circle-check-o\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n    </span>\\r\\n    <span class=\\\"checked\\\">\\r\\n      <gx-icon name=\\\"circle-check-o\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"text-success\\\"></gx-icon>\\r\\n    </span>\\r\\n  </label>\\r\\n</span>\\r\\n\\r\\n<ng-template #typeBtn>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-sm mb-2 mr-5\\\"\\r\\n          [ngClass]=\\\"{'btn-success text-white':task.completed,'btn-outline-dark':!task.completed}\\\"\\r\\n          (click)=\\\"onToggleClick()\\\"\\r\\n          data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\">\\r\\n    <gx-icon name=\\\"check\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n    {{task.completed? 'Completed':'Mark As Done'}}\\r\\n  </button>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<!-- Dropdown -->\\r\\n<div *ngIf=\\\"!isTask\\\" class=\\\"dropdown\\\" ngbDropdown>\\r\\n\\r\\n  <!-- Dropdown Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n    Tasks\\r\\n  </a>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Something else here</a>\\r\\n    <div class=\\\"dropdown-divider\\\"></div>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Separated link</a>\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\\r\\n<!-- Back -->\\r\\n<a class=\\\"text-dark\\\" *ngIf=\\\"isTask\\\" href=\\\"#back\\\" (click)=\\\"goToBack($event)\\\">\\r\\n  <gx-icon name=\\\"arrow-left\\\" size=\\\"1x\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n  <span class=\\\"display-6 align-middle ml-1\\\">Back</span>\\r\\n</a>\\r\\n<!-- /back -->\\r\\n\\r\\n<!-- Title -->\\r\\n<div class=\\\"mx-auto text-center\\\">\\r\\n  <h3 class=\\\"dt-module__title\\\">{{title}}</h3>\\r\\n  <gx-icon name=\\\"horizontal-more\\\" size=\\\"xl\\\"></gx-icon>\\r\\n</div>\\r\\n<!-- Title -->\\r\\n\\r\\n<!-- Filter -->\\r\\n<a *ngIf=\\\"!isTask\\\" class=\\\"dt-module__filter text-dark\\\" href=\\\"javascript:void(0)\\\">\\r\\n  <gx-icon name=\\\"filter-new\\\" size=\\\"xl\\\"></gx-icon>\\r\\n</a>\\r\\n<!-- /filter -->\\r\\n\"","export default \"<form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"commentForm.valid && sendComment()\\\">\\r\\n  <!-- Action Tools -->\\r\\n  <div class=\\\"action-tools\\\">\\r\\n    <button class=\\\"btn btn-primary dt-fab-btn\\\" type=\\\"submit\\\" [disabled]=\\\"commentForm.invalid\\\">\\r\\n      <gx-icon name=\\\"send-new\\\" size=\\\"xl\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"dt-fab-btn dt-attachment-btn size-30\\\">\\r\\n      <input type=\\\"file\\\">\\r\\n      <gx-icon name=\\\"attach-v\\\"></gx-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /action tools -->\\r\\n\\r\\n  <!-- Media -->\\r\\n  <bs-media-object [img]=\\\"{url: currentUser.thumb, alt: currentUser.name, classlist: 'dt-avatar mr-2'}\\\">\\r\\n    <!-- Text Area -->\\r\\n    <textarea class=\\\"form-control border-0 shadow-none bg-focus\\\"\\r\\n              rows=\\\"1\\\"\\r\\n              name=\\\"notes\\\"\\r\\n              formControlName=\\\"notes\\\"\\r\\n              (keydown)=\\\"onKeyDown($event)\\\"\\r\\n              required\\r\\n              placeholder=\\\"Write your comment...\\\"></textarea>\\r\\n    <!-- /text area -->\\r\\n  </bs-media-object>\\r\\n  <!-- /media -->\\r\\n</form>\\r\\n\"","export default \"<!-- Dropdown -->\\r\\n<div class=\\\"mb-2\\\" ngbDropdown>\\r\\n  <!-- Dropdown Link -->\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow dt-avatar-wrapper text-dark\\\" ngbDropdownToggle>\\r\\n    <!-- Module Assignee -->\\r\\n    <ng-container *ngIf=\\\"task.user_id; else unassigned\\\">\\r\\n      <ng-container #user=\\\"item\\\"\\r\\n                    [getbyid]=\\\"task.user_id\\\"\\r\\n                    [items]=\\\"assignees\\\">\\r\\n        <gx-avatar [user]=\\\"user.data\\\"\\r\\n                   class=\\\"size-35\\\"></gx-avatar>\\r\\n        <span class=\\\"dt-avatar-info\\\">\\r\\n            <span class=\\\"dt-avatar-name\\\">{{user.data.name}}</span>\\r\\n          </span>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-template #unassigned>\\r\\n      <span class=\\\"dt-avatar\\\"><gx-icon name=\\\"user\\\" size=\\\"xl\\\"></gx-icon></span>\\r\\n\\r\\n      <span class=\\\"dt-avatar-info\\\">\\r\\n        <span class=\\\"dt-avatar-name\\\">Unassigned</span>\\r\\n      </span>\\r\\n    </ng-template>\\r\\n  </a>\\r\\n  <!-- /dropdown link -->\\r\\n\\r\\n  <!-- Dropdown Option -->\\r\\n  <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\r\\n    <ng-container *ngFor=\\\"let assignee of assignees\\\">\\r\\n      <a class=\\\"dropdown-item dt-avatar-wrapper\\\"\\r\\n         (click)=\\\"onAssigneeChange(assignee.id)\\\"\\r\\n         [ngClass]=\\\"{'active':assignee.id==task.user_id}\\\"\\r\\n         href=\\\"javascript:void(0)\\\">\\r\\n\\r\\n        <gx-avatar [user]=\\\"assignee\\\"\\r\\n                   class=\\\"size-30\\\"></gx-avatar>\\r\\n        <span class=\\\"dt-avatar-info\\\">\\r\\n            <span class=\\\"dt-avatar-name\\\">{{assignee.name}}</span>\\r\\n          </span>\\r\\n      </a>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n  <!-- /dropdown option -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<!-- Calender -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"text-dark d-inline-block mb-2 mr-6\\\" data-target-input=\\\"nearest\\\">\\r\\n  <div class=\\\"dt-avatar-wrapper\\\" data-target=\\\"#date-time-picker-1\\\" data-toggle=\\\"datetimepicker\\\">\\r\\n    <input\\r\\n      [hidden]=\\\"true\\\"\\r\\n      name=\\\"dueDate\\\"\\r\\n      [min]=\\\"task.created\\\"\\r\\n      [(ngModel)]=\\\"task.dueDate\\\"\\r\\n      (dateTimeChange)=\\\"onDuedateChange()\\\"\\r\\n      [owlDateTime]=\\\"dueDatePicker\\\"/>\\r\\n    <owl-date-time pickerType=\\\"calendar\\\" [pickerMode]=\\\"'dialog'\\\" #dueDatePicker></owl-date-time>\\r\\n    <span class=\\\"dt-avatar dt-avatar__outline size-35\\\" [owlDateTimeTrigger]=\\\"dueDatePicker\\\">\\r\\n          <gx-icon name=\\\"calendar\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        </span>\\r\\n    <span class=\\\"dt-avatar-info\\\" [owlDateTimeTrigger]=\\\"dueDatePicker\\\">\\r\\n          <span class=\\\"dt-avatar-name\\\">{{ task.dueDate | date:\\\"d MMMM, yy\\\" }}</span>\\r\\n        </span>\\r\\n  </div>\\r\\n</a>\\r\\n<!-- /calender -->\\r\\n\"","export default \"<!-- Complete Button -->\\r\\n<btn-complete [task]=\\\"task\\\" display=\\\"button\\\"></btn-complete>\\r\\n<!-- /Complete Button -->\\r\\n\\r\\n<!-- Labels -->\\r\\n<task-labels [task]=\\\"task\\\"></task-labels>\\r\\n<!-- /Labels -->\\r\\n\\r\\n<!-- Calender -->\\r\\n<task-date [task]=\\\"task\\\"></task-date>\\r\\n<!-- /calender -->\\r\\n\\r\\n<!-- Assignees -->\\r\\n<task-assignees [task]=\\\"task\\\"></task-assignees>\\r\\n<!-- /Assignees -->\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n  <a class=\\\"no-arrow dt-avatar dt-avatar__outline size-30\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"vertical-more\\\" [fw]=\\\"true\\\" size=\\\"sm\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <div ngbDropdownMenu>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Something else here</a>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<!-- Dropdown -->\\r\\n<div class=\\\"mb-2 mr-6\\\" ngbDropdown>\\r\\n  <!-- Dropdown Button -->\\r\\n  <button class=\\\"btn btn-outline-dark btn-sm\\\" type=\\\"button\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"check\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n    Label\\r\\n  </button>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu>\\r\\n    <a *ngFor=\\\"let label of labels\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n       (click)=\\\"onToggleLabel(label.id)\\\">\\r\\n      <gx-icon name=\\\"box-check\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\" *ngIf=\\\"hasLabel(label.id)\\\"></gx-icon>\\r\\n      <gx-icon name=\\\"box-o\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\" *ngIf=\\\"!hasLabel(label.id)\\\"></gx-icon>\\r\\n      {{label.title}}\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<a *ngIf=\\\"itemFrom > 0\\\"\\r\\n   class=\\\"d-inline-block mb-6 text-decoration-underline\\\"\\r\\n   href=\\\"javascript:void(0)\\\"\\r\\n  (click)=\\\"showOlder()\\\">\\r\\n  +{{itemFrom}} Previous messages\\r\\n</a>\\r\\n\\r\\n<ng-container *ngFor=\\\"let comment of comments\\\"\\r\\n              #user=\\\"item\\\"\\r\\n              [getbyid]=\\\"comment.user_id\\\"\\r\\n              [items]=\\\"assignees\\\">\\r\\n\\r\\n  <!-- Media -->\\r\\n  <bs-media-object class=\\\"mb-6\\\"\\r\\n                   [img]=\\\"{url: user.data.thumb, alt: user.data.name, classlist: 'dt-avatar size-25 mr-4'}\\\">\\r\\n\\r\\n    <h5 class=\\\"text-light-gray mb-1\\\">\\r\\n      {{user.data.name}}\\r\\n      <span class=\\\"d-inline-block f-12 ml-2\\\">{{comment.createdeAt | timeAgo}}</span>\\r\\n    </h5>\\r\\n    <p class=\\\"mb-0 text-dark\\\">{{comment.notes}}</p>\\r\\n\\r\\n  </bs-media-object>\\r\\n  <!-- /media -->\\r\\n\\r\\n</ng-container>\\r\\n\"","export default \"<!-- Module Header -->\\r\\n<setion-header [title]=\\\"projects | getById:currentTask.project_id:'title'\\\"></setion-header>\\r\\n<!-- /module header -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__content position-relative\\\" perfectScrollbar>\\r\\n\\r\\n  <!-- Module Content Inner -->\\r\\n  <div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n    <!-- task header -->\\r\\n    <task-header [task]=\\\"currentTask\\\"></task-header>\\r\\n    <!-- /task header -->\\r\\n\\r\\n    <!-- Form -->\\r\\n    <form [formGroup]=\\\"taskForm\\\">\\r\\n\\r\\n      <h2 class=\\\"display-4\\\">\\r\\n        {{currentTask.title}}\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"ml-auto\\\" (click)=\\\"editTitle = !editTitle\\\">\\r\\n          <gx-icon name=\\\"editors\\\"></gx-icon>\\r\\n        </a>\\r\\n      </h2>\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"editTitle\\\">\\r\\n        <textarea class=\\\"form-control bg-focus display-4\\\"\\r\\n                rows=\\\"2\\\"\\r\\n                name=\\\"title\\\"\\r\\n                formControlName=\\\"title\\\"\\r\\n                placeholder=\\\"Title\\\"></textarea>\\r\\n\\r\\n        <button class=\\\"btn btn-primary btn-xs mt-1\\\" (click)=\\\"editTitle = !editTitle\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n      <!-- Badges -->\\r\\n      <task-badges class=\\\"d-block mb-5\\\" [wrap]=\\\"true\\\"\\r\\n                   [ids]=\\\"currentTask.labels\\\"\\r\\n                   [labels]=\\\"labels\\\"></task-badges>\\r\\n      <!-- /badges -->\\r\\n\\r\\n      <!-- Text Area -->\\r\\n      <div class=\\\"form-group d-flex\\\">\\r\\n        <gx-icon name=\\\"forms-advanced\\\" class=\\\"mt-2 mr-1\\\"></gx-icon>\\r\\n        <textarea class=\\\"form-control border-0 shadow-none bg-focus\\\"\\r\\n                  rows=\\\"2\\\"\\r\\n                  name=\\\"content\\\"\\r\\n                  formControlName=\\\"content\\\"\\r\\n                  placeholder=\\\"Description\\\"></textarea>\\r\\n      </div>\\r\\n      <!-- /text area -->\\r\\n\\r\\n    </form>\\r\\n    <!-- /form -->\\r\\n\\r\\n    <!-- Separator -->\\r\\n    <hr class=\\\"my-7\\\">\\r\\n    <!-- /separator -->\\r\\n\\r\\n    <app-task-conversation></app-task-conversation>\\r\\n\\r\\n  </div>\\r\\n  <!-- /module content inner -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- Comment Box -->\\r\\n<app-comment-box></app-comment-box>\\r\\n<!-- /comment box -->\\r\\n\"","export default \"<!-- Checkbox Icon -->\\r\\n<btn-complete [task]=\\\"task\\\"></btn-complete>\\r\\n<!-- /checkbox icon -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<a href=\\\"#{{task.id}}\\\"\\r\\n   (click)=\\\"onClickTask($event, task.id)\\\"\\r\\n   class=\\\"dt-module__list-item-content\\\"\\r\\n   [ngClass]=\\\"{'complete':task.completed}\\\">{{task.title || 'New Task'}}</a>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n\\r\\n  <!-- Badges -->\\r\\n  <task-badges [ids]=\\\"task.labels\\\"\\r\\n               [labels]=\\\"labels\\\"\\r\\n               [showAll]=\\\"false\\\"></task-badges>\\r\\n  <!-- /badges -->\\r\\n\\r\\n  <!-- Module Date -->\\r\\n  <span>{{ task.dueDate | date:\\\"MMMM d\\\" }}</span>\\r\\n\\r\\n  <!-- Module Assignee -->\\r\\n  <ng-container *ngIf=\\\"task.user_id\\\" #user=\\\"item\\\" [getbyid]=\\\"task.user_id\\\" [items]=\\\"assignees\\\">\\r\\n    <gx-avatar [user]=\\\"user.data\\\" class=\\\"size-25\\\"></gx-avatar>\\r\\n  </ng-container>\\r\\n\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Header -->\\r\\n<setion-header [title]=\\\"module_title\\\"></setion-header>\\r\\n<!-- /module header -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__content position-relative\\\" perfectScrollbar>\\r\\n\\r\\n  <!-- Module Content Inner -->\\r\\n  <div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n    <p *ngIf=\\\"sections.length === 0\\\" class=\\\"text-center\\\">No record found.</p>\\r\\n\\r\\n    <!-- Module List -->\\r\\n    <ng-container *ngFor=\\\"let section of sections; index as i_section; first as isFirstSection\\\">\\r\\n      <div *ngIf=\\\"section.tasks.length > 0\\\"\\r\\n           class=\\\"dt-module__list\\\">\\r\\n\\r\\n        <!-- Module Heading -->\\r\\n        <h5 *ngIf=\\\"section.title\\\" class=\\\"text-light-gray mb-2\\\">{{section.title}}</h5>\\r\\n        <!-- /module heading -->\\r\\n\\r\\n        <!-- Module Item -->\\r\\n        <ng-container *ngFor=\\\"let task of section.tasks; index as i; first as isFirst\\\">\\r\\n          <app-task-list-item\\r\\n            *ngIf=\\\"!task.deleted\\\"\\r\\n            [task]=\\\"task\\\"></app-task-list-item>\\r\\n        </ng-container>\\r\\n        <!-- /module item -->\\r\\n\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <!-- /Module List -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /module content inner -->\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module\\\">\\r\\n\\r\\n      <!-- Module Sidebar -->\\r\\n      <app-task-sidebar></app-task-sidebar>\\r\\n      <!-- /module sidebar -->\\r\\n\\r\\n      <!-- Module List -->\\r\\n      <app-task-list [hidden]=\\\"currentTask\\\"></app-task-list>\\r\\n      <!-- /module list -->\\r\\n\\r\\n      <!-- Module details -->\\r\\n      <app-task-details *ngIf=\\\"currentTask\\\"></app-task-details>\\r\\n      <!-- /module list -->\\r\\n\\r\\n      <todo-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></todo-drawer>\\r\\n\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n    </div>\\r\\n    <!-- /module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\"","export default \"<!-- Sidebar Header -->\\r\\n<div class=\\\"dt-module__sidebar-header\\\">\\r\\n\\r\\n  <!-- App Quick Menu -->\\r\\n  <div class=\\\"quick-menu-list\\\">\\r\\n    <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n       href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n       (click)=\\\"toggleNavigation($event)\\\">\\r\\n      <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Search Box -->\\r\\n    <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Search in app...\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n        <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n    </form>\\r\\n    <!-- /search box -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n      <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n      <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'messages'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'messages')\\\">\\r\\n      <gx-icon name=\\\"message\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <div class=\\\"quick-menu\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"circle-add-o\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <!-- Dropdown Menu -->\\r\\n      <div ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Project</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onCreateTask()\\\">Add New Task</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Team Member</a>\\r\\n      </div>\\r\\n      <!-- /dropdown menu -->\\r\\n    </div>\\r\\n    <!-- /dropdown -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n       (click)=\\\"toggleOpen($event)\\\">\\r\\n      <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /app quick menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /sidebar header -->\\r\\n\\r\\n<!-- Sidebar Content -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\" perfectScrollbar>\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner pt-md-7\\\">\\r\\n    <!-- Sidebar Navigation -->\\r\\n    <ul class=\\\"dt-module-side-nav\\\">\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">QUICK MENU</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/dashboard'\\\">\\r\\n          <gx-icon name=\\\"dashboard\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/user/'+currentUser.id\\\">\\r\\n          <gx-icon name=\\\"description\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">My Tasks</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/user/watchlist'\\\">\\r\\n          <gx-icon name=\\\"users\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">My Watchlist</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">PROJECTS</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          *ngFor=\\\"let project of projects; index as i; first as isFirst\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/project/'+project.id\\\">\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{project.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n    </ul>\\r\\n    <!-- /sidebar navigation -->\\r\\n\\r\\n    <!-- Contacts -->\\r\\n    <div class=\\\"dt-contacts contacts-list\\\">\\r\\n\\r\\n      <!-- Contact Heading -->\\r\\n      <h6 class=\\\"dt-contact__heading text-uppercase\\\">Team</h6>\\r\\n      <!-- /contact heading -->\\r\\n\\r\\n      <div class=\\\"action-area\\\">\\r\\n        <ul class=\\\"dt-team-list\\\">\\r\\n          <li *ngFor=\\\"let user of assignees; last as isLast\\\" [ngClass]=\\\"{'mb-2':!isLast}\\\">\\r\\n            <!-- Avatar -->\\r\\n            <a [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/user/'+user.id\\\">\\r\\n              <gx-avatar [user]=\\\"user\\\" class=\\\"size-30\\\"></gx-avatar>\\r\\n            </a>\\r\\n            <!-- /avatar -->\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- contacts -->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar content -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL2RyYXdlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {Task} from './../task';\r\nimport {GxHelper} from '@gaxon/helpers';\r\n\r\n@Component({\r\n  selector: 'todo-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService, private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Create new Task\r\n   */\r\n  onCreateTask() {\r\n    const newTask = new Task();\r\n    newTask.id = GxHelper.UUID();\r\n    newTask.created = new Date();\r\n    newTask.labels = [];\r\n    newTask.user_id = '';\r\n\r\n    if (this.tasksService.currentProject) {\r\n      newTask.project_id = this.tasksService.currentProject.id;\r\n    }\r\n\r\n    this.tasksService.addTask(newTask).then((response) => {\r\n      this.drawer.isOpen = false;\r\n      this.drawerService.update(this.drawer);\r\n\r\n      this.tasksService.setCurrentTask(newTask.id);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss']\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'task-badges',\r\n  templateUrl: './badges.component.html'\r\n})\r\nexport class BadgesComponent implements OnInit {\r\n  @Input() wrap: false;\r\n  @Input() ids: number[];\r\n  @Input() labels: any[];\r\n  @Input() showAll = true;\r\n\r\n  items: number[];\r\n\r\n  ngOnInit() {\r\n    if(this.showAll) {\r\n      this.items = this.ids;\r\n    } else {\r\n      this.items = this.ids.slice(0, 2);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'btn-complete',\r\n  templateUrl: './btn-complete.component.html'\r\n})\r\nexport class BtnCompleteComponent implements OnInit {\r\n  @Input() task: Task;\r\n  @Input() display = 'checkbox';\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onToggleClick() {\r\n    this.task.completed = !this.task.completed;\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n  /**\r\n   * On Toggle complete status change\r\n   */\r\n  onToggleChange() {\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n}\r\n","import {Component, OnDestroy, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'setion-header',\r\n  templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header';\r\n  @Input() title: string;\r\n  @Input() isTask = false;\r\n\r\n  currentTask: Task;\r\n  onCurrentTaskChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update current task on changes\r\n    this.onCurrentTaskChanged =\r\n      this.tasksService.onCurrentTaskChanged\r\n        .subscribe(task => {\r\n          if (task) {\r\n            this.currentTask = task;\r\n            this.isTask = true;\r\n          } else {\r\n            this.isTask = false;\r\n          }\r\n        });\r\n  }\r\n\r\n  goToBack(event) {\r\n    event.preventDefault();\r\n\r\n    this.tasksService.setCurrentTask(null);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentTaskChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Assignee} from './../../assignee';\r\n\r\n@Component({\r\n  selector: 'app-comment-box',\r\n  templateUrl: './comment-box.component.html'\r\n})\r\nexport class CommentBoxComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'add-comment-box';\r\n  currentUser: Assignee;\r\n\r\n  commentForm: FormGroup;\r\n\r\n  constructor(private tasksService: TaskManagerService, private formBuilder: FormBuilder) {\r\n    this.currentUser = this.tasksService.currentUser;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  /**\r\n   * Create form for Task\r\n   */\r\n  createForm() {\r\n    this.commentForm = this.formBuilder.group({\r\n      user_id: this.currentUser.id,\r\n      notes: '',\r\n      createdeAt: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Call function on keydown\r\n   * @param event\r\n   */\r\n  onKeyDown(event) {\r\n    if (event.keyCode === 13 && this.commentForm.valid) {\r\n      if (!event.shiftKey) {\r\n        this.sendComment();\r\n        event.preventDefault();\r\n      }\r\n      // rest of your code\r\n    } else if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send new comment\r\n   */\r\n  sendComment() {\r\n    this.commentForm.value.createdeAt = new Date();\r\n    if(this.tasksService.saveComment(this.commentForm.value)) {\r\n      this.createForm();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {TaskManagerService} from './../../../task-manager.service';\r\nimport {Task} from './../../../task';\r\nimport {Assignee} from './../../../assignee';\r\n\r\n@Component({\r\n  selector: 'task-assignees',\r\n  templateUrl: './assignees.component.html'\r\n})\r\nexport class AssigneesComponent implements OnInit, OnDestroy {\r\n  @Input() task: Task;\r\n  assignees: Assignee[] = [];\r\n  onAssigneesChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n  }\r\n\r\n  onAssigneeChange(assigneeId) {\r\n    this.task.user_id = assigneeId;\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onAssigneesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TaskManagerService} from './../../../task-manager.service';\r\nimport {Task} from './../../../task';\r\n\r\n@Component({\r\n  selector: 'task-date',\r\n  templateUrl: './date.component.html'\r\n})\r\nexport class DateComponent implements OnInit {\r\n  @Input() task: Task;\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDuedateChange() {\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'task-header',\r\n  templateUrl: './header.component.html'\r\n})\r\nexport class TaskHeaderComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'd-flex flex-wrap align-items-center mb-5';\r\n  @Input() task: Task;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {TaskManagerService} from './../../../task-manager.service';\r\nimport {Task} from './../../../task';\r\n\r\n@Component({\r\n  selector: 'task-labels',\r\n  templateUrl: './labels.component.html'\r\n})\r\nexport class LabelsComponent implements OnInit, OnDestroy {\r\n  @Input() task: Task;\r\n  labels: any[] = [];\r\n  onLabelsChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.tasksService.onLabelsChanged\r\n        .subscribe(labels => {\r\n          this.labels = labels;\r\n        });\r\n  }\r\n\r\n  hasLabel(labelId) {\r\n    return this.tasksService.hasLabel(labelId, this.task);\r\n  }\r\n\r\n  onToggleLabel(labelId) {\r\n    this.tasksService.toggleLabel(labelId, this.task);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Assignee} from './../../assignee';\r\n\r\n@Component({\r\n  selector: 'app-task-conversation',\r\n  templateUrl: './task-conversation.component.html'\r\n})\r\nexport class TaskConversationComponent implements OnInit, OnDestroy {\r\n  itemFrom: number;\r\n  itemTo: number;\r\n  limit = 2;\r\n  private _items: any[] = [];\r\n\r\n  comments: any[] = [];\r\n  assignees: Assignee[] = [];\r\n\r\n  onTaskConversationChanged: Subscription;\r\n  onAssigneesChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update task conversation on changes\r\n    this.onTaskConversationChanged =\r\n      this.tasksService.onTaskConversationChanged\r\n        .subscribe(data => {\r\n          if(data.id) {\r\n            this._items = data.conversations;\r\n\r\n            if (this.limit >= this._items.length) {\r\n              this.itemFrom = 0;\r\n              this.comments = this._items;\r\n            } else {\r\n              this.itemFrom = this._items.length - this.limit;\r\n              this.itemTo = this._items.length;\r\n              this.comments = this._items.slice(this.itemFrom, this.itemTo);\r\n            }\r\n          }\r\n        });\r\n\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n  }\r\n\r\n  showOlder() {\r\n    if (this.itemFrom - this.limit >= 0) {\r\n      this.itemFrom -= this.limit;\r\n    } else {\r\n      this.itemFrom = 0;\r\n    }\r\n\r\n    this.comments = this._items.slice(this.itemFrom, this.itemTo);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onTaskConversationChanged.unsubscribe();\r\n    this.onAssigneesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {Project} from './../project';\r\nimport {Task} from './../task';\r\nimport {Assignee} from './../assignee';\r\n\r\n@Component({\r\n  selector: 'app-task-details',\r\n  templateUrl: './task-details.component.html'\r\n})\r\nexport class TaskDetailsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__container';\r\n\r\n  projects: Project[];\r\n  currentUser: Assignee;\r\n  currentTask: Task;\r\n  labels: any[] = [];\r\n  taskForm: FormGroup;\r\n\r\n  onProjectsChanged: Subscription;\r\n  onCurrentTaskChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFormChange: any;\r\n  editTitle = false;\r\n\r\n  constructor(private tasksService: TaskManagerService, private formBuilder: FormBuilder) {\r\n    this.currentUser = this.tasksService.currentUser;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update projects on changes\r\n    this.onProjectsChanged =\r\n      this.tasksService.onProjectsChanged\r\n        .subscribe(projects => {\r\n          this.projects = projects;\r\n        });\r\n\r\n    // Subscribe to update current task on changes\r\n    this.onCurrentTaskChanged =\r\n      this.tasksService.onCurrentTaskChanged\r\n        .subscribe(task => {\r\n          if (task) {\r\n            this.currentTask = task;\r\n\r\n            this.taskForm = this.createTaskForm();\r\n\r\n            this.onFormChange = this.taskForm.valueChanges.pipe(\r\n              debounceTime(500),\r\n              distinctUntilChanged()\r\n            ).subscribe((data: Task) => {\r\n              this.currentTask = data;\r\n              this.tasksService.updateTask(data);\r\n            });\r\n          }\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.tasksService.onLabelsChanged\r\n        .subscribe(labels => {\r\n          this.labels = labels;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Create form for Task\r\n   */\r\n  createTaskForm() {\r\n    return this.formBuilder.group({\r\n      id: [this.currentTask.id],\r\n      title: [this.currentTask.title],\r\n      content: [this.currentTask.content],\r\n      completed: [this.currentTask.completed],\r\n      labels: [this.currentTask.labels],\r\n      created: [this.currentTask.created],\r\n      dueDate: [this.currentTask.dueDate],\r\n      user_id: [this.currentTask.user_id],\r\n      project_id: [this.currentTask.project_id],\r\n      deleted: [this.currentTask.deleted]\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onProjectsChanged.unsubscribe();\r\n    this.onCurrentTaskChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n\r\n    if (this.onFormChange) {\r\n      this.onFormChange.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1saXN0L3Rhc2stbGlzdC1pdGVtL3Rhc2stbGlzdC1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Assignee} from './../../assignee';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'app-task-list-item',\r\n  templateUrl: './task-list-item.component.html',\r\n  styleUrls: ['./task-list-item.component.scss']\r\n})\r\nexport class TaskListItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.completed') completed: boolean;\r\n\r\n  @Input() task: Task;\r\n  assignees: Assignee[] = [];\r\n  labels: any[] = [];\r\n\r\n  onAssigneesChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.completed = this.task.completed;\r\n\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.tasksService.onLabelsChanged\r\n        .subscribe(labels => {\r\n          this.labels = labels;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * On Click Task\r\n   * @param event\r\n   * @param taskId\r\n   */\r\n  onClickTask(event, taskId) {\r\n    event.preventDefault();\r\n\r\n    // Set current Task\r\n    this.tasksService.setCurrentTask(taskId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onAssigneesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {Section} from './../section';\r\nimport {Task} from './../task';\r\nimport {Project} from './../project';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.scss']\r\n})\r\nexport class TaskListComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__container';\r\n  newSection: Section;\r\n  sections: Section[] = [];\r\n  tasks: Task[] = [];\r\n  currentProject: Project;\r\n\r\n  module_title = 'Dashboard';\r\n\r\n  onTasksChanged: Subscription;\r\n  onCurrentProjectChanged: Subscription;\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update sections on changes\r\n    this.onTasksChanged =\r\n      this.tasksService.onTasksChanged\r\n        .subscribe(tasks => {\r\n          this.tasks = tasks;\r\n          this.sections = [];\r\n\r\n          if (this.currentProject) {\r\n            this.setSections();\r\n          } else {\r\n            this.sections.push({title: '', tasks: this.tasks});\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.scrollToBottom();\r\n          }, 300);\r\n        });\r\n\r\n    // Subscribe to update current project on changes\r\n    this.onCurrentProjectChanged =\r\n      this.tasksService.onCurrentProjectChanged\r\n        .subscribe(project => {\r\n          if (project) {\r\n            this.currentProject = project;\r\n            this.module_title = this.currentProject.title;\r\n            this.setSections();\r\n          } else {\r\n            this.currentProject = null;\r\n          }\r\n        });\r\n  }\r\n\r\n  setSections() {\r\n    this.sections = [];\r\n    this.newSection = {\r\n      title: '',\r\n      tasks: []\r\n    };\r\n    this.sections.push(this.newSection);\r\n    const assignedToSections = [];\r\n\r\n    this.currentProject.sections.forEach(row => {\r\n      this.newSection = {\r\n        title: row.title,\r\n        tasks: []\r\n      };\r\n\r\n      this.newSection.tasks = this.tasks.filter(task => {\r\n        if (row.tasks.indexOf(task.id) !== -1) {\r\n          assignedToSections.push(task.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      this.sections.push(this.newSection);\r\n    });\r\n\r\n    this.sections[0].tasks = this.tasks.filter(task => {\r\n      if (assignedToSections.indexOf(task.id) !== -1) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onTasksChanged.unsubscribe();\r\n    this.onCurrentProjectChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1tYW5hZ2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {TaskManagerService} from './task-manager.service';\r\nimport {Task} from './task';\r\nimport {Project} from './project';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-task-manager',\r\n  templateUrl: './task-manager.component.html',\r\n  styleUrls: ['./task-manager.component.scss']\r\n})\r\nexport class TaskManagerComponent implements OnInit, OnDestroy {\r\n  currentProject: Project;\r\n  currentTask: Task;\r\n  drawer: any;\r\n\r\n  onCurrentProjectChanged: Subscription;\r\n  onCurrentTaskChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService, private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update current project on changes\r\n    this.onCurrentProjectChanged =\r\n      this.tasksService.onCurrentProjectChanged\r\n        .subscribe(project => {\r\n          if (project) {\r\n            this.currentProject = project;\r\n          } else {\r\n            this.currentProject = null;\r\n          }\r\n        });\r\n\r\n    // Subscribe to update current task on changes\r\n    this.onCurrentTaskChanged =\r\n      this.tasksService.onCurrentTaskChanged\r\n        .subscribe(task => {\r\n          if (task) {\r\n            this.currentTask = task;\r\n          } else {\r\n            this.currentTask = null;\r\n          }\r\n\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentProjectChanged.unsubscribe();\r\n    this.onCurrentTaskChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {OwlDateTimeModule, OwlNativeDateTimeModule} from 'ng-pick-datetime';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {TaskManagerComponent} from './task-manager.component';\r\nimport {TaskManagerService} from './task-manager.service';\r\nimport {TaskListComponent} from './task-list/task-list.component';\r\nimport {TaskDetailsComponent} from './task-details/task-details.component';\r\nimport {TaskSidebarComponent} from './task-sidebar/task-sidebar.component';\r\nimport {TaskListItemComponent} from './task-list/task-list-item/task-list-item.component';\r\nimport {TaskConversationComponent} from './task-details/task-conversation/task-conversation.component';\r\nimport {CommentBoxComponent} from './task-details/comment-box/comment-box.component';\r\nimport {BadgesComponent} from './helper-widgets/badges/badges.component';\r\nimport {HeaderComponent} from './helper-widgets/header/header.component';\r\nimport {BtnCompleteComponent} from './helper-widgets/btn-complete/btn-complete.component';\r\nimport {TaskHeaderComponent} from './task-details/header/header.component';\r\nimport {AssigneesComponent} from './task-details/header/assignees/assignees.component';\r\nimport {DateComponent} from './task-details/header/date/date.component';\r\nimport {LabelsComponent} from './task-details/header/labels/labels.component';\r\nimport {DrawerComponent} from './drawer/drawer.component';\r\nimport {NotificationsComponent} from './drawer/notifications/notifications.component';\r\nimport {MessagesComponent} from './drawer/messages/messages.component';\r\nimport {SearchComponent} from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'dashboard/:taskId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'user/:userId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'user/:userId/:taskId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'project/:projectId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'project/:projectId/:taskId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'dashboard'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TaskManagerComponent,\r\n        TaskSidebarComponent,\r\n        TaskDetailsComponent,\r\n        TaskListComponent,\r\n        TaskListItemComponent,\r\n        TaskConversationComponent,\r\n        CommentBoxComponent,\r\n        BadgesComponent,\r\n        HeaderComponent,\r\n        BtnCompleteComponent,\r\n        TaskHeaderComponent,\r\n        AssigneesComponent,\r\n        DateComponent,\r\n        LabelsComponent,\r\n        DrawerComponent,\r\n        NotificationsComponent,\r\n        MessagesComponent,\r\n        SearchComponent\r\n    ],\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        SharedModule,\r\n        OwlDateTimeModule,\r\n        OwlNativeDateTimeModule,\r\n        PerfectScrollbarModule\r\n    ],\r\n    exports: [\r\n        TaskListComponent\r\n    ],\r\n    providers: [\r\n        TaskManagerService,\r\n        {\r\n            provide: PERFECT_SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        }\r\n    ]\r\n})\r\nexport class TaskManagerModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\nimport {Project} from './project';\r\nimport {Section} from './section';\r\nimport {Task} from './task';\r\nimport {Assignee} from './assignee';\r\n\r\n@Injectable()\r\nexport class TaskManagerService implements Resolve<any> {\r\n  private tasksUrl = 'api/tasks-list';  // URL to web api\r\n  private taskConversationUrl = 'api/task-conversation';  // URL to web api\r\n  private labelsUrl = 'api/tasks-labels';  // URL to web api\r\n  private assigneesUrl = 'api/tasks-users';  // URL to web api\r\n  private projectsUrl = 'api/tasks-projects';  // URL to web api\r\n\r\n  currentUser: Assignee;\r\n  sections: Section[];\r\n  tasks: Task[];\r\n  currentTask: Task;\r\n  conversation: any;\r\n  assignees: Assignee[];\r\n  labels: any[];\r\n  projects: Project[];\r\n  currentProject: Project;\r\n  routeParams: any;\r\n\r\n  onSectionsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onTasksChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onTaskConversationChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n  onCurrentTaskChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n  onLabelsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onAssigneesChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onProjectsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onCurrentProjectChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getTasks(),\r\n        this.getLabels(),\r\n        this.getAssignees(),\r\n        this.getProjects()\r\n      ]).then(\r\n        () => {\r\n          this.currentUser = this.assignees[0];\r\n\r\n          if (this.routeParams.projectId) {\r\n            this.setCurrentProject(this.routeParams.projectId);\r\n          } else {\r\n            this.setCurrentProject(null);\r\n          }\r\n\r\n          if (this.routeParams.taskId) {\r\n            this.setCurrentTask(this.routeParams.taskId);\r\n          } else {\r\n            this.setCurrentTask(null);\r\n          }\r\n\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get tasks\r\n   * @returns {Promise<Task[]>}\r\n   */\r\n  getTasks(): Promise<Task[]> {\r\n    if (this.routeParams.projectId) {\r\n      return this.getTasksByProjectId(this.routeParams.projectId);\r\n    } else if (this.routeParams.userId) {\r\n      if (this.routeParams.userId === 'watchlist') {\r\n        return this.getTasksList();\r\n      } else {\r\n        return this.getTasksByAssigneeId(this.routeParams.userId);\r\n      }\r\n    } else {\r\n      return this.getTasksList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get tasks by Project ID\r\n   * @param projectId\r\n   * @returns {Promise<Task[]>}\r\n   */\r\n  getTasksByProjectId(projectId): Promise<Task[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.tasksUrl + '?project_id=' + projectId)\r\n        .subscribe((response: any) => {\r\n          this.tasks = response;\r\n          this.onTasksChanged.next(this.tasks);\r\n          resolve(this.tasks);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get tasks by Assignee ID\r\n   * @param userId\r\n   * @returns {Promise<Task[]>}\r\n   */\r\n  getTasksByAssigneeId(userId): Promise<Task[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.tasksUrl + '?user_id=' + userId)\r\n        .subscribe((response: any) => {\r\n          this.tasks = response;\r\n          this.onTasksChanged.next(this.tasks);\r\n          resolve(this.tasks);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all tasks\r\n   * @returns {Promise<Task>}\r\n   */\r\n  getTasksList(): Promise<Task[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.tasksUrl)\r\n        .subscribe((response: any) => {\r\n          this.tasks = response;\r\n          this.onTasksChanged.next(this.tasks);\r\n          resolve(this.tasks);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all labels\r\n   * @returns {Promise<any>}\r\n   */\r\n  getLabels(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl)\r\n        .subscribe((response: any) => {\r\n          this.labels = response;\r\n          this.onLabelsChanged.next(this.labels);\r\n          resolve(this.labels);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all assignees\r\n   * @returns {Promise<Assignee>}\r\n   */\r\n  getAssignees(): Promise<Assignee[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.assigneesUrl)\r\n        .subscribe((response: any) => {\r\n          this.assignees = response;\r\n          this.onAssigneesChanged.next(this.assignees);\r\n          resolve(this.assignees);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all projects\r\n   * @returns {Promise<Project>}\r\n   */\r\n  getProjects(): Promise<Project[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.projectsUrl)\r\n        .subscribe((response: any) => {\r\n          this.projects = response;\r\n          this.onProjectsChanged.next(this.projects);\r\n          resolve(this.projects);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set current project by id\r\n   * @param id\r\n   */\r\n  setCurrentProject(id) {\r\n    this.currentProject = this.projects.find(project => {\r\n      if (id) {\r\n        return project.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    this.onCurrentProjectChanged.next(this.currentProject);\r\n  }\r\n\r\n  /**\r\n   * Set current task by id\r\n   * @param id\r\n   */\r\n  setCurrentTask(id) {\r\n    this.currentTask = this.tasks.find(task => {\r\n      if (id) {\r\n        return task.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (this.currentTask) {\r\n      this.getTaskConversations(this.currentTask.id);\r\n    } else {\r\n      this.onTaskConversationChanged.next({});\r\n    }\r\n\r\n    this.onCurrentTaskChanged.next(this.currentTask);\r\n\r\n    const taskParam = (this.currentTask) ? '/' + this.currentTask.id : '';\r\n    const projectId = this.routeParams.projectId;\r\n    const userId = this.routeParams.userId;\r\n\r\n    const segments = this.location.path().split('/');\r\n    if (projectId) {\r\n      this.location.go(segments[1] + '/apps/task-manager/project/' + projectId + taskParam);\r\n    } else if (userId) {\r\n      this.location.go(segments[1] + '/apps/task-manager/user/' + userId + taskParam);\r\n    } else {\r\n      this.location.go(segments[1] + '/apps/task-manager/dashboard' + taskParam);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add New Task\r\n   * @param {Task} task\r\n   * @return {Promise<any>}\r\n   */\r\n  addTask(task: Task) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.tasksUrl + '/' + task.id, {...task})\r\n        .subscribe(response => {\r\n          this.getTasks().then(tasks => {\r\n            resolve(tasks);\r\n\r\n          }, reject);\r\n\r\n          const conversation = {\r\n            id: task.id,\r\n            conversations: []\r\n          };\r\n\r\n          this.createTaskConversation(conversation);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle label on task\r\n   * @param labelId\r\n   * @param task Task\r\n   */\r\n  toggleLabel(labelId, task) {\r\n    const index = task.labels.indexOf(labelId);\r\n\r\n    if (index !== -1) {\r\n      task.labels.splice(index, 1);\r\n    } else {\r\n      task.labels.push(labelId);\r\n    }\r\n\r\n    // this.onCurrentTaskChanged.next(task);\r\n    this.updateTask(task);\r\n  }\r\n\r\n  hasLabel(labelId, task) {\r\n    if (!task.labels) {\r\n      return false;\r\n    }\r\n\r\n    return task.labels.indexOf(labelId) !== -1;\r\n  }\r\n\r\n  updateTask(task: Task) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.tasksUrl + '/' + task.id, {...task})\r\n        .subscribe(response => {\r\n          this.getTasks().then(tasks => {\r\n            resolve(tasks);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create Task conversation entry in data\r\n   * @param conversation\r\n   * @return {Promise<any>}\r\n   */\r\n  createTaskConversation(conversation: any) {\r\n    this.conversation = conversation;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.taskConversationUrl + '/' + this.conversation.id, {...this.conversation})\r\n        .subscribe(response => {\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get task conversation by Task ID\r\n   * @param taskId\r\n   * @returns {Promise<any>}\r\n   */\r\n  getTaskConversations(taskId): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.taskConversationUrl + '/' + taskId)\r\n        .subscribe((conversation: any) => {\r\n          this.conversation = conversation;\r\n          this.onTaskConversationChanged.next(this.conversation);\r\n          resolve(this.conversation);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save comment\r\n   * @param conversation\r\n   * @return boolean\r\n   */\r\n  saveComment(commnet: any) {\r\n    if (!this.conversation.conversations) {\r\n      this.conversation.conversations = [];\r\n    }\r\n\r\n    this.conversation.conversations.push(commnet);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.taskConversationUrl + '/' + this.conversation.id, {...this.conversation})\r\n        .subscribe(response => {\r\n          this.getTaskConversations(this.conversation.id).then(conversation => {\r\n            resolve(conversation);\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('An error occurred', error); // for demo purposes only\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1zaWRlYmFyL3Rhc2stc2lkZWJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {Project} from './../project';\r\nimport {Assignee} from './../assignee';\r\nimport {Task} from './../task';\r\nimport {GxHelper} from '@gaxon/helpers';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\n\r\n@Component({\r\n  selector: 'app-task-sidebar',\r\n  templateUrl: './task-sidebar.component.html',\r\n  styleUrls: ['./task-sidebar.component.scss'],\r\n  animations: appAnimations\r\n})\r\nexport class TaskSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  public projects: Project[] = [];\r\n  public assignees: Assignee[] = [];\r\n  currentUser: Assignee;\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onProjectsChanged: Subscription;\r\n  onAssigneesChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.currentUser = this.tasksService.currentUser;\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update projects on changes\r\n    this.onProjectsChanged =\r\n      this.tasksService.onProjectsChanged\r\n        .subscribe(projects => {\r\n          this.projects = projects;\r\n        });\r\n\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onProjectsChanged.unsubscribe();\r\n    this.onAssigneesChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create new Task\r\n   */\r\n  onCreateTask() {\r\n    const newTask = new Task();\r\n    newTask.id = GxHelper.UUID();\r\n    newTask.created = new Date();\r\n    newTask.labels = [];\r\n    newTask.user_id = '';\r\n\r\n    if (this.tasksService.currentProject) {\r\n      newTask.project_id = this.tasksService.currentProject.id;\r\n    }\r\n\r\n    this.tasksService.addTask(newTask).then((response) => {\r\n      this.tasksService.setCurrentTask(newTask.id);\r\n    });\r\n  }\r\n}\r\n","export class Task {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  completed: boolean;\r\n  labels: any[];\r\n  created: Date;\r\n  dueDate: Date;\r\n  user_id: string;\r\n  project_id: string;\r\n  deleted: boolean;\r\n}\r\n"],"sourceRoot":"webpack:///","file":"task-manager-task-manager-module-es5.js"}