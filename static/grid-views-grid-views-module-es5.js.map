{"version":3,"sources":["src/app/content/extra-views/grid-views/advanced-grid/advanced-grid.component.html","src/app/content/extra-views/grid-views/basic-grid/basic-grid.component.html","src/app/content/extra-views/grid-views/advanced-grid/advanced-grid.component.scss","src/app/content/extra-views/grid-views/advanced-grid/advanced-grid.component.ts","src/app/content/extra-views/grid-views/basic-grid/basic-grid.component.scss","src/app/content/extra-views/grid-views/basic-grid/basic-grid.component.ts","src/app/content/extra-views/grid-views/grid-views.module.ts","src/app/content/extra-views/grid-views/grid-views.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- Page Header -->\\r\\n<div class=\\\"dt-page__header\\\">\\r\\n  <h1 class=\\\"dt-page__title\\\">Advance Grid View</h1>\\r\\n</div>\\r\\n<!-- /page header -->\\r\\n\\r\\n<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-3 col-md-4 col-sm-6 col-12\\\" *ngFor=\\\"let property of realestates; index as i; first as isFirst\\\">\\r\\n\\r\\n    <!-- Card -->\\r\\n    <gx-grid>\\r\\n      <!-- Slider Header -->\\r\\n      <gx-grid-header>\\r\\n        <gx-slider class=\\\"card-img-top\\\">\\r\\n          <gx-slider-header>\\r\\n            <span *ngIf=\\\"property.is_featured\\\" class=\\\"badge bg-orange text-white text-uppercase\\\">featured</span>\\r\\n\\r\\n            <!-- Checkbox -->\\r\\n            <div class=\\\"dt-checkbox dt-checkbox-icon dt-checkbox-only\\\">\\r\\n              <input id=\\\"checkbox-{{i}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"property.favourite\\\">\\r\\n              <label class=\\\"font-weight-light dt-checkbox-content\\\" for=\\\"checkbox-{{i}}\\\">\\r\\n                <span class=\\\"unchecked\\\"><gx-icon name=\\\"heart-o\\\" class=\\\"text-white\\\"></gx-icon></span>\\r\\n                <span class=\\\"checked\\\"><gx-icon name=\\\"heart\\\" class=\\\"text-white\\\"></gx-icon></span>\\r\\n              </label>\\r\\n            </div>\\r\\n            <!-- /checkbox -->\\r\\n          </gx-slider-header>\\r\\n\\r\\n          <!-- Slider Carouse -->\\r\\n          <slideshow [imageUrls]=\\\"property.imageUrls\\\"\\r\\n                     [showArrows]=\\\"false\\\"\\r\\n                     [showDots]=\\\"true\\\"\\r\\n                     [minHeight]=\\\"'160px'\\\"\\r\\n                     [lazyLoad]=\\\"true\\\">\\r\\n          </slideshow>\\r\\n          <!-- /Slider Carouse -->\\r\\n        </gx-slider>\\r\\n\\r\\n      </gx-grid-header>\\r\\n      <!-- /slider header -->\\r\\n\\r\\n      <!-- Badges -->\\r\\n      <span class=\\\"badge text-uppercase mb-2\\\"\\r\\n            [ngClass]=\\\"{'badge-secondary':property.for==='For sale', 'bg-orange text-white':property.for!=='For sale'}\\\">{{property.for}}</span>\\r\\n      <!-- /badges -->\\r\\n\\r\\n      <!-- Card Title-->\\r\\n      <h2 class=\\\"card-title text-truncate\\\">{{property.title}}</h2>\\r\\n      <!-- Card Title-->\\r\\n\\r\\n      <!-- Card Sub Title-->\\r\\n      <h4 class=\\\"card-subtitle\\\">{{property.location}}</h4>\\r\\n      <!-- /card sub title-->\\r\\n\\r\\n      <!-- Content Area -->\\r\\n      <div class=\\\"d-flex flex-wrap mb-4\\\">\\r\\n        <div class=\\\"pr-3\\\">Bedrooms: <span class=\\\"text-dark\\\">{{property.bedrooms}}</span></div>\\r\\n        <div>Area: <span class=\\\"text-dark\\\" [innerHTML]=\\\"property.area\\\"></span></div>\\r\\n      </div>\\r\\n      <!-- /content area -->\\r\\n\\r\\n      <!-- Pricing -->\\r\\n      <div class=\\\"price mb-4\\\">\\r\\n        <span class=\\\"d-block text-orange font-weight-500 display-5\\\">{{property.price|currency:'USD':'symbol-narrow':'4.0-2'}}</span>\\r\\n        <span class=\\\"d-inline-block text-light-gray f-12\\\">{{symbol+property.unit}}</span>\\r\\n      </div>\\r\\n      <!-- /pricing -->\\r\\n\\r\\n      <!-- card Link -->\\r\\n      <a class=\\\"card-link\\\" href=\\\"javascript:void(0)\\\">\\r\\n        Check Detail\\r\\n        <gx-icon name=\\\"double-arrow-right\\\"></gx-icon>\\r\\n      </a>\\r\\n      <!-- card Link -->\\r\\n\\r\\n      <gx-grid-footer>\\r\\n        <span class=\\\"d-inline-block mr-3\\\"><gx-icon name=\\\"user\\\" [fw]=\\\"true\\\"></gx-icon> {{property.author}}</span>\\r\\n        <span class=\\\"d-inline-block\\\"><gx-icon name=\\\"calendar\\\" [fw]=\\\"true\\\"></gx-icon> {{property.posted}}</span>\\r\\n      </gx-grid-footer>\\r\\n    </gx-grid>\\r\\n    <!-- /Card -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\"","export default \"<!-- Page Header -->\\r\\n<div class=\\\"dt-page__header\\\">\\r\\n  <h1 class=\\\"dt-page__title\\\">Grid View</h1>\\r\\n</div>\\r\\n<!-- /page header -->\\r\\n\\r\\n<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div *ngFor=\\\"let user of usersList; index as i; first as isFirst\\\" class=\\\"col-xl-3 col-md-4 col-sm-6 col-12\\\">\\r\\n\\r\\n    <!-- Card -->\\r\\n    <gx-grid>\\r\\n      <!-- User Avatar-->\\r\\n      <img class=\\\"dt-avatar size-60\\\" [src]=\\\"user.picture\\\" alt=\\\"{{user.name}}\\\">\\r\\n      <!-- /user avatar-->\\r\\n\\r\\n      <div class=\\\"mt-7\\\">\\r\\n        <h4 class=\\\"mb-1 mb-sm-0\\\">{{user.name}}</h4>\\r\\n        <span class=\\\"d-block text-light-gray mb-5\\\">{{user.position}}</span>\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-primary btn-sm\\\">Contact</a>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"action-tools\\\">\\r\\n        <!-- Checkbox -->\\r\\n        <div class=\\\"dt-checkbox dt-checkbox-icon dt-checkbox-only\\\">\\r\\n          <input id=\\\"checkbox-{{i}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"user.favourite\\\">\\r\\n          <label class=\\\"font-weight-light dt-checkbox-content\\\" for=\\\"checkbox-{{i}}\\\">\\r\\n            <span class=\\\"unchecked\\\"><gx-icon name=\\\"star-o\\\" size=\\\"xl\\\" class=\\\"text-light-gray\\\"></gx-icon></span>\\r\\n            <span class=\\\"checked\\\"><gx-icon name=\\\"star-fill\\\" size=\\\"xl\\\" class=\\\"text-secondary\\\"></gx-icon></span>\\r\\n          </label>\\r\\n        </div>\\r\\n        <!-- /checkbox -->\\r\\n\\r\\n        <!-- Dropdown -->\\r\\n        <div ngbDropdown placement=\\\"bottom-right\\\">\\r\\n          <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n            <gx-icon name=\\\"horizontal-more\\\" [fw]=\\\"true\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n          </a>\\r\\n\\r\\n          <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n              <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n              Edit\\r\\n            </a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n              <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n              Contact List</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n              <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n              Favourite List\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /dropdown -->\\r\\n      </div>\\r\\n\\r\\n    </gx-grid>\\r\\n    <!-- /Card -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZXh0cmEtdmlld3MvZ3JpZC12aWV3cy9hZHZhbmNlZC1ncmlkL2FkdmFuY2VkLWdyaWQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {GridViewsService} from '../grid-views.service';\r\nimport {getCurrencySymbol} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-advanced-grid',\r\n  templateUrl: './advanced-grid.component.html',\r\n  styleUrls: ['./advanced-grid.component.scss']\r\n})\r\nexport class AdvancedGridComponent implements OnInit {\r\n  realestates: any;\r\n  symbol: string;\r\n\r\n  constructor(private gridService: GridViewsService) {\r\n    this.realestates = this.gridService.realestates;\r\n    this.symbol = getCurrencySymbol('USD', 'narrow');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZXh0cmEtdmlld3MvZ3JpZC12aWV3cy9iYXNpYy1ncmlkL2Jhc2ljLWdyaWQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {GridViewsService} from '../grid-views.service';\r\n\r\n@Component({\r\n  selector: 'app-basic-grid',\r\n  templateUrl: './basic-grid.component.html',\r\n  styleUrls: ['./basic-grid.component.scss']\r\n})\r\nexport class BasicGridComponent implements OnInit {\r\n  usersList: any;\r\n\r\n  constructor(private gridService: GridViewsService) {\r\n    this.usersList = this.gridService.usersList;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\n\r\nimport {SlideshowModule} from 'ng-simple-slideshow';\r\n\r\nimport {BasicGridComponent} from './basic-grid/basic-grid.component';\r\nimport {AdvancedGridComponent} from './advanced-grid/advanced-grid.component';\r\nimport {GridViewsService} from './grid-views.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'basic',\r\n    component: BasicGridComponent,\r\n    resolve: {\r\n      usersList: GridViewsService\r\n    }\r\n  },\r\n  {\r\n    path: 'advanced',\r\n    component: AdvancedGridComponent,\r\n    resolve: {\r\n      realestates: GridViewsService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    SlideshowModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    BasicGridComponent,\r\n    AdvancedGridComponent\r\n  ]\r\n})\r\nexport class GridViewsModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GridViewsService implements Resolve<any> {\r\n  usersList: any[];\r\n  realestates: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      Promise.all([\r\n        this.getUsers(),\r\n        this.getRealEstates()\r\n      ]).then(\r\n        () => {\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  getUsers(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get('api/grid-views-users')\r\n        .subscribe((response: any) => {\r\n          this.usersList = response;\r\n          resolve(response);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  getRealEstates(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get('api/grid-views-realestates')\r\n        .subscribe((response: any) => {\r\n          this.realestates = response;\r\n          resolve(response);\r\n        }, reject);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"grid-views-grid-views-module-es5.js"}