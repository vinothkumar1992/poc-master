{"version":3,"sources":["./src/app/content/apps/task-manager/drawer/drawer.component.html","./src/app/content/apps/task-manager/drawer/messages/messages.component.html","./src/app/content/apps/task-manager/drawer/notifications/notifications.component.html","./src/app/content/apps/task-manager/drawer/search/search.component.html","./src/app/content/apps/task-manager/helper-widgets/badges/badges.component.html","./src/app/content/apps/task-manager/helper-widgets/btn-complete/btn-complete.component.html","./src/app/content/apps/task-manager/helper-widgets/header/header.component.html","./src/app/content/apps/task-manager/task-details/comment-box/comment-box.component.html","./src/app/content/apps/task-manager/task-details/header/assignees/assignees.component.html","./src/app/content/apps/task-manager/task-details/header/date/date.component.html","./src/app/content/apps/task-manager/task-details/header/header.component.html","./src/app/content/apps/task-manager/task-details/header/labels/labels.component.html","./src/app/content/apps/task-manager/task-details/task-conversation/task-conversation.component.html","./src/app/content/apps/task-manager/task-details/task-details.component.html","./src/app/content/apps/task-manager/task-list/task-list-item/task-list-item.component.html","./src/app/content/apps/task-manager/task-list/task-list.component.html","./src/app/content/apps/task-manager/task-manager.component.html","./src/app/content/apps/task-manager/task-sidebar/task-sidebar.component.html","./src/app/content/apps/task-manager/drawer/drawer.component.scss","./src/app/content/apps/task-manager/drawer/drawer.component.ts","./src/app/content/apps/task-manager/drawer/messages/messages.component.scss","./src/app/content/apps/task-manager/drawer/messages/messages.component.ts","./src/app/content/apps/task-manager/drawer/notifications/notifications.component.scss","./src/app/content/apps/task-manager/drawer/notifications/notifications.component.ts","./src/app/content/apps/task-manager/drawer/search/search.component.scss","./src/app/content/apps/task-manager/drawer/search/search.component.ts","./src/app/content/apps/task-manager/helper-widgets/badges/badges.component.ts","./src/app/content/apps/task-manager/helper-widgets/btn-complete/btn-complete.component.ts","./src/app/content/apps/task-manager/helper-widgets/header/header.component.ts","./src/app/content/apps/task-manager/task-details/comment-box/comment-box.component.ts","./src/app/content/apps/task-manager/task-details/header/assignees/assignees.component.ts","./src/app/content/apps/task-manager/task-details/header/date/date.component.ts","./src/app/content/apps/task-manager/task-details/header/header.component.ts","./src/app/content/apps/task-manager/task-details/header/labels/labels.component.ts","./src/app/content/apps/task-manager/task-details/task-conversation/task-conversation.component.ts","./src/app/content/apps/task-manager/task-details/task-details.component.ts","./src/app/content/apps/task-manager/task-list/task-list-item/task-list-item.component.scss","./src/app/content/apps/task-manager/task-list/task-list-item/task-list-item.component.ts","./src/app/content/apps/task-manager/task-list/task-list.component.scss","./src/app/content/apps/task-manager/task-list/task-list.component.ts","./src/app/content/apps/task-manager/task-manager.component.scss","./src/app/content/apps/task-manager/task-manager.component.ts","./src/app/content/apps/task-manager/task-manager.module.ts","./src/app/content/apps/task-manager/task-manager.service.ts","./src/app/content/apps/task-manager/task-sidebar/task-sidebar.component.scss","./src/app/content/apps/task-manager/task-sidebar/task-sidebar.component.ts","./src/app/content/apps/task-manager/task.ts"],"names":[],"mappings":"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","file":"task-manager-task-manager-module-es2015.js","sourcesContent":["export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'messages'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'messages')\\\">\\r\\n            <gx-icon name=\\\"message\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" ngbDropdown>\\r\\n          <!-- Dropdown Button -->\\r\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow dt-action-nav__link\\\" ngbDropdownToggle>\\r\\n            <gx-icon name=\\\"circle-add-o\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n          <!-- /dropdown button -->\\r\\n\\r\\n          <!-- Dropdown Menu -->\\r\\n          <div ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Project</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onCreateTask()\\\">Add New Task</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Team Member</a>\\r\\n          </div>\\r\\n          <!-- /dropdown menu -->\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'messages'}\\\" perfectScrollbar>\\r\\n        <todo-messages></todo-messages>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Messages ({{messages.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let message of messages\\\">\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body text-truncate\\\">\\r\\n    <span class=\\\"user-name mb-1\\\">{{message.name}}</span>\\r\\n    <span class=\\\"message text-light-gray text-truncate\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n  <span class=\\\"action-area h-100 min-w-80 text-right\\\">\\r\\n    <span class=\\\"meta-date mb-1\\\">{{message.time}}</span>\\r\\n\\r\\n    <ng-template #tipContent>{{message.read ? 'Mark as read' : 'Mark as unread'}}</ng-template>\\r\\n\\r\\n    <!-- Toggle Button -->\\r\\n    <span class=\\\"toggle-button\\\"\\r\\n          [ngClass]=\\\"{'active':message.read}\\\"\\r\\n          [ngbTooltip]=\\\"tipContent\\\"\\r\\n          (click)=\\\"message.read = !message.read\\\">\\r\\n      <span class=\\\"show\\\"><gx-icon name=\\\"dot-o\\\" [fw]=\\\"true\\\" class=\\\"f-10 text-light-gray\\\"></gx-icon></span>\\r\\n      <span class=\\\"hide\\\"><gx-icon name=\\\"dot\\\" [fw]=\\\"true\\\"  class=\\\"f-10 text-light-gray\\\"></gx-icon></span>\\r\\n    </span>\\r\\n    <!-- /toggle button -->\\r\\n  </span>\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<div *ngIf=\\\"wrap; else unwrapped\\\">\\r\\n  <div class=\\\"badge-group\\\">\\r\\n<span *ngFor=\\\"let lid of items\\\" class=\\\"badge\\\"\\r\\n      [ngClass]=\\\"labels | getById:lid:'color'\\\">{{labels | getById:lid:'title'}}</span>\\r\\n\\r\\n    <span *ngIf=\\\"!showAll && ids.length > 2\\\" #moreBadges class=\\\"badge badge-light\\\">...</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #unwrapped>\\r\\n  <div class=\\\"badge-group\\\">\\r\\n<span *ngFor=\\\"let lid of items\\\" class=\\\"badge\\\"\\r\\n      [ngClass]=\\\"labels | getById:lid:'color'\\\">{{labels | getById:lid:'title'}}</span>\\r\\n\\r\\n    <span *ngIf=\\\"!showAll && ids.length > 2\\\" #moreBadges class=\\\"badge badge-light\\\">...</span>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<span *ngIf=\\\"display === 'checkbox'; else typeBtn\\\" class=\\\"dt-checkbox dt-checkbox-icon dt-checkbox-only mr-4\\\" [ngClass]=\\\"{'active':task.completed}\\\"\\r\\n      (click)=\\\"$event.stopPropagation()\\\">\\r\\n  <input id=\\\"task-checkbox-{{task.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"task.completed\\\" (change)=\\\"onToggleChange()\\\">\\r\\n  <label class=\\\"font-weight-light dt-checkbox-content\\\" for=\\\"task-checkbox-{{task.id}}\\\">\\r\\n    <span class=\\\"unchecked\\\">\\r\\n      <gx-icon name=\\\"circle-check-o\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n    </span>\\r\\n    <span class=\\\"checked\\\">\\r\\n      <gx-icon name=\\\"circle-check-o\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"text-success\\\"></gx-icon>\\r\\n    </span>\\r\\n  </label>\\r\\n</span>\\r\\n\\r\\n<ng-template #typeBtn>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-sm mb-2 mr-5\\\"\\r\\n          [ngClass]=\\\"{'btn-success text-white':task.completed,'btn-outline-dark':!task.completed}\\\"\\r\\n          (click)=\\\"onToggleClick()\\\"\\r\\n          data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\">\\r\\n    <gx-icon name=\\\"check\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n    {{task.completed? 'Completed':'Mark As Done'}}\\r\\n  </button>\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"<!-- Dropdown -->\\r\\n<div *ngIf=\\\"!isTask\\\" class=\\\"dropdown\\\" ngbDropdown>\\r\\n\\r\\n  <!-- Dropdown Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n    Tasks\\r\\n  </a>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Something else here</a>\\r\\n    <div class=\\\"dropdown-divider\\\"></div>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Separated link</a>\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\\r\\n<!-- Back -->\\r\\n<a class=\\\"text-dark\\\" *ngIf=\\\"isTask\\\" href=\\\"#back\\\" (click)=\\\"goToBack($event)\\\">\\r\\n  <gx-icon name=\\\"arrow-left\\\" size=\\\"1x\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n  <span class=\\\"display-6 align-middle ml-1\\\">Back</span>\\r\\n</a>\\r\\n<!-- /back -->\\r\\n\\r\\n<!-- Title -->\\r\\n<div class=\\\"mx-auto text-center\\\">\\r\\n  <h3 class=\\\"dt-module__title\\\">{{title}}</h3>\\r\\n  <gx-icon name=\\\"horizontal-more\\\" size=\\\"xl\\\"></gx-icon>\\r\\n</div>\\r\\n<!-- Title -->\\r\\n\\r\\n<!-- Filter -->\\r\\n<a *ngIf=\\\"!isTask\\\" class=\\\"dt-module__filter text-dark\\\" href=\\\"javascript:void(0)\\\">\\r\\n  <gx-icon name=\\\"filter-new\\\" size=\\\"xl\\\"></gx-icon>\\r\\n</a>\\r\\n<!-- /filter -->\\r\\n\"","export default \"<form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"commentForm.valid && sendComment()\\\">\\r\\n  <!-- Action Tools -->\\r\\n  <div class=\\\"action-tools\\\">\\r\\n    <button class=\\\"btn btn-primary dt-fab-btn\\\" type=\\\"submit\\\" [disabled]=\\\"commentForm.invalid\\\">\\r\\n      <gx-icon name=\\\"send-new\\\" size=\\\"xl\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"dt-fab-btn dt-attachment-btn size-30\\\">\\r\\n      <input type=\\\"file\\\">\\r\\n      <gx-icon name=\\\"attach-v\\\"></gx-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /action tools -->\\r\\n\\r\\n  <!-- Media -->\\r\\n  <bs-media-object [img]=\\\"{url: currentUser.thumb, alt: currentUser.name, classlist: 'dt-avatar mr-2'}\\\">\\r\\n    <!-- Text Area -->\\r\\n    <textarea class=\\\"form-control border-0 shadow-none bg-focus\\\"\\r\\n              rows=\\\"1\\\"\\r\\n              name=\\\"notes\\\"\\r\\n              formControlName=\\\"notes\\\"\\r\\n              (keydown)=\\\"onKeyDown($event)\\\"\\r\\n              required\\r\\n              placeholder=\\\"Write your comment...\\\"></textarea>\\r\\n    <!-- /text area -->\\r\\n  </bs-media-object>\\r\\n  <!-- /media -->\\r\\n</form>\\r\\n\"","export default \"<!-- Dropdown -->\\r\\n<div class=\\\"mb-2\\\" ngbDropdown>\\r\\n  <!-- Dropdown Link -->\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow dt-avatar-wrapper text-dark\\\" ngbDropdownToggle>\\r\\n    <!-- Module Assignee -->\\r\\n    <ng-container *ngIf=\\\"task.user_id; else unassigned\\\">\\r\\n      <ng-container #user=\\\"item\\\"\\r\\n                    [getbyid]=\\\"task.user_id\\\"\\r\\n                    [items]=\\\"assignees\\\">\\r\\n        <gx-avatar [user]=\\\"user.data\\\"\\r\\n                   class=\\\"size-35\\\"></gx-avatar>\\r\\n        <span class=\\\"dt-avatar-info\\\">\\r\\n            <span class=\\\"dt-avatar-name\\\">{{user.data.name}}</span>\\r\\n          </span>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-template #unassigned>\\r\\n      <span class=\\\"dt-avatar\\\"><gx-icon name=\\\"user\\\" size=\\\"xl\\\"></gx-icon></span>\\r\\n\\r\\n      <span class=\\\"dt-avatar-info\\\">\\r\\n        <span class=\\\"dt-avatar-name\\\">Unassigned</span>\\r\\n      </span>\\r\\n    </ng-template>\\r\\n  </a>\\r\\n  <!-- /dropdown link -->\\r\\n\\r\\n  <!-- Dropdown Option -->\\r\\n  <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\r\\n    <ng-container *ngFor=\\\"let assignee of assignees\\\">\\r\\n      <a class=\\\"dropdown-item dt-avatar-wrapper\\\"\\r\\n         (click)=\\\"onAssigneeChange(assignee.id)\\\"\\r\\n         [ngClass]=\\\"{'active':assignee.id==task.user_id}\\\"\\r\\n         href=\\\"javascript:void(0)\\\">\\r\\n\\r\\n        <gx-avatar [user]=\\\"assignee\\\"\\r\\n                   class=\\\"size-30\\\"></gx-avatar>\\r\\n        <span class=\\\"dt-avatar-info\\\">\\r\\n            <span class=\\\"dt-avatar-name\\\">{{assignee.name}}</span>\\r\\n          </span>\\r\\n      </a>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n  <!-- /dropdown option -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<!-- Calender -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"text-dark d-inline-block mb-2 mr-6\\\" data-target-input=\\\"nearest\\\">\\r\\n  <div class=\\\"dt-avatar-wrapper\\\" data-target=\\\"#date-time-picker-1\\\" data-toggle=\\\"datetimepicker\\\">\\r\\n    <input\\r\\n      [hidden]=\\\"true\\\"\\r\\n      name=\\\"dueDate\\\"\\r\\n      [min]=\\\"task.created\\\"\\r\\n      [(ngModel)]=\\\"task.dueDate\\\"\\r\\n      (dateTimeChange)=\\\"onDuedateChange()\\\"\\r\\n      [owlDateTime]=\\\"dueDatePicker\\\"/>\\r\\n    <owl-date-time pickerType=\\\"calendar\\\" [pickerMode]=\\\"'dialog'\\\" #dueDatePicker></owl-date-time>\\r\\n    <span class=\\\"dt-avatar dt-avatar__outline size-35\\\" [owlDateTimeTrigger]=\\\"dueDatePicker\\\">\\r\\n          <gx-icon name=\\\"calendar\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        </span>\\r\\n    <span class=\\\"dt-avatar-info\\\" [owlDateTimeTrigger]=\\\"dueDatePicker\\\">\\r\\n          <span class=\\\"dt-avatar-name\\\">{{ task.dueDate | date:\\\"d MMMM, yy\\\" }}</span>\\r\\n        </span>\\r\\n  </div>\\r\\n</a>\\r\\n<!-- /calender -->\\r\\n\"","export default \"<!-- Complete Button -->\\r\\n<btn-complete [task]=\\\"task\\\" display=\\\"button\\\"></btn-complete>\\r\\n<!-- /Complete Button -->\\r\\n\\r\\n<!-- Labels -->\\r\\n<task-labels [task]=\\\"task\\\"></task-labels>\\r\\n<!-- /Labels -->\\r\\n\\r\\n<!-- Calender -->\\r\\n<task-date [task]=\\\"task\\\"></task-date>\\r\\n<!-- /calender -->\\r\\n\\r\\n<!-- Assignees -->\\r\\n<task-assignees [task]=\\\"task\\\"></task-assignees>\\r\\n<!-- /Assignees -->\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n  <a class=\\\"no-arrow dt-avatar dt-avatar__outline size-30\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"vertical-more\\\" [fw]=\\\"true\\\" size=\\\"sm\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <div ngbDropdownMenu>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another action</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Something else here</a>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<!-- Dropdown -->\\r\\n<div class=\\\"mb-2 mr-6\\\" ngbDropdown>\\r\\n  <!-- Dropdown Button -->\\r\\n  <button class=\\\"btn btn-outline-dark btn-sm\\\" type=\\\"button\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"check\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n    Label\\r\\n  </button>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu>\\r\\n    <a *ngFor=\\\"let label of labels\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n       (click)=\\\"onToggleLabel(label.id)\\\">\\r\\n      <gx-icon name=\\\"box-check\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\" *ngIf=\\\"hasLabel(label.id)\\\"></gx-icon>\\r\\n      <gx-icon name=\\\"box-o\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\" *ngIf=\\\"!hasLabel(label.id)\\\"></gx-icon>\\r\\n      {{label.title}}\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<a *ngIf=\\\"itemFrom > 0\\\"\\r\\n   class=\\\"d-inline-block mb-6 text-decoration-underline\\\"\\r\\n   href=\\\"javascript:void(0)\\\"\\r\\n  (click)=\\\"showOlder()\\\">\\r\\n  +{{itemFrom}} Previous messages\\r\\n</a>\\r\\n\\r\\n<ng-container *ngFor=\\\"let comment of comments\\\"\\r\\n              #user=\\\"item\\\"\\r\\n              [getbyid]=\\\"comment.user_id\\\"\\r\\n              [items]=\\\"assignees\\\">\\r\\n\\r\\n  <!-- Media -->\\r\\n  <bs-media-object class=\\\"mb-6\\\"\\r\\n                   [img]=\\\"{url: user.data.thumb, alt: user.data.name, classlist: 'dt-avatar size-25 mr-4'}\\\">\\r\\n\\r\\n    <h5 class=\\\"text-light-gray mb-1\\\">\\r\\n      {{user.data.name}}\\r\\n      <span class=\\\"d-inline-block f-12 ml-2\\\">{{comment.createdeAt | timeAgo}}</span>\\r\\n    </h5>\\r\\n    <p class=\\\"mb-0 text-dark\\\">{{comment.notes}}</p>\\r\\n\\r\\n  </bs-media-object>\\r\\n  <!-- /media -->\\r\\n\\r\\n</ng-container>\\r\\n\"","export default \"<!-- Module Header -->\\r\\n<setion-header [title]=\\\"projects | getById:currentTask.project_id:'title'\\\"></setion-header>\\r\\n<!-- /module header -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__content position-relative\\\" perfectScrollbar>\\r\\n\\r\\n  <!-- Module Content Inner -->\\r\\n  <div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n    <!-- task header -->\\r\\n    <task-header [task]=\\\"currentTask\\\"></task-header>\\r\\n    <!-- /task header -->\\r\\n\\r\\n    <!-- Form -->\\r\\n    <form [formGroup]=\\\"taskForm\\\">\\r\\n\\r\\n      <h2 class=\\\"display-4\\\">\\r\\n        {{currentTask.title}}\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"ml-auto\\\" (click)=\\\"editTitle = !editTitle\\\">\\r\\n          <gx-icon name=\\\"editors\\\"></gx-icon>\\r\\n        </a>\\r\\n      </h2>\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"editTitle\\\">\\r\\n        <textarea class=\\\"form-control bg-focus display-4\\\"\\r\\n                rows=\\\"2\\\"\\r\\n                name=\\\"title\\\"\\r\\n                formControlName=\\\"title\\\"\\r\\n                placeholder=\\\"Title\\\"></textarea>\\r\\n\\r\\n        <button class=\\\"btn btn-primary btn-xs mt-1\\\" (click)=\\\"editTitle = !editTitle\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n      <!-- Badges -->\\r\\n      <task-badges class=\\\"d-block mb-5\\\" [wrap]=\\\"true\\\"\\r\\n                   [ids]=\\\"currentTask.labels\\\"\\r\\n                   [labels]=\\\"labels\\\"></task-badges>\\r\\n      <!-- /badges -->\\r\\n\\r\\n      <!-- Text Area -->\\r\\n      <div class=\\\"form-group d-flex\\\">\\r\\n        <gx-icon name=\\\"forms-advanced\\\" class=\\\"mt-2 mr-1\\\"></gx-icon>\\r\\n        <textarea class=\\\"form-control border-0 shadow-none bg-focus\\\"\\r\\n                  rows=\\\"2\\\"\\r\\n                  name=\\\"content\\\"\\r\\n                  formControlName=\\\"content\\\"\\r\\n                  placeholder=\\\"Description\\\"></textarea>\\r\\n      </div>\\r\\n      <!-- /text area -->\\r\\n\\r\\n    </form>\\r\\n    <!-- /form -->\\r\\n\\r\\n    <!-- Separator -->\\r\\n    <hr class=\\\"my-7\\\">\\r\\n    <!-- /separator -->\\r\\n\\r\\n    <app-task-conversation></app-task-conversation>\\r\\n\\r\\n  </div>\\r\\n  <!-- /module content inner -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- Comment Box -->\\r\\n<app-comment-box></app-comment-box>\\r\\n<!-- /comment box -->\\r\\n\"","export default \"<!-- Checkbox Icon -->\\r\\n<btn-complete [task]=\\\"task\\\"></btn-complete>\\r\\n<!-- /checkbox icon -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<a href=\\\"#{{task.id}}\\\"\\r\\n   (click)=\\\"onClickTask($event, task.id)\\\"\\r\\n   class=\\\"dt-module__list-item-content\\\"\\r\\n   [ngClass]=\\\"{'complete':task.completed}\\\">{{task.title || 'New Task'}}</a>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n\\r\\n  <!-- Badges -->\\r\\n  <task-badges [ids]=\\\"task.labels\\\"\\r\\n               [labels]=\\\"labels\\\"\\r\\n               [showAll]=\\\"false\\\"></task-badges>\\r\\n  <!-- /badges -->\\r\\n\\r\\n  <!-- Module Date -->\\r\\n  <span>{{ task.dueDate | date:\\\"MMMM d\\\" }}</span>\\r\\n\\r\\n  <!-- Module Assignee -->\\r\\n  <ng-container *ngIf=\\\"task.user_id\\\" #user=\\\"item\\\" [getbyid]=\\\"task.user_id\\\" [items]=\\\"assignees\\\">\\r\\n    <gx-avatar [user]=\\\"user.data\\\" class=\\\"size-25\\\"></gx-avatar>\\r\\n  </ng-container>\\r\\n\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Header -->\\r\\n<setion-header [title]=\\\"module_title\\\"></setion-header>\\r\\n<!-- /module header -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__content position-relative\\\" perfectScrollbar>\\r\\n\\r\\n  <!-- Module Content Inner -->\\r\\n  <div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n    <p *ngIf=\\\"sections.length === 0\\\" class=\\\"text-center\\\">No record found.</p>\\r\\n\\r\\n    <!-- Module List -->\\r\\n    <ng-container *ngFor=\\\"let section of sections; index as i_section; first as isFirstSection\\\">\\r\\n      <div *ngIf=\\\"section.tasks.length > 0\\\"\\r\\n           class=\\\"dt-module__list\\\">\\r\\n\\r\\n        <!-- Module Heading -->\\r\\n        <h5 *ngIf=\\\"section.title\\\" class=\\\"text-light-gray mb-2\\\">{{section.title}}</h5>\\r\\n        <!-- /module heading -->\\r\\n\\r\\n        <!-- Module Item -->\\r\\n        <ng-container *ngFor=\\\"let task of section.tasks; index as i; first as isFirst\\\">\\r\\n          <app-task-list-item\\r\\n            *ngIf=\\\"!task.deleted\\\"\\r\\n            [task]=\\\"task\\\"></app-task-list-item>\\r\\n        </ng-container>\\r\\n        <!-- /module item -->\\r\\n\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <!-- /Module List -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /module content inner -->\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module\\\">\\r\\n\\r\\n      <!-- Module Sidebar -->\\r\\n      <app-task-sidebar></app-task-sidebar>\\r\\n      <!-- /module sidebar -->\\r\\n\\r\\n      <!-- Module List -->\\r\\n      <app-task-list [hidden]=\\\"currentTask\\\"></app-task-list>\\r\\n      <!-- /module list -->\\r\\n\\r\\n      <!-- Module details -->\\r\\n      <app-task-details *ngIf=\\\"currentTask\\\"></app-task-details>\\r\\n      <!-- /module list -->\\r\\n\\r\\n      <todo-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></todo-drawer>\\r\\n\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n    </div>\\r\\n    <!-- /module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\"","export default \"<!-- Sidebar Header -->\\r\\n<div class=\\\"dt-module__sidebar-header\\\">\\r\\n\\r\\n  <!-- App Quick Menu -->\\r\\n  <div class=\\\"quick-menu-list\\\">\\r\\n    <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n       href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n       (click)=\\\"toggleNavigation($event)\\\">\\r\\n      <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Search Box -->\\r\\n    <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Search in app...\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n        <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n    </form>\\r\\n    <!-- /search box -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n      <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n      <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'messages'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'messages')\\\">\\r\\n      <gx-icon name=\\\"message\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <div class=\\\"quick-menu\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"circle-add-o\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <!-- Dropdown Menu -->\\r\\n      <div ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Project</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onCreateTask()\\\">Add New Task</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Team Member</a>\\r\\n      </div>\\r\\n      <!-- /dropdown menu -->\\r\\n    </div>\\r\\n    <!-- /dropdown -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n       (click)=\\\"toggleOpen($event)\\\">\\r\\n      <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /app quick menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /sidebar header -->\\r\\n\\r\\n<!-- Sidebar Content -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\" perfectScrollbar>\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner pt-md-7\\\">\\r\\n    <!-- Sidebar Navigation -->\\r\\n    <ul class=\\\"dt-module-side-nav\\\">\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">QUICK MENU</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/dashboard'\\\">\\r\\n          <gx-icon name=\\\"dashboard\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/user/'+currentUser.id\\\">\\r\\n          <gx-icon name=\\\"description\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">My Tasks</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/user/watchlist'\\\">\\r\\n          <gx-icon name=\\\"users\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">My Watchlist</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">PROJECTS</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\"\\r\\n          *ngFor=\\\"let project of projects; index as i; first as isFirst\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/project/'+project.id\\\">\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{project.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n    </ul>\\r\\n    <!-- /sidebar navigation -->\\r\\n\\r\\n    <!-- Contacts -->\\r\\n    <div class=\\\"dt-contacts contacts-list\\\">\\r\\n\\r\\n      <!-- Contact Heading -->\\r\\n      <h6 class=\\\"dt-contact__heading text-uppercase\\\">Team</h6>\\r\\n      <!-- /contact heading -->\\r\\n\\r\\n      <div class=\\\"action-area\\\">\\r\\n        <ul class=\\\"dt-team-list\\\">\\r\\n          <li *ngFor=\\\"let user of assignees; last as isLast\\\" [ngClass]=\\\"{'mb-2':!isLast}\\\">\\r\\n            <!-- Avatar -->\\r\\n            <a [routerLink]=\\\"'/' + settings.layout + '/apps/task-manager/user/'+user.id\\\">\\r\\n              <gx-avatar [user]=\\\"user\\\" class=\\\"size-30\\\"></gx-avatar>\\r\\n            </a>\\r\\n            <!-- /avatar -->\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- contacts -->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar content -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL2RyYXdlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {Task} from './../task';\r\nimport {GxHelper} from '@gaxon/helpers';\r\n\r\n@Component({\r\n  selector: 'todo-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService, private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Create new Task\r\n   */\r\n  onCreateTask() {\r\n    const newTask = new Task();\r\n    newTask.id = GxHelper.UUID();\r\n    newTask.created = new Date();\r\n    newTask.labels = [];\r\n    newTask.user_id = '';\r\n\r\n    if (this.tasksService.currentProject) {\r\n      newTask.project_id = this.tasksService.currentProject.id;\r\n    }\r\n\r\n    this.tasksService.addTask(newTask).then((response) => {\r\n      this.drawer.isOpen = false;\r\n      this.drawerService.update(this.drawer);\r\n\r\n      this.tasksService.setCurrentTask(newTask.id);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss']\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvZHJhd2VyL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'task-badges',\r\n  templateUrl: './badges.component.html'\r\n})\r\nexport class BadgesComponent implements OnInit {\r\n  @Input() wrap: false;\r\n  @Input() ids: number[];\r\n  @Input() labels: any[];\r\n  @Input() showAll = true;\r\n\r\n  items: number[];\r\n\r\n  ngOnInit() {\r\n    if(this.showAll) {\r\n      this.items = this.ids;\r\n    } else {\r\n      this.items = this.ids.slice(0, 2);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'btn-complete',\r\n  templateUrl: './btn-complete.component.html'\r\n})\r\nexport class BtnCompleteComponent implements OnInit {\r\n  @Input() task: Task;\r\n  @Input() display = 'checkbox';\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onToggleClick() {\r\n    this.task.completed = !this.task.completed;\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n  /**\r\n   * On Toggle complete status change\r\n   */\r\n  onToggleChange() {\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n}\r\n","import {Component, OnDestroy, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'setion-header',\r\n  templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header';\r\n  @Input() title: string;\r\n  @Input() isTask = false;\r\n\r\n  currentTask: Task;\r\n  onCurrentTaskChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update current task on changes\r\n    this.onCurrentTaskChanged =\r\n      this.tasksService.onCurrentTaskChanged\r\n        .subscribe(task => {\r\n          if (task) {\r\n            this.currentTask = task;\r\n            this.isTask = true;\r\n          } else {\r\n            this.isTask = false;\r\n          }\r\n        });\r\n  }\r\n\r\n  goToBack(event) {\r\n    event.preventDefault();\r\n\r\n    this.tasksService.setCurrentTask(null);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentTaskChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Assignee} from './../../assignee';\r\n\r\n@Component({\r\n  selector: 'app-comment-box',\r\n  templateUrl: './comment-box.component.html'\r\n})\r\nexport class CommentBoxComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'add-comment-box';\r\n  currentUser: Assignee;\r\n\r\n  commentForm: FormGroup;\r\n\r\n  constructor(private tasksService: TaskManagerService, private formBuilder: FormBuilder) {\r\n    this.currentUser = this.tasksService.currentUser;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  /**\r\n   * Create form for Task\r\n   */\r\n  createForm() {\r\n    this.commentForm = this.formBuilder.group({\r\n      user_id: this.currentUser.id,\r\n      notes: '',\r\n      createdeAt: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Call function on keydown\r\n   * @param event\r\n   */\r\n  onKeyDown(event) {\r\n    if (event.keyCode === 13 && this.commentForm.valid) {\r\n      if (!event.shiftKey) {\r\n        this.sendComment();\r\n        event.preventDefault();\r\n      }\r\n      // rest of your code\r\n    } else if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send new comment\r\n   */\r\n  sendComment() {\r\n    this.commentForm.value.createdeAt = new Date();\r\n    if(this.tasksService.saveComment(this.commentForm.value)) {\r\n      this.createForm();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {TaskManagerService} from './../../../task-manager.service';\r\nimport {Task} from './../../../task';\r\nimport {Assignee} from './../../../assignee';\r\n\r\n@Component({\r\n  selector: 'task-assignees',\r\n  templateUrl: './assignees.component.html'\r\n})\r\nexport class AssigneesComponent implements OnInit, OnDestroy {\r\n  @Input() task: Task;\r\n  assignees: Assignee[] = [];\r\n  onAssigneesChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n  }\r\n\r\n  onAssigneeChange(assigneeId) {\r\n    this.task.user_id = assigneeId;\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onAssigneesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TaskManagerService} from './../../../task-manager.service';\r\nimport {Task} from './../../../task';\r\n\r\n@Component({\r\n  selector: 'task-date',\r\n  templateUrl: './date.component.html'\r\n})\r\nexport class DateComponent implements OnInit {\r\n  @Input() task: Task;\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDuedateChange() {\r\n    this.tasksService.updateTask(this.task);\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'task-header',\r\n  templateUrl: './header.component.html'\r\n})\r\nexport class TaskHeaderComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'd-flex flex-wrap align-items-center mb-5';\r\n  @Input() task: Task;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {TaskManagerService} from './../../../task-manager.service';\r\nimport {Task} from './../../../task';\r\n\r\n@Component({\r\n  selector: 'task-labels',\r\n  templateUrl: './labels.component.html'\r\n})\r\nexport class LabelsComponent implements OnInit, OnDestroy {\r\n  @Input() task: Task;\r\n  labels: any[] = [];\r\n  onLabelsChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.tasksService.onLabelsChanged\r\n        .subscribe(labels => {\r\n          this.labels = labels;\r\n        });\r\n  }\r\n\r\n  hasLabel(labelId) {\r\n    return this.tasksService.hasLabel(labelId, this.task);\r\n  }\r\n\r\n  onToggleLabel(labelId) {\r\n    this.tasksService.toggleLabel(labelId, this.task);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Assignee} from './../../assignee';\r\n\r\n@Component({\r\n  selector: 'app-task-conversation',\r\n  templateUrl: './task-conversation.component.html'\r\n})\r\nexport class TaskConversationComponent implements OnInit, OnDestroy {\r\n  itemFrom: number;\r\n  itemTo: number;\r\n  limit = 2;\r\n  private _items: any[] = [];\r\n\r\n  comments: any[] = [];\r\n  assignees: Assignee[] = [];\r\n\r\n  onTaskConversationChanged: Subscription;\r\n  onAssigneesChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update task conversation on changes\r\n    this.onTaskConversationChanged =\r\n      this.tasksService.onTaskConversationChanged\r\n        .subscribe(data => {\r\n          if(data.id) {\r\n            this._items = data.conversations;\r\n\r\n            if (this.limit >= this._items.length) {\r\n              this.itemFrom = 0;\r\n              this.comments = this._items;\r\n            } else {\r\n              this.itemFrom = this._items.length - this.limit;\r\n              this.itemTo = this._items.length;\r\n              this.comments = this._items.slice(this.itemFrom, this.itemTo);\r\n            }\r\n          }\r\n        });\r\n\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n  }\r\n\r\n  showOlder() {\r\n    if (this.itemFrom - this.limit >= 0) {\r\n      this.itemFrom -= this.limit;\r\n    } else {\r\n      this.itemFrom = 0;\r\n    }\r\n\r\n    this.comments = this._items.slice(this.itemFrom, this.itemTo);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onTaskConversationChanged.unsubscribe();\r\n    this.onAssigneesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {Project} from './../project';\r\nimport {Task} from './../task';\r\nimport {Assignee} from './../assignee';\r\n\r\n@Component({\r\n  selector: 'app-task-details',\r\n  templateUrl: './task-details.component.html'\r\n})\r\nexport class TaskDetailsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__container';\r\n\r\n  projects: Project[];\r\n  currentUser: Assignee;\r\n  currentTask: Task;\r\n  labels: any[] = [];\r\n  taskForm: FormGroup;\r\n\r\n  onProjectsChanged: Subscription;\r\n  onCurrentTaskChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFormChange: any;\r\n  editTitle = false;\r\n\r\n  constructor(private tasksService: TaskManagerService, private formBuilder: FormBuilder) {\r\n    this.currentUser = this.tasksService.currentUser;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update projects on changes\r\n    this.onProjectsChanged =\r\n      this.tasksService.onProjectsChanged\r\n        .subscribe(projects => {\r\n          this.projects = projects;\r\n        });\r\n\r\n    // Subscribe to update current task on changes\r\n    this.onCurrentTaskChanged =\r\n      this.tasksService.onCurrentTaskChanged\r\n        .subscribe(task => {\r\n          if (task) {\r\n            this.currentTask = task;\r\n\r\n            this.taskForm = this.createTaskForm();\r\n\r\n            this.onFormChange = this.taskForm.valueChanges.pipe(\r\n              debounceTime(500),\r\n              distinctUntilChanged()\r\n            ).subscribe((data: Task) => {\r\n              this.currentTask = data;\r\n              this.tasksService.updateTask(data);\r\n            });\r\n          }\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.tasksService.onLabelsChanged\r\n        .subscribe(labels => {\r\n          this.labels = labels;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Create form for Task\r\n   */\r\n  createTaskForm() {\r\n    return this.formBuilder.group({\r\n      id: [this.currentTask.id],\r\n      title: [this.currentTask.title],\r\n      content: [this.currentTask.content],\r\n      completed: [this.currentTask.completed],\r\n      labels: [this.currentTask.labels],\r\n      created: [this.currentTask.created],\r\n      dueDate: [this.currentTask.dueDate],\r\n      user_id: [this.currentTask.user_id],\r\n      project_id: [this.currentTask.project_id],\r\n      deleted: [this.currentTask.deleted]\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onProjectsChanged.unsubscribe();\r\n    this.onCurrentTaskChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n\r\n    if (this.onFormChange) {\r\n      this.onFormChange.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1saXN0L3Rhc2stbGlzdC1pdGVtL3Rhc2stbGlzdC1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {TaskManagerService} from './../../task-manager.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Assignee} from './../../assignee';\r\nimport {Task} from './../../task';\r\n\r\n@Component({\r\n  selector: 'app-task-list-item',\r\n  templateUrl: './task-list-item.component.html',\r\n  styleUrls: ['./task-list-item.component.scss']\r\n})\r\nexport class TaskListItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.completed') completed: boolean;\r\n\r\n  @Input() task: Task;\r\n  assignees: Assignee[] = [];\r\n  labels: any[] = [];\r\n\r\n  onAssigneesChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.completed = this.task.completed;\r\n\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.tasksService.onLabelsChanged\r\n        .subscribe(labels => {\r\n          this.labels = labels;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * On Click Task\r\n   * @param event\r\n   * @param taskId\r\n   */\r\n  onClickTask(event, taskId) {\r\n    event.preventDefault();\r\n\r\n    // Set current Task\r\n    this.tasksService.setCurrentTask(taskId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onAssigneesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {Section} from './../section';\r\nimport {Task} from './../task';\r\nimport {Project} from './../project';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.scss']\r\n})\r\nexport class TaskListComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__container';\r\n  newSection: Section;\r\n  sections: Section[] = [];\r\n  tasks: Task[] = [];\r\n  currentProject: Project;\r\n\r\n  module_title = 'Dashboard';\r\n\r\n  onTasksChanged: Subscription;\r\n  onCurrentProjectChanged: Subscription;\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private tasksService: TaskManagerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update sections on changes\r\n    this.onTasksChanged =\r\n      this.tasksService.onTasksChanged\r\n        .subscribe(tasks => {\r\n          this.tasks = tasks;\r\n          this.sections = [];\r\n\r\n          if (this.currentProject) {\r\n            this.setSections();\r\n          } else {\r\n            this.sections.push({title: '', tasks: this.tasks});\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.scrollToBottom();\r\n          }, 300);\r\n        });\r\n\r\n    // Subscribe to update current project on changes\r\n    this.onCurrentProjectChanged =\r\n      this.tasksService.onCurrentProjectChanged\r\n        .subscribe(project => {\r\n          if (project) {\r\n            this.currentProject = project;\r\n            this.module_title = this.currentProject.title;\r\n            this.setSections();\r\n          } else {\r\n            this.currentProject = null;\r\n          }\r\n        });\r\n  }\r\n\r\n  setSections() {\r\n    this.sections = [];\r\n    this.newSection = {\r\n      title: '',\r\n      tasks: []\r\n    };\r\n    this.sections.push(this.newSection);\r\n    const assignedToSections = [];\r\n\r\n    this.currentProject.sections.forEach(row => {\r\n      this.newSection = {\r\n        title: row.title,\r\n        tasks: []\r\n      };\r\n\r\n      this.newSection.tasks = this.tasks.filter(task => {\r\n        if (row.tasks.indexOf(task.id) !== -1) {\r\n          assignedToSections.push(task.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      this.sections.push(this.newSection);\r\n    });\r\n\r\n    this.sections[0].tasks = this.tasks.filter(task => {\r\n      if (assignedToSections.indexOf(task.id) !== -1) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onTasksChanged.unsubscribe();\r\n    this.onCurrentProjectChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1tYW5hZ2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {TaskManagerService} from './task-manager.service';\r\nimport {Task} from './task';\r\nimport {Project} from './project';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-task-manager',\r\n  templateUrl: './task-manager.component.html',\r\n  styleUrls: ['./task-manager.component.scss']\r\n})\r\nexport class TaskManagerComponent implements OnInit, OnDestroy {\r\n  currentProject: Project;\r\n  currentTask: Task;\r\n  drawer: any;\r\n\r\n  onCurrentProjectChanged: Subscription;\r\n  onCurrentTaskChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService, private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update current project on changes\r\n    this.onCurrentProjectChanged =\r\n      this.tasksService.onCurrentProjectChanged\r\n        .subscribe(project => {\r\n          if (project) {\r\n            this.currentProject = project;\r\n          } else {\r\n            this.currentProject = null;\r\n          }\r\n        });\r\n\r\n    // Subscribe to update current task on changes\r\n    this.onCurrentTaskChanged =\r\n      this.tasksService.onCurrentTaskChanged\r\n        .subscribe(task => {\r\n          if (task) {\r\n            this.currentTask = task;\r\n          } else {\r\n            this.currentTask = null;\r\n          }\r\n\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentProjectChanged.unsubscribe();\r\n    this.onCurrentTaskChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {OwlDateTimeModule, OwlNativeDateTimeModule} from 'ng-pick-datetime';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {TaskManagerComponent} from './task-manager.component';\r\nimport {TaskManagerService} from './task-manager.service';\r\nimport {TaskListComponent} from './task-list/task-list.component';\r\nimport {TaskDetailsComponent} from './task-details/task-details.component';\r\nimport {TaskSidebarComponent} from './task-sidebar/task-sidebar.component';\r\nimport {TaskListItemComponent} from './task-list/task-list-item/task-list-item.component';\r\nimport {TaskConversationComponent} from './task-details/task-conversation/task-conversation.component';\r\nimport {CommentBoxComponent} from './task-details/comment-box/comment-box.component';\r\nimport {BadgesComponent} from './helper-widgets/badges/badges.component';\r\nimport {HeaderComponent} from './helper-widgets/header/header.component';\r\nimport {BtnCompleteComponent} from './helper-widgets/btn-complete/btn-complete.component';\r\nimport {TaskHeaderComponent} from './task-details/header/header.component';\r\nimport {AssigneesComponent} from './task-details/header/assignees/assignees.component';\r\nimport {DateComponent} from './task-details/header/date/date.component';\r\nimport {LabelsComponent} from './task-details/header/labels/labels.component';\r\nimport {DrawerComponent} from './drawer/drawer.component';\r\nimport {NotificationsComponent} from './drawer/notifications/notifications.component';\r\nimport {MessagesComponent} from './drawer/messages/messages.component';\r\nimport {SearchComponent} from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'dashboard/:taskId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'user/:userId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'user/:userId/:taskId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'project/:projectId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: 'project/:projectId/:taskId',\r\n    component: TaskManagerComponent,\r\n    resolve: {\r\n      tasks: TaskManagerService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'dashboard'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TaskManagerComponent,\r\n        TaskSidebarComponent,\r\n        TaskDetailsComponent,\r\n        TaskListComponent,\r\n        TaskListItemComponent,\r\n        TaskConversationComponent,\r\n        CommentBoxComponent,\r\n        BadgesComponent,\r\n        HeaderComponent,\r\n        BtnCompleteComponent,\r\n        TaskHeaderComponent,\r\n        AssigneesComponent,\r\n        DateComponent,\r\n        LabelsComponent,\r\n        DrawerComponent,\r\n        NotificationsComponent,\r\n        MessagesComponent,\r\n        SearchComponent\r\n    ],\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        SharedModule,\r\n        OwlDateTimeModule,\r\n        OwlNativeDateTimeModule,\r\n        PerfectScrollbarModule\r\n    ],\r\n    exports: [\r\n        TaskListComponent\r\n    ],\r\n    providers: [\r\n        TaskManagerService,\r\n        {\r\n            provide: PERFECT_SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        }\r\n    ]\r\n})\r\nexport class TaskManagerModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\nimport {Project} from './project';\r\nimport {Section} from './section';\r\nimport {Task} from './task';\r\nimport {Assignee} from './assignee';\r\n\r\n@Injectable()\r\nexport class TaskManagerService implements Resolve<any> {\r\n  private tasksUrl = 'api/tasks-list';  // URL to web api\r\n  private taskConversationUrl = 'api/task-conversation';  // URL to web api\r\n  private labelsUrl = 'api/tasks-labels';  // URL to web api\r\n  private assigneesUrl = 'api/tasks-users';  // URL to web api\r\n  private projectsUrl = 'api/tasks-projects';  // URL to web api\r\n\r\n  currentUser: Assignee;\r\n  sections: Section[];\r\n  tasks: Task[];\r\n  currentTask: Task;\r\n  conversation: any;\r\n  assignees: Assignee[];\r\n  labels: any[];\r\n  projects: Project[];\r\n  currentProject: Project;\r\n  routeParams: any;\r\n\r\n  onSectionsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onTasksChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onTaskConversationChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n  onCurrentTaskChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n  onLabelsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onAssigneesChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onProjectsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onCurrentProjectChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getTasks(),\r\n        this.getLabels(),\r\n        this.getAssignees(),\r\n        this.getProjects()\r\n      ]).then(\r\n        () => {\r\n          this.currentUser = this.assignees[0];\r\n\r\n          if (this.routeParams.projectId) {\r\n            this.setCurrentProject(this.routeParams.projectId);\r\n          } else {\r\n            this.setCurrentProject(null);\r\n          }\r\n\r\n          if (this.routeParams.taskId) {\r\n            this.setCurrentTask(this.routeParams.taskId);\r\n          } else {\r\n            this.setCurrentTask(null);\r\n          }\r\n\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get tasks\r\n   * @returns {Promise<Task[]>}\r\n   */\r\n  getTasks(): Promise<Task[]> {\r\n    if (this.routeParams.projectId) {\r\n      return this.getTasksByProjectId(this.routeParams.projectId);\r\n    } else if (this.routeParams.userId) {\r\n      if (this.routeParams.userId === 'watchlist') {\r\n        return this.getTasksList();\r\n      } else {\r\n        return this.getTasksByAssigneeId(this.routeParams.userId);\r\n      }\r\n    } else {\r\n      return this.getTasksList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get tasks by Project ID\r\n   * @param projectId\r\n   * @returns {Promise<Task[]>}\r\n   */\r\n  getTasksByProjectId(projectId): Promise<Task[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.tasksUrl + '?project_id=' + projectId)\r\n        .subscribe((response: any) => {\r\n          this.tasks = response;\r\n          this.onTasksChanged.next(this.tasks);\r\n          resolve(this.tasks);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get tasks by Assignee ID\r\n   * @param userId\r\n   * @returns {Promise<Task[]>}\r\n   */\r\n  getTasksByAssigneeId(userId): Promise<Task[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.tasksUrl + '?user_id=' + userId)\r\n        .subscribe((response: any) => {\r\n          this.tasks = response;\r\n          this.onTasksChanged.next(this.tasks);\r\n          resolve(this.tasks);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all tasks\r\n   * @returns {Promise<Task>}\r\n   */\r\n  getTasksList(): Promise<Task[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.tasksUrl)\r\n        .subscribe((response: any) => {\r\n          this.tasks = response;\r\n          this.onTasksChanged.next(this.tasks);\r\n          resolve(this.tasks);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all labels\r\n   * @returns {Promise<any>}\r\n   */\r\n  getLabels(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl)\r\n        .subscribe((response: any) => {\r\n          this.labels = response;\r\n          this.onLabelsChanged.next(this.labels);\r\n          resolve(this.labels);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all assignees\r\n   * @returns {Promise<Assignee>}\r\n   */\r\n  getAssignees(): Promise<Assignee[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.assigneesUrl)\r\n        .subscribe((response: any) => {\r\n          this.assignees = response;\r\n          this.onAssigneesChanged.next(this.assignees);\r\n          resolve(this.assignees);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all projects\r\n   * @returns {Promise<Project>}\r\n   */\r\n  getProjects(): Promise<Project[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.projectsUrl)\r\n        .subscribe((response: any) => {\r\n          this.projects = response;\r\n          this.onProjectsChanged.next(this.projects);\r\n          resolve(this.projects);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set current project by id\r\n   * @param id\r\n   */\r\n  setCurrentProject(id) {\r\n    this.currentProject = this.projects.find(project => {\r\n      if (id) {\r\n        return project.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    this.onCurrentProjectChanged.next(this.currentProject);\r\n  }\r\n\r\n  /**\r\n   * Set current task by id\r\n   * @param id\r\n   */\r\n  setCurrentTask(id) {\r\n    this.currentTask = this.tasks.find(task => {\r\n      if (id) {\r\n        return task.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (this.currentTask) {\r\n      this.getTaskConversations(this.currentTask.id);\r\n    } else {\r\n      this.onTaskConversationChanged.next({});\r\n    }\r\n\r\n    this.onCurrentTaskChanged.next(this.currentTask);\r\n\r\n    const taskParam = (this.currentTask) ? '/' + this.currentTask.id : '';\r\n    const projectId = this.routeParams.projectId;\r\n    const userId = this.routeParams.userId;\r\n\r\n    const segments = this.location.path().split('/');\r\n    if (projectId) {\r\n      this.location.go(segments[1] + '/apps/task-manager/project/' + projectId + taskParam);\r\n    } else if (userId) {\r\n      this.location.go(segments[1] + '/apps/task-manager/user/' + userId + taskParam);\r\n    } else {\r\n      this.location.go(segments[1] + '/apps/task-manager/dashboard' + taskParam);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add New Task\r\n   * @param {Task} task\r\n   * @return {Promise<any>}\r\n   */\r\n  addTask(task: Task) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.tasksUrl + '/' + task.id, {...task})\r\n        .subscribe(response => {\r\n          this.getTasks().then(tasks => {\r\n            resolve(tasks);\r\n\r\n          }, reject);\r\n\r\n          const conversation = {\r\n            id: task.id,\r\n            conversations: []\r\n          };\r\n\r\n          this.createTaskConversation(conversation);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle label on task\r\n   * @param labelId\r\n   * @param task Task\r\n   */\r\n  toggleLabel(labelId, task) {\r\n    const index = task.labels.indexOf(labelId);\r\n\r\n    if (index !== -1) {\r\n      task.labels.splice(index, 1);\r\n    } else {\r\n      task.labels.push(labelId);\r\n    }\r\n\r\n    // this.onCurrentTaskChanged.next(task);\r\n    this.updateTask(task);\r\n  }\r\n\r\n  hasLabel(labelId, task) {\r\n    if (!task.labels) {\r\n      return false;\r\n    }\r\n\r\n    return task.labels.indexOf(labelId) !== -1;\r\n  }\r\n\r\n  updateTask(task: Task) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.tasksUrl + '/' + task.id, {...task})\r\n        .subscribe(response => {\r\n          this.getTasks().then(tasks => {\r\n            resolve(tasks);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create Task conversation entry in data\r\n   * @param conversation\r\n   * @return {Promise<any>}\r\n   */\r\n  createTaskConversation(conversation: any) {\r\n    this.conversation = conversation;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.taskConversationUrl + '/' + this.conversation.id, {...this.conversation})\r\n        .subscribe(response => {\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get task conversation by Task ID\r\n   * @param taskId\r\n   * @returns {Promise<any>}\r\n   */\r\n  getTaskConversations(taskId): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.taskConversationUrl + '/' + taskId)\r\n        .subscribe((conversation: any) => {\r\n          this.conversation = conversation;\r\n          this.onTaskConversationChanged.next(this.conversation);\r\n          resolve(this.conversation);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save comment\r\n   * @param conversation\r\n   * @return boolean\r\n   */\r\n  saveComment(commnet: any) {\r\n    if (!this.conversation.conversations) {\r\n      this.conversation.conversations = [];\r\n    }\r\n\r\n    this.conversation.conversations.push(commnet);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.taskConversationUrl + '/' + this.conversation.id, {...this.conversation})\r\n        .subscribe(response => {\r\n          this.getTaskConversations(this.conversation.id).then(conversation => {\r\n            resolve(conversation);\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('An error occurred', error); // for demo purposes only\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy90YXNrLW1hbmFnZXIvdGFzay1zaWRlYmFyL3Rhc2stc2lkZWJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {TaskManagerService} from './../task-manager.service';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {Project} from './../project';\r\nimport {Assignee} from './../assignee';\r\nimport {Task} from './../task';\r\nimport {GxHelper} from '@gaxon/helpers';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\n\r\n@Component({\r\n  selector: 'app-task-sidebar',\r\n  templateUrl: './task-sidebar.component.html',\r\n  styleUrls: ['./task-sidebar.component.scss'],\r\n  animations: appAnimations\r\n})\r\nexport class TaskSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  public projects: Project[] = [];\r\n  public assignees: Assignee[] = [];\r\n  currentUser: Assignee;\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onProjectsChanged: Subscription;\r\n  onAssigneesChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private tasksService: TaskManagerService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.currentUser = this.tasksService.currentUser;\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update projects on changes\r\n    this.onProjectsChanged =\r\n      this.tasksService.onProjectsChanged\r\n        .subscribe(projects => {\r\n          this.projects = projects;\r\n        });\r\n\r\n    // Subscribe to update assignees on changes\r\n    this.onAssigneesChanged =\r\n      this.tasksService.onAssigneesChanged\r\n        .subscribe(assignees => {\r\n          this.assignees = assignees;\r\n        });\r\n\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onProjectsChanged.unsubscribe();\r\n    this.onAssigneesChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create new Task\r\n   */\r\n  onCreateTask() {\r\n    const newTask = new Task();\r\n    newTask.id = GxHelper.UUID();\r\n    newTask.created = new Date();\r\n    newTask.labels = [];\r\n    newTask.user_id = '';\r\n\r\n    if (this.tasksService.currentProject) {\r\n      newTask.project_id = this.tasksService.currentProject.id;\r\n    }\r\n\r\n    this.tasksService.addTask(newTask).then((response) => {\r\n      this.tasksService.setCurrentTask(newTask.id);\r\n    });\r\n  }\r\n}\r\n","export class Task {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  completed: boolean;\r\n  labels: any[];\r\n  created: Date;\r\n  dueDate: Date;\r\n  user_id: string;\r\n  project_id: string;\r\n  deleted: boolean;\r\n}\r\n"],"sourceRoot":"webpack:///"}