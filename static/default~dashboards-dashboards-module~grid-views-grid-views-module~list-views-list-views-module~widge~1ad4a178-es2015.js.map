{"version":3,"sources":["./node_modules/ng-simple-slideshow/ng-simple-slideshow.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgJ;AACrE;AACuC;;AAElH;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,8EAAY;AACpC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,oCAAoC,0DAAY;AAChD,kCAAkC,0DAAY;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uEAAuE,cAAc;AACrF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,qDAAqD,YAAY,IAAI,oCAAoC;AACzG;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B,yBAAyB,EAAE;AAC3B;AACA,YAAY,wEAAgB;AAC5B,2EAA2E,gBAAgB;AAC3F;AACA;AACA;AACA;AACA,6BAA6B,EAAE,sFAAsF,EAAE;AACvH;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mFAAmF,gBAAgB;AACnG;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,EAAE,UAAU,wBAAwB;AAChE;AACA;AACA,qCAAqC,EAAE;AACvC,mCAAmC,EAAE;AACrC;AACA,gFAAgF,gBAAgB;AAChG;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA,iBAAiB,sDAAsD;AACvE,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,kBAAkB;AAClB;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,kBAAkB;AAClB;AACA;AACA;AACA,wBAAwB;AACxB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA,mBAAmB;AACnB;AACA,0BAA0B;AAC1B;AACA,0BAA0B,EAAE;;AAE5B;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB,EAAE;;AAElB;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB,EAAE;;AAElB;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB,EAAE;;AAElB;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB,EAAE;;AAElB;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,EAAE;;AAEtB;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,EAAE;;AAEtB;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,EAAE;;AAErB;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,EAAE;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,0CAA0C,EAAE;;AAE5C;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK,OAAO,uDAAS,GAAG;AACxB,KAAK,OAAO,uEAAa,GAAG;AAC5B,KAAK,OAAO,oDAAM,GAAG;AACrB,KAAK,OAAO,sEAAY,GAAG;AAC3B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,yDAAW,IAAI,IAAI;AAC9E,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,IAAI;AAC3E;AACA;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,eAAe,OAAO,mDAAK,EAAE;AAC7B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,mBAAmB,OAAO,uDAAS,wBAAwB;AAC3D,mBAAmB,OAAO,uDAAS,wBAAwB;AAC3D,mBAAmB,OAAO,uDAAS,wBAAwB;AAC3D;;AAEA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,oFAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyE;AACzE","file":"default~dashboards-dashboards-module~grid-views-grid-views-module~list-views-list-views-module~widge~1ad4a178-es2015.js","sourcesContent":["import { Component, EventEmitter, Inject, Injectable, Input, NgModule, NgZone, Output, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BrowserTransferStateModule, DomSanitizer, TransferState, makeStateKey } from '@angular/platform-browser';\n\nclass SwipeService {\n    /**\n     * \\@description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n     *              else return a 0 to do nothing\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    swipe(e, when) {\n        const /** @type {?} */ coord = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const /** @type {?} */ time = new Date().getTime();\n        if (when === 'start') {\n            this._swipeCoord = coord;\n            this._swipeTime = time;\n        }\n        else if (when === 'end') {\n            const /** @type {?} */ direction = [coord[0] - this._swipeCoord[0], coord[1] - this._swipeCoord[1]];\n            const /** @type {?} */ duration = time - this._swipeTime;\n            if (duration < 1000 // Short enough\n                && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n                && Math.abs(direction[0]) > 30) {\n                return direction[0] < 0 ? 1 : -1;\n            }\n        }\n        return 0;\n    }\n}\nSwipeService.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSwipeService.ctorParameters = () => [];\n\nconst FIRST_SLIDE_KEY = makeStateKey('firstSlide');\nclass SlideshowComponent {\n    /**\n     * @param {?} _swipeService\n     * @param {?} _renderer\n     * @param {?} _transferState\n     * @param {?} _ngZone\n     * @param {?} sanitizer\n     * @param {?} platform_id\n     * @param {?} document\n     */\n    constructor(_swipeService, _renderer, _transferState, _ngZone, sanitizer, platform_id, document) {\n        this._swipeService = _swipeService;\n        this._renderer = _renderer;\n        this._transferState = _transferState;\n        this._ngZone = _ngZone;\n        this.sanitizer = sanitizer;\n        this.platform_id = platform_id;\n        this.document = document;\n        this.slideIndex = -1;\n        this.slides = [];\n        this._initial = true;\n        this._isHidden = false;\n        this.imageUrls = [];\n        this.height = '100%';\n        this.showArrows = true;\n        this.disableSwiping = false;\n        this.autoPlay = false;\n        this.autoPlayInterval = 3333;\n        this.stopAutoPlayOnSlide = true;\n        this.autoPlayWaitForLazyLoad = false;\n        this.backgroundSize = 'cover';\n        this.backgroundPosition = 'center center';\n        this.backgroundRepeat = 'no-repeat';\n        this.showDots = false;\n        this.dotColor = '#FFF';\n        this.showCaptions = true;\n        this.captionColor = '#FFF';\n        this.captionBackground = 'rgba(0, 0, 0, .35)';\n        this.lazyLoad = false;\n        this.hideOnNoSlides = false;\n        this.fullscreen = false;\n        this.onSlideLeft = new EventEmitter();\n        this.onSlideRight = new EventEmitter();\n        this.onSwipeLeft = new EventEmitter();\n        this.onSwipeRight = new EventEmitter();\n        this.onFullscreenExit = new EventEmitter();\n        this.onIndexChanged = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get safeStyleDotColor() {\n        return this.sanitizer.bypassSecurityTrustStyle(`--dot-color: ${this.dotColor}`);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.debug !== undefined) {\n            console.warn('[Deprecation Warning]: The debug input will be removed from ng-simple-slideshow in 1.3.0');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // if this is the first being called, create a copy of the input\n        if (this.imageUrls && this.imageUrls.length > 0) {\n            if (this._initial === true) {\n                this._urlCache = Array.from(this.imageUrls);\n            }\n            if (this._isHidden === true) {\n                this._renderer.removeStyle(this.container.nativeElement, 'display');\n                this._isHidden = false;\n            }\n            this.setSlides();\n        }\n        else if (this.hideOnNoSlides === true) {\n            this._renderer.setStyle(this.container.nativeElement, 'display', 'none');\n            this._isHidden = true;\n        }\n        this.setStyles();\n        this.handleAutoPlay();\n    }\n    /**\n     * \\@description this is the function that should be called to make the slides change.\n     *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n     *              0 is taken into account for failed swipes\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    onSlide(indexDirection, isSwipe) {\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slide(indexDirection, isSwipe);\n    }\n    /**\n     * \\@description Use the swipe service to detect swipe events from phone and tablets\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    onSwipe(e, when) {\n        if (this.disableSwiping === true) {\n            return;\n        }\n        const /** @type {?} */ indexDirection = this._swipeService.swipe(e, when);\n        // handle a failed swipe\n        if (indexDirection === 0) {\n            return;\n        }\n        else {\n            this.onSlide(indexDirection, true);\n        }\n    }\n    /**\n     * \\@description Redirect to current slide \"href\" if defined\n     * @param {?} e\n     * @return {?}\n     */\n    onClick(e) {\n        e.preventDefault();\n        const /** @type {?} */ currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n        if (currentSlide && currentSlide.image.clickAction) {\n            currentSlide.image.clickAction();\n        }\n        else if (currentSlide && currentSlide.image.href) {\n            this.document.location.href = currentSlide.image.href;\n        }\n    }\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    goToSlide(index) {\n        const /** @type {?} */ beforeClickIndex = this.slideIndex;\n        this.slideIndex = index - 1;\n        this.setSlideIndex(1);\n        if (!this.slides[this.slideIndex].loaded) {\n            this.loadRemainingSlides();\n        }\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slideRight(beforeClickIndex);\n        this.slides[beforeClickIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    }\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    getSlideStyle(index) {\n        const /** @type {?} */ slide = this.slides[index];\n        if (slide.loaded) {\n            return {\n                \"background-image\": 'url(' + slide.image.url + ')',\n                \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n                \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n                \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n            };\n        }\n        else {\n            // doesn't compile correctly if returning an empty object, sooooo.....\n            return {\n                \"background-image\": undefined,\n                \"background-size\": undefined,\n                \"background-position\": undefined,\n                \"background-repeat\": undefined\n            };\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    exitFullScreen(e) {\n        e.preventDefault();\n        this.fullscreen = false;\n        this.onFullscreenExit.emit(true);\n    }\n    /**\n     * \\@description Set the new slide index, then make the transition happen.\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slide(indexDirection, isSwipe) {\n        const /** @type {?} */ oldIndex = this.slideIndex;\n        this.setSlideIndex(indexDirection);\n        if (!this.slides[this.slideIndex].loaded) {\n            this.loadRemainingSlides();\n        }\n        if (indexDirection === 1) {\n            this.slideRight(oldIndex, isSwipe);\n        }\n        else {\n            this.slideLeft(oldIndex, isSwipe);\n        }\n        this.slides[oldIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    }\n    /**\n     * \\@description This is just treating the url array like a circular list.\n     * @param {?} indexDirection\n     * @return {?}\n     */\n    setSlideIndex(indexDirection) {\n        this.slideIndex += indexDirection;\n        if (this.slideIndex < 0) {\n            this.slideIndex = this.slides.length - 1;\n        }\n        if (this.slideIndex >= this.slides.length) {\n            this.slideIndex = 0;\n        }\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slideLeft(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n            this.onSwipeLeft.emit(this.slideIndex);\n        }\n        else {\n            this.onSlideLeft.emit(this.slideIndex);\n        }\n        this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n        this.slides[oldIndex].leftSide = true;\n        this.slides[oldIndex].action = 'slideOutLeft';\n        this.slides[this.slideIndex].rightSide = false;\n        this.slides[this.getRightSideIndex()].rightSide = true;\n        this.slides[this.slideIndex].action = 'slideInRight';\n    }\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slideRight(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n            this.onSwipeRight.emit(this.slideIndex);\n        }\n        else {\n            this.onSlideRight.emit(this.slideIndex);\n        }\n        this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n        this.slides[oldIndex].rightSide = true;\n        this.slides[oldIndex].action = 'slideOutRight';\n        this.slides[this.slideIndex].leftSide = false;\n        this.slides[this.getLeftSideIndex()].leftSide = true;\n        this.slides[this.slideIndex].action = 'slideInLeft';\n    }\n    /**\n     * \\@description Check to make sure slide images have been set or haven't changed\n     * @return {?}\n     */\n    setSlides() {\n        if (this.imageUrls) {\n            if (this.checkCache() || this._initial === true) {\n                this._initial = false;\n                this._urlCache = Array.from(this.imageUrls);\n                this.slides = [];\n                if (this.lazyLoad === true) {\n                    this.buildLazyLoadSlideArray();\n                }\n                else {\n                    this.buildSlideArray();\n                }\n            }\n        }\n    }\n    /**\n     * \\@description create the slides without background urls, which will be added in\n     *              for the \"lazy load,\" then load only the first slide\n     * @return {?}\n     */\n    buildLazyLoadSlideArray() {\n        for (let /** @type {?} */ image of this.imageUrls) {\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: false\n            });\n        }\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.loadFirstSlide();\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description create the slides with background urls all at once\n     * @return {?}\n     */\n    buildSlideArray() {\n        for (let /** @type {?} */ image of this.imageUrls) {\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: image } : image),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: true\n            });\n        }\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description load the first slide image if lazy loading\n     *              this takes server side and browser side into account\n     * @return {?}\n     */\n    loadFirstSlide() {\n        const /** @type {?} */ tmpIndex = this.slideIndex;\n        const /** @type {?} */ tmpImage = this.imageUrls[tmpIndex];\n        // if server side, we don't need to worry about the rest of the slides\n        if (isPlatformServer(this.platform_id)) {\n            this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[tmpIndex].loaded = true;\n            this._transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n        }\n        else {\n            const /** @type {?} */ firstSlideFromTransferState = this._transferState.get(FIRST_SLIDE_KEY, /** @type {?} */ (null));\n            // if the first slide didn't finish loading on the server side, we need to load it\n            if (firstSlideFromTransferState === null) {\n                let /** @type {?} */ loadImage = new Image();\n                loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                loadImage.addEventListener('load', () => {\n                    this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                    this.slides[tmpIndex].loaded = true;\n                });\n            }\n            else {\n                this.slides[tmpIndex] = firstSlideFromTransferState;\n                this._transferState.remove(FIRST_SLIDE_KEY);\n            }\n        }\n    }\n    /**\n     * \\@description if lazy loading in browser, start loading remaining slides\n     * \\@todo: figure out how to not show the spinner if images are loading fast enough\n     * @return {?}\n     */\n    loadRemainingSlides() {\n        for (let /** @type {?} */ i = 0; i < this.slides.length; i++) {\n            if (!this.slides[i].loaded) {\n                new Promise((resolve) => {\n                    const /** @type {?} */ tmpImage = this.imageUrls[i];\n                    let /** @type {?} */ loadImage = new Image();\n                    loadImage.addEventListener('load', () => {\n                        this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                        this.slides[i].loaded = true;\n                        resolve();\n                    });\n                    loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                });\n            }\n        }\n    }\n    /**\n     * \\@description Start or stop autoPlay, don't do it at all server side\n     * @param {?=} stopAutoPlay\n     * @return {?}\n     */\n    handleAutoPlay(stopAutoPlay) {\n        if (isPlatformServer(this.platform_id)) {\n            return;\n        }\n        if (stopAutoPlay === true || this.autoPlay === false) {\n            if (this._autoplayIntervalId) {\n                this._ngZone.runOutsideAngular(() => clearInterval(this._autoplayIntervalId));\n                this._autoplayIntervalId = null;\n            }\n        }\n        else if (!this._autoplayIntervalId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._autoplayIntervalId = setInterval(() => {\n                    if (!this.autoPlayWaitForLazyLoad || (this.autoPlayWaitForLazyLoad && this.slides[this.slideIndex].loaded)) {\n                        this._ngZone.run(() => this.slide(1));\n                    }\n                }, this.autoPlayInterval);\n            });\n        }\n    }\n    /**\n     * \\@description Keep the styles up to date with the input\n     * @return {?}\n     */\n    setStyles() {\n        if (this.fullscreen) {\n            this._renderer.setStyle(this.container.nativeElement, 'height', '100%');\n            // Would be nice to make it configurable\n            this._renderer.setStyle(this.container.nativeElement, 'background-color', 'white');\n        }\n        else {\n            // Would be nice to make it configurable\n            this._renderer.removeStyle(this.container.nativeElement, 'background-color');\n            if (this.height) {\n                this._renderer.setStyle(this.container.nativeElement, 'height', this.height);\n            }\n            if (this.minHeight) {\n                this._renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n            }\n        }\n        if (this.arrowSize) {\n            this._renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n            this._renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n            this._renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n            this._renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n        }\n    }\n    /**\n     * \\@description compare image array to the cache, returns false if no changes\n     * @return {?}\n     */\n    checkCache() {\n        return !(this._urlCache.length === this.imageUrls.length && this._urlCache.every((cacheElement, i) => cacheElement === this.imageUrls[i]));\n    }\n    /**\n     * \\@description get the index for the slide to the left of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    getLeftSideIndex(i) {\n        if (i === undefined) {\n            i = this.slideIndex;\n        }\n        if (--i < 0) {\n            i = this.slides.length - 1;\n        }\n        return i;\n    }\n    /**\n     * \\@description get the index for the slide to the right of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    getRightSideIndex(i) {\n        if (i === undefined) {\n            i = this.slideIndex;\n        }\n        if (++i >= this.slides.length) {\n            i = 0;\n        }\n        return i;\n    }\n    /**\n     * \\@description a trackBy function for the ngFor loops\n     * @param {?} index\n     * @param {?} slide\n     * @return {?}\n     */\n    trackByFn(index, slide) {\n        return slide.image;\n    }\n}\nSlideshowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'slideshow',\n                template: `\n    <!-- fullscreen bar -->\n    <div [class.display-none]=\"!fullscreen\"\n         class=\"fs-container\"\n         (click)=\"exitFullScreen($event)\">\n      <i title=\"Back\"\n         class=\"arrow-exitfs prev\"></i>\n    </div>\n    <div #container\n         (touchstart)=\"onSwipe($event, 'start')\"\n         (touchend)=\"onSwipe($event, 'end')\"\n         class=\"slideshow-container\"\n         [class.slideshow-container-fs]=\"fullscreen\">\n      <!-- slides -->\n      <a *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n         class=\"slides\"\n         href=\"{{slide?.image?.clickAction ? '#' : slide?.image?.href}}\"\n         title=\"{{slide?.image?.title}}\"\n         [ngStyle]=\"getSlideStyle(i)\"\n         [class.selected]=\"slide?.selected\"\n         [class.hide-slide]=\"!slide?.selected && !slide?.leftSide && !slide?.rightSide\"\n         [class.left-side]=\"slide?.leftSide\"\n         [class.right-side]=\"slide?.rightSide\"\n         [class.slide-in-left]=\"slide?.action === 'slideInLeft'\"\n         [class.slide-in-right]=\"slide?.action === 'slideInRight'\"\n         [class.slide-out-left]=\"slide?.action === 'slideOutLeft'\"\n         [class.slide-out-right]=\"slide?.action === 'slideOutRight'\"\n         [class.link]=\"slide?.image?.clickAction || slide?.image?.href\"\n         (click)=\"onClick($event)\">\n        <div class=\"loader\"\n             *ngIf=\"!slide?.loaded\"></div>\n        <div *ngIf=\"showCaptions && slide?.image?.caption\"\n             class=\"caption\"\n             [ngStyle]=\"{\n               'color': captionColor,\n               'background-color': captionBackground\n              }\"\n             [innerHTML]=\"slide?.image?.caption\">\n        </div>\n      </a>\n      <!-- left arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(-1)\"\n           class=\"arrow-container prev\">\n        <i #prevArrow\n           title=\"Previous\"\n           class=\"arrow prev\"></i>\n      </div>\n      <!-- right arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(1)\"\n           class=\"arrow-container next\">\n        <i #nextArrow\n           title=\"Next\"\n           class=\"arrow next\"></i>\n      </div>\n      <!-- dots -->\n      <ul class=\"slick-dots\"\n          *ngIf=\"showDots\">\n        <li *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n            (click)=\"goToSlide(i)\"\n            [class.slick-active]=\"slide.selected\">\n          <button type=\"button\"\n                  [attr.style]=\"safeStyleDotColor\">\n            {{i}}\n          </button>\n        </li>\n      </ul>\n    </div>\n  `,\n                styles: [`\n    /*\n     styles adapted from https://www.w3schools.com/w3css/4/w3.css\n     arrow styles adapted from https://codepen.io/minustalent/pen/Frhaw\n     */\n    .display-none {\n      display: none !important; }\n\n    .fs-container {\n      display: block;\n      cursor: pointer;\n      position: fixed;\n      z-index: 1;\n      top: 16px;\n      left: 16px;\n      width: 46px;\n      height: 46px;\n      text-align: center;\n      padding: 0;\n      background-color: rgba(0, 0, 0, 0.2);\n      -webkit-transition: all .2s ease-in-out;\n      transition: all .2s ease-in-out; }\n      .fs-container:hover {\n        background-color: rgba(0, 0, 0, 0.33); }\n      .fs-container .arrow-exitfs {\n        display: block;\n        width: 30px;\n        height: 30px;\n        background: transparent;\n        border-top: 2px solid #f2f2f2;\n        -webkit-transition: all .2s ease-in-out;\n        transition: all .2s ease-in-out; }\n        .fs-container .arrow-exitfs.prev {\n          -webkit-transform: rotate(-45deg);\n                  transform: rotate(-45deg);\n          position: relative;\n          left: 18px;\n          top: 18px; }\n        .fs-container .arrow-exitfs:after {\n          content: '';\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          -webkit-transform: rotate(90deg);\n                  transform: rotate(90deg);\n          position: absolute;\n          left: -15px;\n          top: -17px; }\n\n    .slideshow-container.slideshow-container-fs {\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%; }\n\n    .slideshow-container {\n      position: relative;\n      display: block;\n      margin: auto;\n      height: 100%;\n      width: 100%;\n      overflow: hidden; }\n      .slideshow-container .hide-slide {\n        visibility: hidden;\n        position: absolute;\n        top: -100vw;\n        left: -100vw;\n        opacity: 0; }\n      .slideshow-container .slides {\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: 100%;\n        visibility: visible;\n        opacity: 1;\n        display: block; }\n        .slideshow-container .slides.selected {\n          left: 0; }\n        .slideshow-container .slides.left-slide {\n          left: -100%; }\n        .slideshow-container .slides.right-slide {\n          left: 100%; }\n        .slideshow-container .slides.slide-in-left {\n          left: 0;\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-in-right {\n          left: 0;\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-left {\n          left: -100%;\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-right {\n          left: 100%;\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.link {\n          cursor: pointer; }\n        .slideshow-container .slides:not(.link) {\n          cursor: default; }\n      .slideshow-container .caption {\n        position: absolute;\n        bottom: 0;\n        padding: 10px;\n        width: 100%; }\n      .slideshow-container .arrow-container {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n        background-size: 100%;\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\n        background-image: linear-gradient(transparent, transparent);\n        z-index: 100;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none; }\n        .slideshow-container .arrow-container:before {\n          display: block;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          left: 0;\n          opacity: 0;\n          width: 100%;\n          z-index: -100;\n          -webkit-transition: opacity 0.45s;\n          transition: opacity 0.45s; }\n        .slideshow-container .arrow-container.prev {\n          left: 0; }\n          .slideshow-container .arrow-container.prev:before {\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container.next {\n          right: 0; }\n          .slideshow-container .arrow-container.next:before {\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container .arrow {\n          display: block;\n          margin: auto;\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          border-left: 2px solid #f2f2f2;\n          -webkit-transition: all .2s ease-in-out;\n          transition: all .2s ease-in-out;\n          -webkit-user-select: none;\n             -moz-user-select: none;\n              -ms-user-select: none;\n                  user-select: none; }\n          .slideshow-container .arrow-container .arrow:before {\n            display: block;\n            height: 200%;\n            width: 200%;\n            margin-left: -50%;\n            margin-top: -50%;\n            content: \"\";\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .slideshow-container .arrow-container .arrow.prev {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg);\n            position: relative;\n            left: 20px;\n            margin-right: 10px; }\n          .slideshow-container .arrow-container .arrow.next {\n            -webkit-transform: rotate(135deg);\n                    transform: rotate(135deg);\n            position: relative;\n            right: 20px;\n            margin-left: 10px; }\n      .slideshow-container .slick-dots {\n        display: block;\n        bottom: 15px;\n        z-index: 1;\n        text-align: center;\n        position: absolute;\n        padding: 0;\n        left: 0;\n        right: 0;\n        margin: 0 auto; }\n        .slideshow-container .slick-dots li {\n          display: inline;\n          margin: 0;\n          padding: 0; }\n          .slideshow-container .slick-dots li button {\n            border: none;\n            background: none;\n            text-indent: -9999px;\n            font-size: 0;\n            width: 20px;\n            height: 20px;\n            outline: none;\n            position: relative;\n            z-index: 1;\n            cursor: pointer; }\n            .slideshow-container .slick-dots li button:before {\n              content: '';\n              width: 4px;\n              height: 4px;\n              background: var(--dot-color, #FFF);\n              border-radius: 4px;\n              display: block;\n              position: absolute;\n              top: 50%;\n              left: 50%;\n              -webkit-transform: translate(-50%, -50%);\n                      transform: translate(-50%, -50%);\n              opacity: .7;\n              -webkit-transition: all .5s ease-out;\n              transition: all .5s ease-out; }\n          .slideshow-container .slick-dots li.slick-active button:before {\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\n                    transform: translate(-50%, -50%) scale(1.4);\n            opacity: 1; }\n\n    @media screen and (min-width: 768px) {\n      .slideshow-container .arrow-container:hover:before {\n        opacity: 1; }\n      .slideshow-container .arrow-container:hover .arrow {\n        border-width: 4px; }\n      .slideshow-container .arrow-container .arrow:hover {\n        border-width: 4px; } }\n\n    @-webkit-keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @-webkit-keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    @keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    .loader {\n      position: absolute;\n      left: 50%;\n      margin-left: -20px;\n      top: 50%;\n      margin-top: -20px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #555;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite; }\n\n    @-webkit-keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n\n    @keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n  `]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowComponent.ctorParameters = () => [\n    { type: SwipeService, },\n    { type: Renderer2, },\n    { type: TransferState, },\n    { type: NgZone, },\n    { type: DomSanitizer, },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n];\nSlideshowComponent.propDecorators = {\n    'imageUrls': [{ type: Input },],\n    'height': [{ type: Input },],\n    'minHeight': [{ type: Input },],\n    'arrowSize': [{ type: Input },],\n    'showArrows': [{ type: Input },],\n    'disableSwiping': [{ type: Input },],\n    'autoPlay': [{ type: Input },],\n    'autoPlayInterval': [{ type: Input },],\n    'stopAutoPlayOnSlide': [{ type: Input },],\n    'autoPlayWaitForLazyLoad': [{ type: Input },],\n    'debug': [{ type: Input },],\n    'backgroundSize': [{ type: Input },],\n    'backgroundPosition': [{ type: Input },],\n    'backgroundRepeat': [{ type: Input },],\n    'showDots': [{ type: Input },],\n    'dotColor': [{ type: Input },],\n    'showCaptions': [{ type: Input },],\n    'captionColor': [{ type: Input },],\n    'captionBackground': [{ type: Input },],\n    'lazyLoad': [{ type: Input },],\n    'hideOnNoSlides': [{ type: Input },],\n    'fullscreen': [{ type: Input },],\n    'onSlideLeft': [{ type: Output },],\n    'onSlideRight': [{ type: Output },],\n    'onSwipeLeft': [{ type: Output },],\n    'onSwipeRight': [{ type: Output },],\n    'onFullscreenExit': [{ type: Output },],\n    'onIndexChanged': [{ type: Output },],\n    'container': [{ type: ViewChild, args: ['container',] },],\n    'prevArrow': [{ type: ViewChild, args: ['prevArrow',] },],\n    'nextArrow': [{ type: ViewChild, args: ['nextArrow',] },],\n};\n\nclass SlideshowModule {\n}\nSlideshowModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    SlideshowComponent\n                ],\n                exports: [\n                    SlideshowComponent\n                ],\n                providers: [\n                    SwipeService\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowModule.ctorParameters = () => [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SlideshowModule, SlideshowComponent as ɵa, SwipeService as ɵb };\n//# sourceMappingURL=ng-simple-slideshow.js.map\n"],"sourceRoot":"webpack:///"}