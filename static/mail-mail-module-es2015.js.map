{"version":3,"sources":["./src/app/content/apps/mail/drawer/drawer.component.html","./src/app/content/apps/mail/drawer/notifications/notifications.component.html","./src/app/content/apps/mail/drawer/search/search.component.html","./src/app/content/apps/mail/helper-widgets/badges/badges.component.html","./src/app/content/apps/mail/helper-widgets/contact-hover-card/contact-hover-card.component.html","./src/app/content/apps/mail/helper-widgets/contact/contact.component.html","./src/app/content/apps/mail/helper-widgets/search-bar/search-bar.component.html","./src/app/content/apps/mail/mail-compose/mail-compose.component.html","./src/app/content/apps/mail/mail-details/details-header/details-header.component.html","./src/app/content/apps/mail/mail-details/mail-conversation/mail-conversation.component.html","./src/app/content/apps/mail/mail-details/mail-details.component.html","./src/app/content/apps/mail/mail-header/mail-header.component.html","./src/app/content/apps/mail/mail-list/mail-item/mail-item.component.html","./src/app/content/apps/mail/mail-list/mail-list.component.html","./src/app/content/apps/mail/mail-sidebar/mail-sidebar.component.html","./src/app/content/apps/mail/mail.component.html","./src/app/content/apps/mail/module-header/module-header.component.html","./src/app/content/apps/mail/drawer/drawer.component.scss","./src/app/content/apps/mail/drawer/drawer.component.ts","./src/app/content/apps/mail/drawer/notifications/notifications.component.scss","./src/app/content/apps/mail/drawer/notifications/notifications.component.ts","./src/app/content/apps/mail/drawer/search/search.component.scss","./src/app/content/apps/mail/drawer/search/search.component.ts","./src/app/content/apps/mail/helper-widgets/badges/badges.component.ts","./src/app/content/apps/mail/helper-widgets/contact-hover-card/contact-hover-card.component.scss","./src/app/content/apps/mail/helper-widgets/contact-hover-card/contact-hover-card.component.ts","./src/app/content/apps/mail/helper-widgets/contact/contact.component.ts","./src/app/content/apps/mail/helper-widgets/search-bar/search-bar.component.scss","./src/app/content/apps/mail/helper-widgets/search-bar/search-bar.component.ts","./src/app/content/apps/mail/mail-compose/mail-compose.component.scss","./src/app/content/apps/mail/mail-compose/mail-compose.component.ts","./src/app/content/apps/mail/mail-details/details-header/details-header.component.scss","./src/app/content/apps/mail/mail-details/details-header/details-header.component.ts","./src/app/content/apps/mail/mail-details/mail-conversation/mail-conversation.component.ts","./src/app/content/apps/mail/mail-details/mail-details.component.scss","./src/app/content/apps/mail/mail-details/mail-details.component.ts","./src/app/content/apps/mail/mail-header/mail-header.component.scss","./src/app/content/apps/mail/mail-header/mail-header.component.ts","./src/app/content/apps/mail/mail-list/mail-item/mail-item.component.scss","./src/app/content/apps/mail/mail-list/mail-item/mail-item.component.ts","./src/app/content/apps/mail/mail-list/mail-list.component.scss","./src/app/content/apps/mail/mail-list/mail-list.component.ts","./src/app/content/apps/mail/mail-sidebar/mail-sidebar.component.ts","./src/app/content/apps/mail/mail.component.scss","./src/app/content/apps/mail/mail.component.ts","./src/app/content/apps/mail/mail.module.ts","./src/app/content/apps/mail/mail.service.ts","./src/app/content/apps/mail/models/mail.model.ts","./src/app/content/apps/mail/module-header/module-header.component.scss","./src/app/content/apps/mail/module-header/module-header.component.ts"],"names":[],"mappings":"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","file":"mail-mail-module-es2015.js","sourcesContent":["export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<div class=\\\"badge-group\\\">\\r\\n<span *ngFor=\\\"let lid of items\\\" class=\\\"badge\\\"\\r\\n      [ngClass]=\\\"labels | getById:lid:'color'\\\">{{labels | getById:lid:'title'}}</span>\\r\\n\\r\\n  <span *ngIf=\\\"!showAll && ids.length > 2\\\" #moreBadges class=\\\"badge badge-light\\\">...</span>\\r\\n</div>\\r\\n\"","export default \"<ng-container *ngIf=\\\"contact && isVisible\\\">\\r\\n  <div class=\\\"p-4\\\">\\r\\n    <div class=\\\"dt-avatar-wrapper mb-3\\\">\\r\\n      <gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\" class=\\\"size-50\\\"></gx-avatar>\\r\\n\\r\\n      <div class=\\\"dt-avatar-info\\\">\\r\\n        <span class=\\\"dt-avatar-name h4 mb-1\\\">{{contact.first_name + ' ' + contact.last_name}}</span>\\r\\n        <span class=\\\"dt-avatar-desc f-12\\\">{{contact.email}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <gx-icon name=\\\"maps\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.location}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.connections}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"px-4 py-2 border-top d-flex justify-content-between\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\">Add to Contacts</a>\\r\\n    <div class=\\\"ml-2 ml-sm-10\\\">\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"mail\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"tag-o\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chat-app\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","export default \"<gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\"></gx-avatar>\\r\\n<!-- Contact Info -->\\r\\n<div class=\\\"dt-contact__info\\\">\\r\\n  <h4 class=\\\"dt-contact__title\\\">{{contact.first_name + ' ' + contact.last_name}}</h4>\\r\\n  <p class=\\\"dt-contact__desc\\\">{{contact.bio}}</p>\\r\\n</div>\\r\\n<!-- /contact info -->\\r\\n\"","export default \"<form>\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control border-0 shadow-none bg-focus form-control-sm\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <span class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></span>\\r\\n</form>\\r\\n\"","export default \"<div perfectScrollbar>\\r\\n  <!-- Compose Mail Header -->\\r\\n  <div class=\\\"compose-mail-box__header cursor-pointer\\\" (click)=\\\"minimized = !minimized\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n      <gx-icon name=\\\"editors\\\" class=\\\"mr-2\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      Compose New Message\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"action-area ml-auto\\\">\\r\\n      <a *ngIf=\\\"minimized\\\" class=\\\"text-white mr-3\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chevrolet-up\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <a *ngIf=\\\"!minimized\\\" class=\\\"text-white mr-3\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chevrolet-down\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a class=\\\"text-white\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onCloseClick($event)\\\">\\r\\n        <gx-icon name=\\\"remove\\\" size=\\\"sm\\\"></gx-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /compose mail header -->\\r\\n\\r\\n  <!-- Compose Mail Body -->\\r\\n  <div class=\\\"compose-mail-box__body\\\" [hidden]=\\\"minimized\\\">\\r\\n    <!-- Form -->\\r\\n    <form [formGroup]=\\\"composeMailForm\\\" (submit)=\\\"onSubmitForm()\\\">\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"form-group mb-1\\\" formArrayName=\\\"to\\\">\\r\\n        <div [formGroupName]=\\\"0\\\">\\r\\n          <label class=\\\"sr-only\\\" for=\\\"email\\\">Email address</label>\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"email\\\"\\r\\n                 placeholder=\\\"Enter email\\\"\\r\\n                 name=\\\"email\\\"\\r\\n                 formControlName=\\\"email\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"sr-only\\\" for=\\\"subject\\\">Subject</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Subject\\\"\\r\\n               id=\\\"subject\\\"\\r\\n               name=\\\"subject\\\"\\r\\n               formControlName=\\\"subject\\\">\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"sr-only\\\" for=\\\"textarea\\\">Example textarea</label>\\r\\n        <textarea class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"Your message here...\\\"\\r\\n                  id=\\\"textarea\\\"\\r\\n                  name=\\\"message\\\"\\r\\n                  formControlName=\\\"message\\\"></textarea>\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n\\r\\n        <div class=\\\"action-area ml-auto\\\">\\r\\n          <a class=\\\"text-dark\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onDiscardMail()\\\">\\r\\n            <gx-icon name=\\\"trash\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n            <span class=\\\"f-12 text-uppercase\\\">discard</span>\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n    </form>\\r\\n    <!-- /form -->\\r\\n  </div>\\r\\n  <!-- /compose mail body -->\\r\\n</div>\\r\\n\"","export default \"<!-- Action Bar -->\\r\\n<div class=\\\"d-flex flex-wrap mb-5\\\">\\r\\n  <!-- Back Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"btn btn-outline-dark btn-sm mr-auto mb-1\\\"\\r\\n     (click)=\\\"goToBack()\\\">\\r\\n    <gx-icon name=\\\"arrow-left\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n  </a>\\r\\n  <!-- /back button -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div class=\\\"btn-group btn-group-sm mr-3 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolder('archive')\\\">\\r\\n      <gx-icon name=\\\"archive\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolder('spam')\\\">\\r\\n      <gx-icon name=\\\"spam\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolder('trash')\\\">\\r\\n      <gx-icon name=\\\"trash-filled\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div class=\\\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"folder\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a  *ngFor=\\\"let folder of folders\\\"\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            class=\\\"dropdown-item\\\"\\r\\n            [ngClass]=\\\"{'active':folder.handle == currentMail.folder}\\\"\\r\\n            (click)=\\\"setFolder(folder.handle)\\\">{{folder.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"tag\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a *ngFor=\\\"let label of labels\\\"\\r\\n           href=\\\"javascript:void(0)\\\"\\r\\n           class=\\\"dropdown-item\\\"\\r\\n           [ngClass]=\\\"{'active':hasLabel(label.id)}\\\"\\r\\n           (click)=\\\"toggleLabel(label.id)\\\">{{label.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-dark btn-sm\\\" ngbDropdownToggle>\\r\\n      More\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"markAsUnread()\\\">Unread</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onToggleStarred(true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onToggleStarred(false)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /action bar -->\\r\\n\\r\\n<div class=\\\"d-flex flex-wrap\\\">\\r\\n  <h3 class=\\\"mb-0 text-truncate flex-1\\\">{{currentMail.subject}}</h3>\\r\\n\\r\\n  <!-- Badges -->\\r\\n  <task-badges class=\\\"ml-auto dt-module__list-item-info\\\"\\r\\n               [ids]=\\\"currentMail.labels\\\"\\r\\n               [labels]=\\\"labels\\\"></task-badges>\\r\\n  <!-- /badges -->\\r\\n</div>\\r\\n\"","export default \"<!-- Avatar -->\\r\\n<gx-avatar [user]=\\\"conversation.from\\\"\\r\\n           (click)=\\\"isOpened = !isOpened\\\"\\r\\n           class=\\\"mr-4 cursor-pointer\\\"></gx-avatar>\\r\\n<!-- /avatar -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__list-item-content\\\">\\r\\n  <h4 class=\\\"d-inline-block mb-1 cursor-pointer\\\" (click)=\\\"isOpened = !isOpened\\\">{{conversation.from.name}}</h4>\\r\\n  <p *ngIf=\\\"!isOpened\\\" class=\\\"mb-0 text-light-gray text-truncate\\\"\\r\\n     [innerHTML]=\\\"conversation.message | htmlToPlainText\\\"></p>\\r\\n  <p *ngIf=\\\"isOpened\\\" class=\\\"mb-0 text-light-gray\\\" [innerHTML]=\\\"conversation.message | nl2br\\\"></p>\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n  <span class=\\\"mt-1\\\">{{conversation.time}}</span>\\r\\n\\r\\n  <!-- Checkbox -->\\r\\n  <gx-star class=\\\"ml-sm-3\\\"\\r\\n           [gxModel]=\\\"conversation.starred\\\"></gx-star>\\r\\n  <!-- /checkbox -->\\r\\n\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Content Inner -->\\r\\n<div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n  <mail-details-header></mail-details-header>\\r\\n\\r\\n  <!-- Module List -->\\r\\n  <div class=\\\"dt-module__list mail-detail-list\\\">\\r\\n\\r\\n    <!-- Module Item -->\\r\\n    <div class=\\\"dt-module__list-item open\\\" [ngClass]=\\\"{'open': isOpened}\\\">\\r\\n      <!-- Avatar -->\\r\\n      <gx-avatar [user]=\\\"currentMail.from\\\"\\r\\n                 class=\\\"cursor-pointer mr-4\\\"\\r\\n                 (click)=\\\"isOpened = !isOpened\\\"></gx-avatar>\\r\\n      <!-- /avatar -->\\r\\n\\r\\n      <!-- Module Content -->\\r\\n      <div class=\\\"dt-module__list-item-content\\\">\\r\\n        <h4 class=\\\"d-inline-block cursor-pointer mb-1\\\"\\r\\n            (click)=\\\"isOpened = !isOpened\\\">{{currentMail.from.name}}</h4>\\r\\n\\r\\n        <p *ngIf=\\\"!isOpened\\\" class=\\\"mb-0 text-light-gray text-truncate\\\"\\r\\n           [innerHTML]=\\\"currentMail.message | htmlToPlainText\\\"></p>\\r\\n\\r\\n        <p *ngIf=\\\"isOpened\\\" class=\\\"mb-0 text-light-gray\\\" [innerHTML]=\\\"currentMail.message | nl2br\\\"></p>\\r\\n      </div>\\r\\n      <!-- /module content -->\\r\\n\\r\\n      <!-- Module Info -->\\r\\n      <div class=\\\"dt-module__list-item-info\\\">\\r\\n        <span class=\\\"mt-1\\\">{{currentMail.time}}</span>\\r\\n\\r\\n        <!-- Checkbox -->\\r\\n        <gx-star class=\\\"ml-sm-3\\\"\\r\\n                 [gxModel]=\\\"currentMail.starred\\\"\\r\\n                 (gxInputChange)=\\\"onToggleStarred($event)\\\"></gx-star>\\r\\n        <!-- /checkbox -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /module info -->\\r\\n    </div>\\r\\n    <!-- /Module Item -->\\r\\n\\r\\n    <mail-conversation *ngFor=\\\"let conversation of currentMail.conversation;\\\"\\r\\n                       [conversation]=\\\"conversation\\\"></mail-conversation>\\r\\n\\r\\n  </div>\\r\\n  <!-- /Module List -->\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- Action Bar -->\\r\\n<div class=\\\"d-flex flex-wrap\\\">\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown class=\\\"mr-auto\\\">\\r\\n\\r\\n    <!-- Checkbox -->\\r\\n    <gx-checkbox  class=\\\"mr-3\\\"\\r\\n                  [gxModel]=\\\"hasSelectedMails\\\"\\r\\n                 [indeterminate]=\\\"isIndeterminate\\\"\\r\\n                 (gxInputChange)=\\\"toggleSelectAll()\\\"></gx-checkbox>\\r\\n    <!-- /checkbox -->\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"text-dark\\\" ngbDropdownToggle> {{selected}} </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails()\\\">All</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deselectMails()\\\">None</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Read', 'read', true)\\\">Read</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Unread', 'read', false)\\\">Unread</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Starred', 'starred', true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Unstarred', 'starred', false)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div *ngIf=\\\"hasSelectedMails\\\" class=\\\"btn-group btn-group-sm mr-3 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolderOnSelectedMails('archive')\\\">\\r\\n      <gx-icon name=\\\"archive\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolderOnSelectedMails('spam')\\\">\\r\\n      <gx-icon name=\\\"spam\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolderOnSelectedMails('trash')\\\">\\r\\n      <gx-icon name=\\\"trash-filled\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div *ngIf=\\\"hasSelectedMails\\\" class=\\\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"folder\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a  *ngFor=\\\"let folder of folders\\\"\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            class=\\\"dropdown-item\\\"\\r\\n            (click)=\\\"setFolderOnSelectedMails(folder.handle)\\\">{{folder.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"tag\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a *ngFor=\\\"let label of labels\\\"\\r\\n           href=\\\"javascript:void(0)\\\"\\r\\n           class=\\\"dropdown-item\\\"\\r\\n           (click)=\\\"toggleLabelOnSelectedMails(label.id)\\\">{{label.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div *ngIf=\\\"hasSelectedMails\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-dark btn-sm\\\" ngbDropdownToggle>\\r\\n      More\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Read</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Unread</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /action bar -->\\r\\n\"","export default \"<!-- Checkbox -->\\r\\n<gx-checkbox class=\\\"mr-5\\\" [gxModel]=\\\"selected\\\" (gxInputChange)=\\\"onSelectedChange($event)\\\"></gx-checkbox>\\r\\n<!-- /checkbox -->\\r\\n\\r\\n<gx-star class=\\\"mr-5\\\" [gxModel]=\\\"mail.starred\\\" (gxInputChange)=\\\"onToggleStarred($event)\\\"></gx-star>\\r\\n\\r\\n<!-- Avatar -->\\r\\n<gx-avatar [user]=\\\"mail.from\\\" class=\\\"mr-4\\\"></gx-avatar>\\r\\n<!-- /avatar -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__list-item-content\\\"\\r\\n     data-location=\\\"mail-detail.html\\\">\\r\\n  <div class=\\\"user-detail\\\">\\r\\n    <span class=\\\"user-name\\\">{{mail.from.name}}</span>\\r\\n    <span class=\\\"dt-separator-v\\\">&nbsp;</span>\\r\\n    <span class=\\\"designation\\\">{{mail.subject | htmlToPlainText | slice:0:30}}</span>\\r\\n  </div>\\r\\n  <p class=\\\"mb-0 text-light-gray text-truncate\\\">{{mail.message | htmlToPlainText | slice:0:100}}</p>\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n  <!-- Badges -->\\r\\n  <task-badges class=\\\"badge-group\\\"\\r\\n               [ids]=\\\"mail.labels\\\"\\r\\n               [labels]=\\\"labels\\\"\\r\\n               [showAll]=\\\"false\\\"></task-badges>\\r\\n  <!-- /badges -->\\r\\n\\r\\n  <span>{{mail.time}}</span>\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Content Inner -->\\r\\n<div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n  <mail-header></mail-header>\\r\\n\\r\\n  <!-- Module List -->\\r\\n  <div class=\\\"dt-module__list\\\">\\r\\n\\r\\n    <div *ngIf=\\\"mails.length == 0\\\" class=\\\"dt-module__list-item\\\">\\r\\n      <p class=\\\"empty-result\\\">No record found.</p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Module Item -->\\r\\n    <mail-item *ngFor=\\\"let mail of mails | filter: searchQuery\\\"\\r\\n               [mail]=\\\"mail\\\"\\r\\n               (click)=\\\"omMailClick(mail.id)\\\"></mail-item>\\r\\n    <!-- /Module Item -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Module List -->\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- Sidebar Header -->\\r\\n<div class=\\\"dt-module__sidebar-header border-bottom\\\">\\r\\n  <div class=\\\"d-none d-md-flex align-items-center\\\">\\r\\n    <gx-icon name=\\\"open-mail\\\" size=\\\"1x\\\" class=\\\"mr-3 text-dark\\\"></gx-icon>\\r\\n    <span class=\\\"h3 mb-0\\\">Messages</span>\\r\\n  </div>\\r\\n\\r\\n  <!-- App Quick Menu -->\\r\\n  <div class=\\\"quick-menu-list d-md-none\\\">\\r\\n    <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n       href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n       (click)=\\\"toggleNavigation($event)\\\">\\r\\n      <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Search Box -->\\r\\n    <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\"\\r\\n             placeholder=\\\"Search in app...\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n        <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n    </form>\\r\\n    <!-- /search box -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n      <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"quick-menu\\\" (click)=\\\"onComposeMail()\\\">\\r\\n      <gx-icon name=\\\"editors\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n      <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n       (click)=\\\"toggleOpen($event)\\\">\\r\\n      <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /app quick menu -->\\r\\n</div>\\r\\n<!-- /sidebar header -->\\r\\n\\r\\n<!-- Sidebar Menu -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\" perfectScrollbar>\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner\\\">\\r\\n    <!-- Button -->\\r\\n    <div class=\\\"action-area mt-5 mb-7 d-none d-md-block\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-shadow btn-default compose-btn btn-rounded\\\" (click)=\\\"onComposeMail()\\\">\\r\\n        <gx-icon name=\\\"editors\\\" class=\\\"mr-2\\\" [fw]=\\\"true\\\"></gx-icon>Compose\\r\\n      </a>\\r\\n    </div>\\r\\n    <!-- /button -->\\r\\n\\r\\n    <!-- Sidebar Navigation -->\\r\\n    <ul class=\\\"dt-module-side-nav\\\">\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">main</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li *ngFor=\\\"let folder of folders\\\"\\r\\n          class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/mail/'+folder.handle\\\">\\r\\n          <gx-icon [name]=\\\"folder.icon\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{folder.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">FILTERS</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li *ngFor=\\\"let filter of filters\\\"\\r\\n          class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/mail/filter/'+filter.handle\\\">\\r\\n          <gx-icon [name]=\\\"filter.icon\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{filter.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">Labels</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li *ngFor=\\\"let label of labels\\\"\\r\\n          class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/mail/label/'+label.handle\\\">\\r\\n          <gx-icon name=\\\"tag\\\" size=\\\"lg\\\" [fw]=\\\"true\\\" [ngClass]=\\\"label.icon\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{label.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n    </ul>\\r\\n    <!-- /sidebar navigation -->\\r\\n\\r\\n    <!-- Contacts -->\\r\\n    <div class=\\\"dt-contacts contacts-list\\\">\\r\\n      <h6 class=\\\"dt-contact__heading text-uppercase\\\">CONNECTIONS</h6>\\r\\n\\r\\n      <!-- Contact -->\\r\\n      <mail-contact *ngFor=\\\"let contact of contacts\\\"\\r\\n                    [contact]=\\\"contact\\\"></mail-contact>\\r\\n      <!-- /contact -->\\r\\n\\r\\n    </div>\\r\\n    <!-- contacts -->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar Menu -->\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module\\\">\\r\\n\\r\\n      <!-- Module Sidebar -->\\r\\n      <mail-sidebar></mail-sidebar>\\r\\n      <!-- /Module Sidebar -->\\r\\n\\r\\n      <!-- Module Container -->\\r\\n      <div class=\\\"dt-module__container\\\">\\r\\n\\r\\n        <!-- Module Header -->\\r\\n        <mail-module-header></mail-module-header>\\r\\n        <!-- /Module Header -->\\r\\n\\r\\n        <!-- Module Content -->\\r\\n        <app-mail-list [hidden]=\\\"currentMail\\\" perfectScrollbar></app-mail-list>\\r\\n        <!-- Module Content -->\\r\\n\\r\\n        <app-mail-details *ngIf=\\\"currentMail\\\" perfectScrollbar></app-mail-details>\\r\\n\\r\\n      </div>\\r\\n      <!-- /Module Container -->\\r\\n\\r\\n      <!-- Module Drawer -->\\r\\n      <mail-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></mail-drawer>\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n      <!-- Module Drawer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /Module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\\r\\n\"","export default \"<mail-search-bar></mail-search-bar>\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto dt-notification\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n  <!-- Dropdown Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"dt-icon-alert\\\"></gx-icon>\\r\\n  </a>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu class=\\\"dropdown-menu-media\\\">\\r\\n    <!-- Dropdown Menu Header -->\\r\\n    <div class=\\\"dropdown-menu-header\\\">\\r\\n      <h4 class=\\\"title\\\">Notifications (9)</h4>\\r\\n\\r\\n      <div class=\\\"ml-auto action-area\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\">Mark All Read</a> <a class=\\\"ml-2\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /dropdown menu header -->\\r\\n\\r\\n    <!-- Dropdown Menu Body -->\\r\\n    <div class=\\\"dropdown-menu-body position-relative\\\" perfectScrollbar>\\r\\n\\r\\n      <div class=\\\"h-auto\\\">\\r\\n        <!-- Media -->\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n          <!-- Avatar -->\\r\\n          <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n          <!-- avatar -->\\r\\n\\r\\n          <!-- Media Body -->\\r\\n          <span class=\\\"media-body\\\">\\r\\n            <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n            <span class=\\\"meta-date\\\">\\r\\n              <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n                       [name]=\\\"notification.icon.name\\\"\\r\\n                       [ngClass]=\\\"notification.icon.color\\\"\\r\\n                       [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n              {{notification.time}}\\r\\n            </span>\\r\\n          </span>\\r\\n          <!-- /media body -->\\r\\n\\r\\n        </a>\\r\\n        <!-- /media -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Dropdown Menu Footer -->\\r\\n    <div class=\\\"dropdown-menu-footer\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\"> See All\\r\\n        <gx-icon name=\\\"arrow-right\\\" [fw]=\\\"true\\\"></gx-icon></a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu footer -->\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2RyYXdlci9kcmF3ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'mail-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2RyYXdlci9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2RyYXdlci9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'task-badges',\r\n  templateUrl: './badges.component.html'\r\n})\r\nexport class BadgesComponent implements OnInit {\r\n  @Input() ids: number[];\r\n  @Input() labels: any[];\r\n  @Input() showAll = true;\r\n\r\n  items: number[];\r\n\r\n  ngOnInit() {\r\n    if(this.showAll) {\r\n      this.items = this.ids;\r\n    } else {\r\n      this.items = this.ids.slice(0, 2);\r\n    }\r\n  }\r\n}\r\n","export default \":host {\\n  display: flex;\\n  position: fixed; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL21haWwvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL0M6XFxVc2Vyc1xcdmlub1xcdmlub3RoXFx0cnVzdHByaW1lLXYzLjFcXHRydXN0LXByaW1lLXYzL3NyY1xcYXBwXFxjb250ZW50XFxhcHBzXFxtYWlsXFxoZWxwZXItd2lkZ2V0c1xcY29udGFjdC1ob3Zlci1jYXJkXFxjb250YWN0LWhvdmVyLWNhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9hcHBzL21haWwvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL2NvbnRhY3QtaG92ZXItY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcbiJdfQ== */\"","import {Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {MailService} from '../../mail.service';\r\nimport {Contact} from './../../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-hover-card',\r\n  templateUrl: './contact-hover-card.component.html',\r\n  styleUrls: ['./contact-hover-card.component.scss']\r\n})\r\nexport class ContactHoverCardComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'card user-info-card';\r\n  isVisible = false;\r\n  position: any;\r\n  contact: Contact;\r\n  private el: HTMLElement;\r\n  onContactHovered: Subscription;\r\n\r\n  constructor(el: ElementRef, private mailService: MailService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onContactHovered = this.mailService.onContactHovered\r\n      .subscribe(data => {\r\n\r\n        this.contact = data.contact;\r\n        this.isVisible = data.show;\r\n        this.position = data.position;\r\n        this.setPosition();\r\n      });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.showContactHoveredCard();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.hideContactHoveredCard();\r\n  }\r\n\r\n  /**\r\n   * Show contact hover card\r\n   */\r\n  showContactHoveredCard() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide contact hover card\r\n   */\r\n  hideContactHoveredCard() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactHovered.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Set hover card position\r\n   */\r\n  setPosition() {\r\n    if (this.position && this.isVisible) {\r\n      const windowHeight = window.innerHeight;\r\n\r\n      if (!this.el.style.top) {\r\n        this.el.style.top = (windowHeight / 2) + 'px';\r\n      }\r\n      this.el.style.left = (this.position.left + this.position.width) + 'px';\r\n\r\n      setTimeout(() => {\r\n        const cardHeight = this.el.offsetHeight;\r\n        const cardTotalHeight = cardHeight + this.position.top + 20;\r\n        if (cardTotalHeight > windowHeight) {\r\n          this.el.style.top = (windowHeight - (cardHeight + 20)) + 'px';\r\n        } else if (cardHeight > 0) {\r\n          this.el.style.top = this.position.top + 'px';\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, HostBinding, HostListener, Input, OnInit} from '@angular/core';\r\nimport {MailService} from '../../mail.service';\r\nimport {Contact} from './../../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'mail-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-contact';\r\n  @Input() contact: Contact;\r\n  contactCardData: any = {show: false};\r\n  private el: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private mailService: MailService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.contactCardData.position = this.el.getBoundingClientRect();\r\n    this.contactCardData.show = true;\r\n    this.contactCardData.contact = this.contact;\r\n\r\n    this.mailService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.contactCardData.show = false;\r\n    this.mailService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2hlbHBlci13aWRnZXRzL3NlYXJjaC1iYXIvc2VhcmNoLWJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MailService} from './../../mail.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'mail-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'search-box ml-n4';\r\n  searchQuery: FormControl;\r\n\r\n  constructor(private mailService: MailService) {\r\n    this.searchQuery = new FormControl('');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.mailService.onSearchQueryChanged.next(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtY29tcG9zZS9tYWlsLWNvbXBvc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {GxHelper} from '@gaxon/helpers';\r\n\r\nimport {MailService} from './../mail.service';\r\nimport {Mail} from './../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'app-mail-compose',\r\n  templateUrl: './mail-compose.component.html',\r\n  styleUrls: ['./mail-compose.component.scss']\r\n})\r\nexport class MailComposeComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'compose-mail-box';\r\n\r\n  composeMail: any;\r\n  minimized = false;\r\n  composeMailForm: FormGroup;\r\n  onComposeMailClicked: Subscription;\r\n\r\n  constructor(private mailService: MailService, private componentRef: ElementRef, private formBuilder: FormBuilder) {\r\n    this.componentRef.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.composeMailForm = this.createComposeForm();\r\n\r\n    // Subscribe to update composedMail on changes\r\n    this.onComposeMailClicked = this.mailService.onComposeMailClicked\r\n      .subscribe((response: any) => {\r\n        this.componentRef.nativeElement.style.display = 'block';\r\n        this.composeMail = this.resetMail();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Reset new mail\r\n   * @return {Mail}\r\n   */\r\n  resetMail() {\r\n    const newMail = new Mail();\r\n    newMail.id = GxHelper.UUID();\r\n    newMail.from = this.mailService.currentUser;\r\n    newMail.read = true;\r\n    newMail.attachments = [];\r\n    newMail.labels = [];\r\n    newMail.conversation = [];\r\n\r\n    return newMail;\r\n  }\r\n\r\n  /**\r\n   * Create comose reactive form\r\n   */\r\n  createComposeForm() {\r\n    const subject = 'subject';\r\n    const message = 'Hi Mate,\\n' +\r\n      'Sorry for the delay in response!\\n' +\r\n      'I’m afraid, I won’t be able to join you in the conference call. I have to take my\\n' +\r\n      'daughter for her game. I hope that is ok.\\n' +\r\n      '\\n' +\r\n      'Cheers!\\n' +\r\n      'Dom';\r\n\r\n    const toUsers = new FormArray([]);\r\n\r\n    toUsers.push(\r\n      new FormGroup({\r\n        name: new FormControl(null),\r\n        email: new FormControl(null, Validators.required)\r\n      })\r\n    );\r\n\r\n    return this.formBuilder.group({\r\n      subject: new FormControl(subject, Validators.required),\r\n      message: new FormControl(message, Validators.required),\r\n      to: toUsers\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On close form\r\n   * @param event\r\n   */\r\n  onCloseClick(event) {\r\n    event.stopPropagation();\r\n\r\n    const today = new Date();\r\n    this.composeMail.time = today.getDate() + ' ' + today.toLocaleString('en', { month: 'short' });\r\n    this.composeMail.folder = 'drafts';\r\n\r\n    this.composeMail.subject = this.composeMailForm.get('subject').value;\r\n    this.composeMail.message = this.composeMailForm.get('message').value;\r\n    this.composeMail.to = this.composeMailForm.get('to').value;\r\n\r\n    this.saveMail(this.composeMail).then((response) => {\r\n      this.composeMailForm = this.createComposeForm();\r\n      this.composeMail = this.resetMail();\r\n\r\n      this.componentRef.nativeElement.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmitForm() {\r\n    const today = new Date();\r\n    this.composeMail.time = today.getDate() + ' ' + today.toLocaleString('en', { month: 'short' });\r\n    this.composeMail.folder = 'sent';\r\n\r\n    this.composeMail.subject = this.composeMailForm.get('subject').value;\r\n    this.composeMail.message = this.composeMailForm.get('message').value;\r\n    this.composeMail.to = this.composeMailForm.get('to').value;\r\n\r\n    this.saveMail(this.composeMail).then((response) => {\r\n      this.composeMailForm = this.createComposeForm();\r\n      this.composeMail = this.resetMail();\r\n\r\n      this.componentRef.nativeElement.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save mail in data\r\n   * @param mail\r\n   * @return {Promise<any>}\r\n   */\r\n  saveMail(mail) {\r\n    return this.mailService.saveMail(mail);\r\n  }\r\n\r\n  /**\r\n   * On Discard Mail\r\n   */\r\n  onDiscardMail() {\r\n    this.composeMailForm = this.createComposeForm();\r\n    this.composeMail = this.resetMail();\r\n\r\n    this.componentRef.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onComposeMailClicked.unsubscribe();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtZGV0YWlscy9kZXRhaWxzLWhlYWRlci9kZXRhaWxzLWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../../mail.service';\r\nimport {Mail} from './../../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'mail-details-header',\r\n  templateUrl: './details-header.component.html',\r\n  styleUrls: ['./details-header.component.scss']\r\n})\r\nexport class DetailsHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'd-block px-1 pb-4 border-bottom border-w-2';\r\n  currentMail: Mail;\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n\r\n  onCurrentMailChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n\r\n  constructor(private eleRef: ElementRef, private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update currentMail on changes\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n            this.eleRef.nativeElement.classList.add('mb-1');\r\n            this.eleRef.nativeElement.classList.add('mt-n1');\r\n          } else {\r\n            this.currentMail = currentMail;\r\n          }\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged =\r\n      this.mailService.onFoldersChanged\r\n        .subscribe((folders: any) => {\r\n          this.folders = folders;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Go to back mail listing\r\n   */\r\n  goToBack() {\r\n    this.mailService.setCurrentMail(null);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.currentMail.starred = event;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * Mark mail as unread\r\n   */\r\n  markAsUnread() {\r\n    this.currentMail.read = false;\r\n    this.mailService.saveMail(this.currentMail).then((response) => {\r\n      this.goToBack();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected emails\r\n   * @param folderHandle\r\n   */\r\n  setFolder(folderHandle) {\r\n    this.currentMail.folder = folderHandle;\r\n    this.mailService.saveMail(this.currentMail).then((response) => {\r\n      if(folderHandle == 'trash') {\r\n        this.goToBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check Mail has label\r\n   * @param labelId\r\n   * @return {any | boolean}\r\n   */\r\n  hasLabel(labelId) {\r\n    return this.mailService.hasLabel(labelId, this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * Change lables to selectd emails\r\n   * @param labelId\r\n   */\r\n  toggleLabel(labelId){\r\n    this.mailService.toggleLabel(labelId, this.currentMail);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentMailChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mail-conversation',\r\n  templateUrl: './mail-conversation.component.html'\r\n})\r\nexport class MailConversationComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.open') isOpened: boolean;\r\n  @Input() conversation: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtZGV0YWlscy9tYWlsLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../mail.service';\r\nimport {Mail} from './../models/mail.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-mail-details',\r\n  templateUrl: './mail-details.component.html',\r\n  styleUrls: ['./mail-details.component.scss']\r\n})\r\nexport class MailDetailsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n  currentMail: Mail;\r\n  isOpened = true;\r\n\r\n  onCurrentMailChanged: Subscription;\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update currentMail on changes\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n          } else {\r\n            this.currentMail = currentMail;\r\n            this.markAsRead();\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.scrollToBottom();\r\n          }, 300);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Mark as read mail\r\n   */\r\n  markAsRead() {\r\n    this.currentMail.read = true;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.currentMail.starred = event;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentMailChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL21haWwvbWFpbC1oZWFkZXIvQzpcXFVzZXJzXFx2aW5vXFx2aW5vdGhcXHRydXN0cHJpbWUtdjMuMVxcdHJ1c3QtcHJpbWUtdjMvc3JjXFxhcHBcXGNvbnRlbnRcXGFwcHNcXG1haWxcXG1haWwtaGVhZGVyXFxtYWlsLWhlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtaGVhZGVyL21haWwtaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3R7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuIl19 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../mail.service';\r\n\r\n@Component({\r\n  selector: 'mail-header',\r\n  templateUrl: './mail-header.component.html',\r\n  styleUrls: ['./mail-header.component.scss']\r\n})\r\nexport class MailHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'px-1 pb-4 border-bottom border-w-2 mb-1 mt-n1';\r\n  hasSelectedMails: boolean;\r\n  isIndeterminate: boolean;\r\n  selected = 'None';\r\n\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n\r\n  onSelectedMailsChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedMailsChanged =\r\n      this.mailService.onSelectedMailsChanged\r\n        .subscribe(selectedMails => {\r\n\r\n          setTimeout(() => {\r\n            this.hasSelectedMails = selectedMails.length > 0;\r\n            this.isIndeterminate = (selectedMails.length !== this.mailService.mails.length && selectedMails.length > 0);\r\n\r\n            if (selectedMails.length === 0) {\r\n              this.selected = 'None';\r\n            } else if (selectedMails.length === this.mailService.mails.length) {\r\n              this.selected = 'All';\r\n            }\r\n          }, 0);\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged =\r\n      this.mailService.onFoldersChanged\r\n        .subscribe((folders: any) => {\r\n          this.folders = folders;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Toggle select all mails\r\n   */\r\n  toggleSelectAll() {\r\n    this.mailService.toggleSelectAll();\r\n  }\r\n\r\n  /**\r\n   * Select mails by filter\r\n   * @param selected\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectMails(selected?, filterParameter?, filterValue?) {\r\n    this.selected = (selected) ? selected : this.selected;\r\n    this.mailService.selectMails(filterParameter, filterValue);\r\n  }\r\n\r\n  /**\r\n   * Deselect all mails\r\n   */\r\n  deselectMails() {\r\n    this.mailService.deselectMails();\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected emails\r\n   * @param folderHandle\r\n   */\r\n  setFolderOnSelectedMails(folderHandle) {\r\n    this.mailService.setFolderOnSelectedMails(folderHandle);\r\n  }\r\n\r\n  /**\r\n   * Change lables to selectd emails\r\n   * @param labelId\r\n   */\r\n  toggleLabelOnSelectedMails(labelId) {\r\n    this.mailService.toggleLabelOnSelectedMails(labelId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n    this.onSelectedMailsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtbGlzdC9tYWlsLWl0ZW0vbWFpbC1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {MailService} from './../../mail.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Mail} from './../../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'mail-item',\r\n  templateUrl: './mail-item.component.html',\r\n  styleUrls: ['./mail-item.component.scss']\r\n})\r\nexport class MailItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item cursor-pointer';\r\n  @HostBinding('class.selected') selected: boolean;\r\n  @Input() mail: Mail;\r\n\r\n  labels: any[] = [];\r\n  onLabelsChanged: Subscription;\r\n  onSelectedMailsChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedMailsChanged =\r\n      this.mailService.onSelectedMailsChanged\r\n        .subscribe(selectedMails => {\r\n          this.selected = selectedMails.find((mail: Mail) => {\r\n            return mail.id === this.mail.id;\r\n          });\r\n        });\r\n  }\r\n\r\n  onSelectedChange(event) {\r\n    this.selected = event;\r\n    this.mailService.toggleSelectedMail(this.mail.id);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.mail.starred = event;\r\n\r\n    this.mailService.saveMail(this.mail);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onSelectedMailsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtbGlzdC9tYWlsLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MailService} from './../mail.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Mail} from './../models/mail.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-mail-list',\r\n  templateUrl: './mail-list.component.html',\r\n  styleUrls: ['./mail-list.component.scss']\r\n})\r\nexport class MailListComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n\r\n  public mails: Mail[] = [];\r\n  public searchQuery = '';\r\n\r\n  onMailsChanged: Subscription;\r\n  onSearchQueryChanged: Subscription;\r\n\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update mails on changes\r\n    this.onMailsChanged = this.mailService.onMailsChanged\r\n      .subscribe(mails => {\r\n        this.mails = mails;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      });\r\n\r\n    // Subscribe to update search keywords on changes\r\n    this.onSearchQueryChanged = this.mailService.onSearchQueryChanged\r\n      .subscribe(searchStr => {\r\n        this.searchQuery = searchStr;\r\n        if (searchStr) {\r\n          this.mailService.setCurrentMail(null);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On click mail\r\n   * @param mailId\r\n   */\r\n  omMailClick(mailId) {\r\n    this.mailService.setCurrentMail(mailId);\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMailsChanged.unsubscribe();\r\n    this.onSearchQueryChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {MailService} from './../mail.service';\r\nimport {Contact} from './../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'mail-sidebar',\r\n  templateUrl: './mail-sidebar.component.html',\r\n  animations: appAnimations\r\n})\r\nexport class MailSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  contacts: Contact[] = [];\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n  filters: any[] = [];\r\n\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onContactsChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFiltersChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update lebels on changes\r\n    this.onLabelsChanged = this.mailService.onLabelsChanged\r\n      .subscribe(labels => {\r\n        this.labels = labels;\r\n      });\r\n\r\n    // Subscribe to update filters on changes\r\n    this.onFiltersChanged = this.mailService.onFiltersChanged\r\n      .subscribe(filters => {\r\n        this.filters = filters;\r\n      });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged = this.mailService.onFoldersChanged\r\n      .subscribe(folders => {\r\n        this.folders = folders;\r\n      });\r\n\r\n    // Subscribe to update contacts on changes\r\n    this.onContactsChanged = this.mailService.onContactsChanged\r\n      .subscribe(contacts => {\r\n        this.contacts = contacts;\r\n      });\r\n\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  onComposeMail() {\r\n    this.mailService.onComposeMailClicked.next('');\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFiltersChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DynamicDomService} from '@gaxon/services/dynamic-dom.service';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\nimport {MailService} from './mail.service';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport {MailComposeComponent} from './mail-compose/mail-compose.component';\r\nimport {Mail} from './models/mail.model';\r\n\r\n@Component({\r\n  selector: 'app-mail',\r\n  templateUrl: './mail.component.html',\r\n  styleUrls: ['./mail.component.scss']\r\n})\r\nexport class MailComponent implements OnInit, OnDestroy {\r\n  currentMail: Mail;\r\n  onCurrentMailChanged: Subscription;\r\n\r\n  composeMail: any;\r\n  hoverCard: any;\r\n\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private dynamicDom: DynamicDomService, private mailService: MailService, private drawerService: DrawerService) {\r\n    this.hoverCard = this.dynamicDom.appendComponentToBody(ContactHoverCardComponent);\r\n    this.composeMail = this.dynamicDom.appendComponentToBody(MailComposeComponent);\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n          }\r\n          else {\r\n            this.currentMail = currentMail;\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dynamicDom.destroyCard(this.hoverCard);\r\n    this.dynamicDom.destroyCard(this.composeMail);\r\n\r\n    this.onCurrentMailChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {MailService} from './mail.service';\r\nimport {MailComponent} from './mail.component';\r\nimport {MailListComponent} from './mail-list/mail-list.component';\r\nimport {MailItemComponent} from './mail-list/mail-item/mail-item.component';\r\nimport {MailSidebarComponent} from './mail-sidebar/mail-sidebar.component';\r\nimport {MailComposeComponent} from './mail-compose/mail-compose.component';\r\nimport {MailDetailsComponent} from './mail-details/mail-details.component';\r\nimport {ContactComponent} from './helper-widgets/contact/contact.component';\r\nimport {BadgesComponent} from './helper-widgets/badges/badges.component';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport {SearchBarComponent} from './helper-widgets/search-bar/search-bar.component';\r\nimport {MailHeaderComponent} from './mail-header/mail-header.component';\r\nimport {ModuleHeaderComponent} from './module-header/module-header.component';\r\nimport {DetailsHeaderComponent} from './mail-details/details-header/details-header.component';\r\nimport {MailConversationComponent} from './mail-details/mail-conversation/mail-conversation.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'filter/:filterHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'filter/:filterHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'label/:labelHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      tasks: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'label/:labelHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: ':folderHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: ':folderHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'inbox'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    MailComponent,\r\n    MailListComponent,\r\n    MailItemComponent,\r\n    MailSidebarComponent,\r\n    MailComposeComponent,\r\n    MailDetailsComponent,\r\n    ContactComponent,\r\n    BadgesComponent,\r\n    ContactHoverCardComponent,\r\n    SearchBarComponent,\r\n    MailHeaderComponent,\r\n    ModuleHeaderComponent,\r\n    DetailsHeaderComponent,\r\n    MailConversationComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ],\r\n  entryComponents: [\r\n    ContactHoverCardComponent,\r\n    MailComposeComponent\r\n  ]\r\n})\r\nexport class MailModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\nimport {Contact} from './models/contact.model';\r\nimport {Mail} from './models/mail.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MailService implements Resolve<any> {\r\n  private mailsUrl = 'api/mail-list';  // URL to web api\r\n  private contactsUrl = 'api/mail-contacts';  // URL to web api\r\n  private labelsUrl = 'api/mail-labels';  // URL to web api\r\n  private filtersUrl = 'api/mail-filters';  // URL to web api\r\n  private foldersUrl = 'api/mail-folders';  // URL to web api\r\n\r\n  mails: Mail[];\r\n  selectedMails: Mail[] = [];\r\n  currentMail: Mail;\r\n  currentUser = {\r\n    name: 'Alex Dolgove',\r\n    email: 'alex-dolgove@example.com',\r\n    avatar: ''\r\n  };\r\n\r\n  contacts: Contact[];\r\n  labels: any[];\r\n  filters: any[];\r\n  folders: any[];\r\n  routeParams: any;\r\n\r\n  onMailsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSelectedMailsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onCurrentMailChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onComposeMailClicked: Subject<any> = new Subject();\r\n  onContactHovered: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n  onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onLabelsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onFiltersChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onFoldersChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getMails(),\r\n        this.getContacts(),\r\n        this.getLabels(),\r\n        this.getFilters(),\r\n        this.getFolders()\r\n      ]).then(\r\n        () => {\r\n          if (this.routeParams.mailId) {\r\n            this.setCurrentMail(this.routeParams.mailId);\r\n          } else {\r\n            this.setCurrentMail(null);\r\n          }\r\n\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMails(): Promise<Mail[]> {\r\n    if (this.routeParams.folderHandle) {\r\n      return this.getMailsByFolder(this.routeParams.folderHandle);\r\n    } else if (this.routeParams.filterHandle) {\r\n      return this.getMailsByFilter(this.routeParams.filterHandle);\r\n    } else if (this.routeParams.labelHandle) {\r\n      return this.getMailsByLabel(this.routeParams.labelHandle);\r\n    } else {\r\n      return this.getMailsList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get mails list\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsList(): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.mailsUrl)\r\n        .subscribe((response: any) => {\r\n          this.mails = response;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by folder\r\n   * @param folder\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsByFolder(folder): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.mailsUrl + '?folder=' + folder)\r\n        .subscribe((response: any) => {\r\n          this.mails = response;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by filter\r\n   * @param filter\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsByFilter(filter): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.http.get(this.mailsUrl + '?' + filter + '=true')\r\n        .subscribe((mails: any) => {\r\n          this.mails = mails;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by label\r\n   * @param handle\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsByLabel(handle): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl + '?handle=' + handle)\r\n        .subscribe((labels: any) => {\r\n\r\n          const labelId = labels[0].id;\r\n\r\n          this.http.get(this.mailsUrl + '?labels=' + labelId)\r\n            .subscribe((mails: any) => {\r\n              this.mails = mails;\r\n              this.onMailsChanged.next(this.mails);\r\n              resolve(this.mails);\r\n            }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all labels\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getLabels(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl)\r\n        .subscribe((response: any) => {\r\n          this.labels = response;\r\n          this.onLabelsChanged.next(this.labels);\r\n          resolve(this.labels);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all filters\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getFilters(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.filtersUrl)\r\n        .subscribe((response: any) => {\r\n          this.filters = response;\r\n          this.onFiltersChanged.next(this.filters);\r\n          resolve(this.filters);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all folders\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getFolders(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.foldersUrl)\r\n        .subscribe((response: any) => {\r\n          this.folders = response;\r\n          this.onFoldersChanged.next(this.folders);\r\n          resolve(this.folders);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getContacts(): Promise<Contact[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selected mail by id\r\n   * @param id\r\n   */\r\n  toggleSelectedMail(id) {\r\n    // First, check if we already have that mail as selected...\r\n    if (this.selectedMails.length > 0) {\r\n      for (const mail of this.selectedMails) {\r\n        // ...delete the selected mail\r\n        if (mail.id === id) {\r\n          const index = this.selectedMails.indexOf(mail);\r\n\r\n          if (index !== -1) {\r\n            this.selectedMails.splice(index, 1);\r\n\r\n            // Trigger the next event\r\n            this.onSelectedMailsChanged.next(this.selectedMails);\r\n\r\n            // Return\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we don't have it, push as selected\r\n    this.selectedMails.push(\r\n      this.mails.find(mail => {\r\n        return mail.id === id;\r\n      })\r\n    );\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  /**\r\n   * Toggle select all\r\n   */\r\n  toggleSelectAll() {\r\n    if (this.selectedMails.length > 0) {\r\n      this.deselectMails();\r\n    } else {\r\n      this.selectMails();\r\n    }\r\n\r\n  }\r\n\r\n  selectMails(filterParameter?, filterValue?) {\r\n    this.selectedMails = [];\r\n\r\n    // If there is no filter, select all mails\r\n    if (filterParameter === undefined || filterValue === undefined) {\r\n      this.selectedMails = this.mails.map(x => Object.assign({}, x));\r\n    } else {\r\n      this.selectedMails.push(...\r\n        this.mails.filter(mail => {\r\n          return mail[filterParameter] === filterValue;\r\n        })\r\n      );\r\n    }\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  deselectMails() {\r\n    this.selectedMails = [];\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  /**\r\n   * Toggle label on selected mails\r\n   * @param labelId\r\n   */\r\n  toggleLabelOnSelectedMails(labelId) {\r\n    this.selectedMails.map(mail => {\r\n\r\n      const index = mail.labels.indexOf(labelId);\r\n\r\n      if (index !== -1) {\r\n        mail.labels.splice(index, 1);\r\n      } else {\r\n        mail.labels.push(labelId);\r\n      }\r\n\r\n      this.saveMail(mail);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set folder on selected mails\r\n   * @param folderHandle\r\n   */\r\n  setFolderOnSelectedMails(folderHandle) {\r\n    this.selectedMails.map(mail => {\r\n      mail.folder = folderHandle;\r\n\r\n      this.saveMail(mail);\r\n    });\r\n\r\n    this.deselectMails();\r\n  }\r\n\r\n  /**\r\n   * Set current mail by id\r\n   * @param id\r\n   */\r\n  setCurrentMail(id) {\r\n    this.currentMail = this.mails.find(mail => {\r\n      if (id) {\r\n        return mail.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    this.onCurrentMailChanged.next(this.currentMail);\r\n\r\n    const taskParam = (this.currentMail) ? '/' + this.currentMail.id : '';\r\n    const labelHandle = this.routeParams.labelHandle;\r\n    const folderHandle = this.routeParams.folderHandle;\r\n    const filterHandle = this.routeParams.filterHandle;\r\n\r\n    const segments = this.location.path().split('/');\r\n    if (labelHandle) {\r\n      this.location.go(segments[1] + '/apps/mail/label/' + labelHandle + taskParam);\r\n    } else if (filterHandle) {\r\n      this.location.go(segments[1] + '/apps/mail/filter/' + filterHandle + taskParam);\r\n    } else if (filterHandle) {\r\n      this.location.go(segments[1] + '/apps/mail/' + folderHandle + taskParam);\r\n    } else {\r\n      this.location.go(segments[1] + '/apps/mail/inbox' + taskParam);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle label on task\r\n   * @param labelId\r\n   * @param mail\r\n   */\r\n  toggleLabel(labelId, mail) {\r\n    const index = mail.labels.indexOf(labelId);\r\n\r\n    if (index !== -1) {\r\n      mail.labels.splice(index, 1);\r\n    } else {\r\n      mail.labels.push(labelId);\r\n    }\r\n\r\n    this.saveMail(mail);\r\n  }\r\n\r\n  /**\r\n   * Check mail has given label\r\n   * @param labelId\r\n   * @param mail\r\n   * @return {boolean}\r\n   */\r\n  hasLabel(labelId, mail) {\r\n    if (!mail.labels) {\r\n      return false;\r\n    }\r\n\r\n    return mail.labels.indexOf(labelId) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Save a mail\r\n   * @param {Mail} mail\r\n   * @return {Promise<any>}\r\n   */\r\n  saveMail(mail: Mail) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.mailsUrl + '/' + mail.id, {...mail})\r\n        .subscribe(response => {\r\n          this.getMails().then(mails => {\r\n            resolve(mails);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export class Mail {\r\n  id: string;\r\n  from: {\r\n    name: string,\r\n    avatar: string,\r\n    email: string\r\n  };\r\n  to: {\r\n    name: string,\r\n    email: string\r\n  }[];\r\n  subject: string;\r\n  message: string;\r\n  time: string;\r\n  read: boolean;\r\n  starred: boolean;\r\n  important: boolean;\r\n  hasAttachments: boolean;\r\n  attachments: {\r\n    type: string,\r\n    fileName: string,\r\n    preview: string,\r\n    url: string,\r\n    size: string\r\n  }[];\r\n  labels: string[];\r\n  folder: string;\r\n  conversation: any[];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21vZHVsZS1oZWFkZXIvbW9kdWxlLWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'mail-module-header',\r\n  templateUrl: './module-header.component.html',\r\n  styleUrls: ['./module-header.component.scss']\r\n})\r\nexport class ModuleHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header d-none d-md-flex';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}