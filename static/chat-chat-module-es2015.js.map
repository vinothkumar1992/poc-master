{"version":3,"sources":["./src/app/content/apps/chat/chat-area/chat-area.component.html","./src/app/content/apps/chat/chat-area/chat-box/chat-box.component.html","./src/app/content/apps/chat/chat-area/chat-conversation/chat-conversation.component.html","./src/app/content/apps/chat/chat-area/chat-header/chat-header.component.html","./src/app/content/apps/chat/chat-sidebar/chat-sidebar.component.html","./src/app/content/apps/chat/chat-sidebar/operator-profile/operator-profile.component.html","./src/app/content/apps/chat/chat.component.html","./src/app/content/apps/chat/drawer/drawer.component.html","./src/app/content/apps/chat/drawer/notifications/notifications.component.html","./src/app/content/apps/chat/drawer/search/search.component.html","./src/app/content/apps/chat/helper-widgets/contact-hover-card/contact-hover-card.component.html","./src/app/content/apps/chat/helper-widgets/contact/contact.component.html","./src/app/content/apps/chat/chat-area/chat-area.component.scss","./src/app/content/apps/chat/chat-area/chat-area.component.ts","./src/app/content/apps/chat/chat-area/chat-box/chat-box.component.ts","./src/app/content/apps/chat/chat-area/chat-conversation/chat-conversation.component.ts","./src/app/content/apps/chat/chat-area/chat-header/chat-header.component.scss","./src/app/content/apps/chat/chat-area/chat-header/chat-header.component.ts","./src/app/content/apps/chat/chat-sidebar/chat-sidebar.component.scss","./src/app/content/apps/chat/chat-sidebar/chat-sidebar.component.ts","./src/app/content/apps/chat/chat-sidebar/operator-profile/operator-profile.component.scss","./src/app/content/apps/chat/chat-sidebar/operator-profile/operator-profile.component.ts","./src/app/content/apps/chat/chat.component.scss","./src/app/content/apps/chat/chat.component.ts","./src/app/content/apps/chat/chat.module.ts","./src/app/content/apps/chat/chat.service.ts","./src/app/content/apps/chat/drawer/drawer.component.scss","./src/app/content/apps/chat/drawer/drawer.component.ts","./src/app/content/apps/chat/drawer/notifications/notifications.component.scss","./src/app/content/apps/chat/drawer/notifications/notifications.component.ts","./src/app/content/apps/chat/drawer/search/search.component.scss","./src/app/content/apps/chat/drawer/search/search.component.ts","./src/app/content/apps/chat/helper-widgets/contact-hover-card/contact-hover-card.component.scss","./src/app/content/apps/chat/helper-widgets/contact-hover-card/contact-hover-card.component.ts","./src/app/content/apps/chat/helper-widgets/contact/contact.component.ts"],"names":[],"mappings":"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","file":"chat-chat-module-es2015.js","sourcesContent":["export default \"<app-chat-header *ngIf=\\\"chatData.length > 0\\\" [contact]=\\\"currentContact\\\"></app-chat-header>\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__content position-relative\\\" perfectScrollbar>\\r\\n\\r\\n  <div *ngIf=\\\"chatData.length === 0\\\"\\r\\n       class=\\\"dt-module__content-inner h-100 d-flex flex-column justify-content-center align-items-center\\\">\\r\\n    <gx-icon name=\\\"message\\\" [fw]=\\\"true\\\" size=\\\"7x\\\" class=\\\"mb-2\\\"></gx-icon>\\r\\n    <h1 class=\\\"display-4\\\">Select User to start Chat</h1>\\r\\n\\r\\n    <button class=\\\"btn btn-primary d-md-none\\\"\\r\\n            (click)=\\\"toggleOpen($event)\\\">Select contact to start Chat\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <ng-container *ngIf=\\\"chatData.length > 0\\\">\\r\\n\\r\\n    <!-- Module Content Inner -->\\r\\n    <div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n      <!-- Chat Conversation -->\\r\\n      <div class=\\\"dt-chat__conversation\\\">\\r\\n\\r\\n        <app-chat-conversation *ngFor=\\\"let message of chatData; let i = index;\\\"\\r\\n                               [chatData]=\\\"chatData\\\"\\r\\n                               [message]=\\\"message\\\"\\r\\n                               [index]=\\\"i\\\"\\r\\n                               [operator]=\\\"operator\\\"\\r\\n                               [contact]=\\\"currentContact\\\"></app-chat-conversation>\\r\\n\\r\\n      </div>\\r\\n      <!-- /chat conversation -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /module content inner -->\\r\\n\\r\\n  </ng-container>\\r\\n\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<app-chat-box *ngIf=\\\"chatData.length > 0\\\"\\r\\n              [operator]=\\\"operator\\\"></app-chat-box>\\r\\n\"","export default \"<form [formGroup]=\\\"chatForm\\\" (ngSubmit)=\\\"chatForm.valid && sendMessage()\\\">\\r\\n  <!-- Action Tools -->\\r\\n  <div class=\\\"action-tools\\\">\\r\\n    <button class=\\\"btn btn-primary dt-fab-btn\\\" type=\\\"submit\\\" [disabled]=\\\"chatForm.invalid\\\">\\r\\n      <gx-icon name=\\\"send-new\\\" size=\\\"xl\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"dt-fab-btn dt-attachment-btn size-30\\\">\\r\\n      <input type=\\\"file\\\">\\r\\n      <gx-icon name=\\\"attach-v\\\"></gx-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /action tools -->\\r\\n\\r\\n  <!-- Media -->\\r\\n  <bs-media-object [img]=\\\"{url: operator.thumb, alt: operator.name, classlist: 'dt-avatar mr-2'}\\\">\\r\\n    <!-- Text Area -->\\r\\n    <textarea class=\\\"form-control border-0 shadow-none bg-focus\\\"\\r\\n              rows=\\\"1\\\"\\r\\n              name=\\\"message\\\"\\r\\n              formControlName=\\\"message\\\"\\r\\n              (keydown)=\\\"onKeyDown($event)\\\"\\r\\n              required\\r\\n              placeholder=\\\"Write your comment...\\\"></textarea>\\r\\n    <!-- /text area -->\\r\\n  </bs-media-object>\\r\\n  <!-- /media -->\\r\\n</form>\\r\\n\"","export default \"<ng-container *ngIf=\\\"renderMessage\\\">\\r\\n\\r\\n  <gx-avatar [user]=\\\"avatar\\\" class=\\\"size-30\\\" [charLength]=\\\"\\\"></gx-avatar>\\r\\n\\r\\n  <!-- Messages -->\\r\\n  <div class=\\\"dt-chat__message-wrapper\\\">\\r\\n\\r\\n    <!-- Message -->\\r\\n    <div class=\\\"dt-chat__message\\\"\\r\\n         *ngFor=\\\"let item of messageList\\\" [innerHTML]=\\\"item.message | nl2br\\\"></div>\\r\\n    <!-- /message -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /messages -->\\r\\n\\r\\n</ng-container>\\r\\n\"","export default \"<!-- User Detail  -->\\r\\n<div class=\\\"dt-avatar-wrapper\\\">\\r\\n  <div class=\\\"dt-avatar-status mr-2\\\">\\r\\n    <gx-avatar class=\\\"size-45\\\" [user]=\\\"contact\\\" [charLength]=\\\"0\\\"></gx-avatar>\\r\\n    <div class=\\\"dot-shape bg-success dot-shape-lg\\\"></div>\\r\\n  </div>\\r\\n  <span class=\\\"dt-avatar-info\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-name\\\">{{contact.name}}</a>\\r\\n    <span class=\\\"d-inline-block\\\">{{contact.email}}</span>\\r\\n  </span>\\r\\n</div>\\r\\n<!-- User Detail  -->\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n  <a class=\\\"no-arrow text-dark\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"horizontal-more\\\" size=\\\"lg\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <div ngbDropdownMenu>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Edit\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"trash\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Delete\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Contact List</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Favourite List\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<app-operator-profile (onMenuClick)=\\\"toggleOpen($event)\\\"></app-operator-profile>\\r\\n\\r\\n<!-- Sidebar Menu -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\">\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner\\\">\\r\\n    <!-- Card Header -->\\r\\n    <div class=\\\"card-header card-nav bg-transparent border-bottom\\\">\\r\\n      <ul class=\\\"card-header-links nav nav-underline text-uppercase\\\" role=\\\"tablist\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             href=\\\"javascript:void(0)\\\"\\r\\n             [ngClass]=\\\"{'active':activeTab == 'recent'}\\\"\\r\\n             (click)=\\\"activeTab = 'recent'\\\">Recent</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             href=\\\"javascript:void(0)\\\"\\r\\n             [ngClass]=\\\"{'active':activeTab == 'contact'}\\\"\\r\\n             (click)=\\\"activeTab = 'contact'\\\">Contact</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <!-- /card header -->\\r\\n\\r\\n    <!-- Tab Content-->\\r\\n    <div class=\\\"tab-content\\\">\\r\\n\\r\\n      <!-- Tab panel -->\\r\\n      <div class=\\\"tab-pane position-relative\\\" [ngClass]=\\\"{'active':activeTab == 'recent'}\\\" perfectScrollbar>\\r\\n\\r\\n        <!-- Contact Container -->\\r\\n        <div class=\\\"dt-contacts__container\\\">\\r\\n\\r\\n          <div class=\\\"dt-contacts__container-inner\\\">\\r\\n\\r\\n            <!-- Contacts -->\\r\\n            <div class=\\\"dt-contacts contacts-list\\\">\\r\\n\\r\\n              <!-- Contact Heading -->\\r\\n              <h5 class=\\\"dt-contact__heading\\\">Yesterday</h5>\\r\\n              <!-- /contact heading -->\\r\\n\\r\\n              <!-- Contact -->\\r\\n              <chat-contact *ngFor=\\\"let contact of recentChats\\\"\\r\\n                            [contact]=\\\"contact\\\"></chat-contact>\\r\\n              <!-- /contact -->\\r\\n\\r\\n            </div>\\r\\n            <!-- contacts -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- /contact container -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /tab panel -->\\r\\n\\r\\n      <!-- Tab panel -->\\r\\n      <div class=\\\"tab-pane position-relative\\\" [ngClass]=\\\"{'active':activeTab == 'contact'}\\\" perfectScrollbar>\\r\\n\\r\\n        <!-- Contact Container -->\\r\\n        <div class=\\\"dt-contacts__container\\\">\\r\\n\\r\\n          <div class=\\\"dt-contacts__container-inner\\\">\\r\\n\\r\\n            <!-- Contacts -->\\r\\n            <div class=\\\"dt-contacts contacts-list\\\">\\r\\n\\r\\n              <!-- Contact -->\\r\\n              <chat-contact *ngFor=\\\"let contact of contacts\\\"\\r\\n                            [contact]=\\\"contact\\\"></chat-contact>\\r\\n              <!-- /contact -->\\r\\n\\r\\n            </div>\\r\\n            <!-- contacts -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- /contact container -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /tab panel -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /tab content-->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar Menu -->\\r\\n\"","export default \"<!-- User Detail  -->\\r\\n<div *ngIf=\\\"profile\\\" class=\\\"dt-avatar-wrapper mb-8 d-none d-md-flex\\\">\\r\\n  <div class=\\\"dt-avatar-status\\\">\\r\\n    <gx-avatar [user]=\\\"profile\\\"></gx-avatar>\\r\\n    <div class=\\\"dot-shape bg-success dot-shape-lg\\\"></div>\\r\\n  </div>\\r\\n  <span class=\\\"dt-avatar-info\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-name\\\">{{profile.name}}</a>\\r\\n    <span class=\\\"f-12 d-inline-block\\\">online</span>\\r\\n  </span>\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div class=\\\"ml-auto align-self-start mt-1\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n    <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n      <gx-icon name=\\\"vertical-more\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Edit\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Contact List</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Favourite List\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- User Detail  -->\\r\\n\\r\\n<!-- App Quick Menu -->\\r\\n<div class=\\\"quick-menu-list\\\">\\r\\n  <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n     href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n     [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n     (click)=\\\"toggleNavigation($event)\\\">\\r\\n    <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <!-- Search Box -->\\r\\n  <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n    <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Search in app...\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n      <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n  </form>\\r\\n  <!-- /search box -->\\r\\n\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu\\\"\\r\\n     [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n     (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n    <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu\\\"\\r\\n     [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n     (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n    <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div class=\\\"quick-menu\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n      <gx-icon name=\\\"circle-add-o\\\"></gx-icon>\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Group</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Chat</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Contact</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n\\r\\n  <div class=\\\"quick-menu d-md-none\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n    <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n      <gx-avatar [user]=\\\"profile\\\" class=\\\"size-25\\\"></gx-avatar>\\r\\n    </a>\\r\\n\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Edit\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Contact List</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Favourite List\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu d-md-none\\\"\\r\\n     [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n     (click)=\\\"toggleOpen($event)\\\">\\r\\n    <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /app quick menu -->\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module dt-module--chat\\\">\\r\\n\\r\\n      <!-- Module sidebar -->\\r\\n      <app-chat-sidebar></app-chat-sidebar>\\r\\n      <!-- /module sidebar -->\\r\\n\\r\\n      <!-- Module Container -->\\r\\n      <app-chat-area></app-chat-area>\\r\\n      <!-- /module Container -->\\r\\n\\r\\n      <!-- Module Drawer -->\\r\\n      <chat-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></chat-drawer>\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n      <!-- Module Drawer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /grid -->\\r\\n\"","export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" ngbDropdown>\\r\\n          <!-- Dropdown Button -->\\r\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"dt-action-nav__link no-arrow\\\" ngbDropdownToggle>\\r\\n            <gx-icon name=\\\"circle-add-o\\\"></gx-icon>\\r\\n          </a>\\r\\n          <!-- /dropdown button -->\\r\\n\\r\\n          <!-- Dropdown Menu -->\\r\\n          <div ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Group</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Chat</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Contact</a>\\r\\n          </div>\\r\\n          <!-- /dropdown menu -->\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<ng-container *ngIf=\\\"contact && isVisible\\\">\\r\\n  <div class=\\\"p-4\\\">\\r\\n    <div class=\\\"dt-avatar-wrapper mb-3\\\">\\r\\n      <gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\" class=\\\"size-50\\\"></gx-avatar>\\r\\n\\r\\n      <div class=\\\"dt-avatar-info\\\">\\r\\n        <span class=\\\"dt-avatar-name h4 mb-1\\\">{{contact.name}}</span>\\r\\n        <span class=\\\"dt-avatar-desc f-12\\\">{{contact.email}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <gx-icon name=\\\"maps\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.location}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.connections}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"px-4 py-2 border-top d-flex justify-content-between\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\">Add to Contacts</a>\\r\\n    <div class=\\\"ml-2 ml-sm-10\\\">\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"mail\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"tag-o\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chat-app\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","export default \"<gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\"></gx-avatar>\\r\\n<!-- Contact Info -->\\r\\n<div class=\\\"dt-contact__info\\\">\\r\\n  <h4 class=\\\"dt-contact__title\\\">{{contact.name}}</h4>\\r\\n  <p class=\\\"dt-contact__desc\\\">{{contact.bio}}</p>\\r\\n</div>\\r\\n<!-- /contact info -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtYXJlYS9jaGF0LWFyZWEuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from './../chat.service';\r\nimport {Contact} from './../contact.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-chat-area',\r\n  templateUrl: './chat-area.component.html',\r\n  styleUrls: ['./chat-area.component.scss']\r\n})\r\nexport class ChatAreaComponent implements OnInit, OnDestroy {\r\n  currentContact: Contact;\r\n  operator: any;\r\n  chatData: any[] = [];\r\n  onChatConversationChanged: Subscription;\r\n  onCurrentContactChanged: Subscription;\r\n  onChatOperatorChanged: Subscription;\r\n  toggleChatSidebarService: Subscription;\r\n  isOpen = false;\r\n\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private eleRef: ElementRef, private chatService: ChatService) {\r\n    this.eleRef.nativeElement.classList.add('dt-module__container');\r\n\r\n    // Subscribe to update conversation on changes\r\n    this.onChatConversationChanged = this.chatService.onChatConversationChanged.subscribe((conversation) => {\r\n      if (conversation.id && conversation.conversationData.length > 0) {\r\n        this.chatData = conversation.conversationData;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      }\r\n    });\r\n\r\n    // Subscribe to update conversation on changes\r\n    this.onCurrentContactChanged = this.chatService.onCurrentContactChanged.subscribe((contact) => {\r\n      this.currentContact = contact;\r\n    });\r\n\r\n    // Subscribe to update operator on changes\r\n    this.onChatOperatorChanged = this.chatService.onChatOperatorChanged.subscribe((operator) => {\r\n      this.operator = operator;\r\n    });\r\n\r\n    this.toggleChatSidebarService = this.chatService.toggleChatSubject.subscribe(toggleChatSidebar => {\r\n      this.isOpen = toggleChatSidebar;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onChatConversationChanged.unsubscribe();\r\n    this.onCurrentContactChanged.unsubscribe();\r\n    this.toggleChatSidebarService.unsubscribe();\r\n    this.onChatOperatorChanged.unsubscribe();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  toggleOpen(event: Event) {\r\n    event.preventDefault();\r\n    this.isOpen = !this.isOpen;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n}\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\nimport {ChatService} from './../../chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-box',\r\n  templateUrl: './chat-box.component.html'\r\n})\r\nexport class ChatBoxComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'd-block add-comment-box';\r\n  @Input() operator: any;\r\n\r\n  chatForm: FormGroup;\r\n\r\n  constructor(private chatService: ChatService, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  /**\r\n   * Create form for Task\r\n   */\r\n  createForm() {\r\n    this.chatForm = this.formBuilder.group({\r\n      senderId: this.operator.id,\r\n      message: '',\r\n      sentAt: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Call function on keydown\r\n   * @param event\r\n   */\r\n  onKeyDown(event) {\r\n    if (event.keyCode === 13 && this.chatForm.valid) {\r\n      if (!event.shiftKey) {\r\n        this.sendMessage();\r\n        event.preventDefault();\r\n      }\r\n      // rest of your code\r\n    } else if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send Chat message\r\n   */\r\n  sendMessage() {\r\n    this.chatForm.value.sentAt = new Date();\r\n    if (this.chatService.saveConversation(this.chatForm.value)) {\r\n      this.createForm();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, HostBinding, Input, OnInit} from '@angular/core';\r\n\r\nlet storedMessages = [];\r\n\r\n@Component({\r\n  selector: 'app-chat-conversation',\r\n  templateUrl: './chat-conversation.component.html'\r\n})\r\nexport class ChatConversationComponent implements OnInit {\r\n  @HostBinding('class.reply') replied = false;\r\n  @Input() chatData: any;\r\n  @Input() index: any;\r\n  @Input() message: any;\r\n  @Input() operator: any;\r\n  @Input() contact: any;\r\n\r\n  prevMessage: any;\r\n  nextMessage: any;\r\n  avatar: any;\r\n  renderMessage = true;\r\n  messageList: any[] = [];\r\n\r\n  constructor(private eleRef: ElementRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.operator.id === this.message.senderId) {\r\n      this.replied = true;\r\n      this.avatar = this.operator;\r\n    } else {\r\n      this.replied = false;\r\n      this.avatar = this.contact;\r\n    }\r\n\r\n    if (this.index > 0) {\r\n      this.prevMessage = this.chatData[this.index - 1];\r\n    }\r\n\r\n    if (this.index < (this.chatData.length - 1)) {\r\n      this.nextMessage = this.chatData[this.index + 1];\r\n    }\r\n\r\n    if (this.nextMessage) {\r\n      if (this.nextMessage && this.nextMessage.senderId === this.message.senderId) {\r\n        storedMessages.push(this.message);\r\n        this.renderMessage = false;\r\n      } else if (this.nextMessage.senderId !== this.message.senderId) {\r\n        storedMessages.push(this.message);\r\n\r\n        this.messageList = storedMessages;\r\n        storedMessages = [];\r\n        this.renderMessage = true;\r\n      }\r\n    } else {\r\n      storedMessages.push(this.message);\r\n\r\n      this.messageList = storedMessages;\r\n      storedMessages = [];\r\n      this.renderMessage = true;\r\n    }\r\n\r\n    if(this.renderMessage) {\r\n      this.eleRef.nativeElement.classList.add('dt-chat__item');\r\n    } else {\r\n      this.eleRef.nativeElement.style.display = 'none';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtYXJlYS9jaGF0LWhlYWRlci9jaGF0LWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {Contact} from './../../contact.model';\r\n\r\n@Component({\r\n  selector: 'app-chat-header',\r\n  templateUrl: './chat-header.component.html',\r\n  styleUrls: ['./chat-header.component.scss']\r\n})\r\nexport class ChatHeaderComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__header';\r\n  @Input() contact: Contact;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtc2lkZWJhci9jaGF0LXNpZGViYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, HostBinding, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from './../chat.service';\r\nimport {Contact} from './../contact.model';\r\n\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\n\r\n@Component({\r\n  selector: 'app-chat-sidebar',\r\n  templateUrl: './chat-sidebar.component.html',\r\n  styleUrls: ['./chat-sidebar.component.scss'],\r\n  animations: appAnimations\r\n})\r\nexport class ChatSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  @ViewChild('tabset', {static: false}) tabset: ElementRef;\r\n\r\n  contacts: Contact[] = [];\r\n  recentChats: Contact[] = [];\r\n  activeTab = 'recent';\r\n\r\n  onContactsChanged: Subscription;\r\n  onRecentChatsChanged: Subscription;\r\n  toggleChatSidebarService: Subscription;\r\n  onChatConversationChanged: Subscription;\r\n\r\n  constructor(private chatService: ChatService) {\r\n    // Subscribe to update contacts on changes\r\n    this.onContactsChanged = this.chatService.onContactsChanged.subscribe((contacts: Contact[]) => {\r\n      this.contacts = contacts;\r\n    });\r\n\r\n    // Subscribe to update recentChats on changes\r\n    this.onRecentChatsChanged = this.chatService.onRecentChatsChanged.subscribe((recentChats: Contact[]) => {\r\n      this.recentChats = recentChats;\r\n    });\r\n\r\n    this.toggleChatSidebarService = this.chatService.toggleChatSubject.subscribe(toggleChatSidebar => {\r\n      this.isOpen = toggleChatSidebar;\r\n    });\r\n\r\n    // Subscribe to update conversation on changes\r\n    this.onChatConversationChanged = this.chatService.onChatConversationChanged.subscribe((conversation) => {\r\n      this.isOpen = window.innerWidth > 767;\r\n      this.chatService.toggleChatSubject.next(this.isOpen);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(event) {\r\n    this.isOpen = event;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onRecentChatsChanged.unsubscribe();\r\n    this.toggleChatSidebarService.unsubscribe();\r\n    this.onChatConversationChanged.unsubscribe();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtc2lkZWJhci9vcGVyYXRvci1wcm9maWxlL29wZXJhdG9yLXByb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {ChatService} from './../../chat.service';\r\nimport {DrawerService} from './../../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-operator-profile',\r\n  templateUrl: './operator-profile.component.html',\r\n  styleUrls: ['./operator-profile.component.scss']\r\n})\r\nexport class OperatorProfileComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__sidebar-header pb-0';\r\n\r\n  profile: any;\r\n  activeMenu: string;\r\n  drawer: any;\r\n  isOpen = false;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onDrawerChanged: Subscription;\r\n  onChatOperatorChanged: Subscription;\r\n  toggleChatSidebarService: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private chatService: ChatService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.toggleChatSidebarService = this.chatService.toggleChatSubject.subscribe(toggleChatSidebar => {\r\n      this.isOpen = toggleChatSidebar;\r\n    });\r\n\r\n    // Subscribe to update operator on changes\r\n    this.onChatOperatorChanged = this.chatService.onChatOperatorChanged.subscribe((operator) => {\r\n      this.profile = operator;\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n    this.isOpen = !this.isOpen;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onChatOperatorChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.toggleChatSidebarService.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {DynamicDomService} from '@gaxon/services/dynamic-dom.service';\r\n\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\n\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy {\r\n  hoverCard: any;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private dynamicDom: DynamicDomService, private drawerService: DrawerService) {\r\n    this.hoverCard = this.dynamicDom.appendComponentToBody(ContactHoverCardComponent);\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dynamicDom.destroyCard(this.hoverCard);\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {ChatService} from './chat.service';\r\nimport {ChatComponent} from './chat.component';\r\nimport {ChatSidebarComponent} from './chat-sidebar/chat-sidebar.component';\r\nimport {OperatorProfileComponent} from './chat-sidebar/operator-profile/operator-profile.component';\r\nimport {ChatAreaComponent} from './chat-area/chat-area.component';\r\nimport {ChatConversationComponent} from './chat-area/chat-conversation/chat-conversation.component';\r\nimport {ChatBoxComponent} from './chat-area/chat-box/chat-box.component';\r\nimport {ContactComponent} from './helper-widgets/contact/contact.component';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport { ChatHeaderComponent } from './chat-area/chat-header/chat-header.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChatComponent,\r\n    resolve: {\r\n      list: ChatService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    ChatComponent,\r\n    ChatSidebarComponent,\r\n    OperatorProfileComponent,\r\n    ChatAreaComponent,\r\n    ChatConversationComponent,\r\n    ChatBoxComponent,\r\n    ContactComponent,\r\n    ContactHoverCardComponent,\r\n    ChatHeaderComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  entryComponents: [\r\n    ContactHoverCardComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ]\r\n})\r\nexport class ChatModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {Contact} from './contact.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ChatService implements Resolve<any> {\r\n    private contactsUrl = 'api/chat-contacts';  // URL to web api\r\n    private chatConversationUrl = 'api/chat-conversation';  // URL to web api\r\n    private chatOperatorUrl = 'api/chat-operator';  // URL to web api\r\n\r\n    contacts: Contact[];\r\n    currentContact: Contact;\r\n    recentChats: Contact[];\r\n    chatConversation: any;\r\n    chatOperator: any;\r\n    routeParams: any;\r\n    toggleChatSubject: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n    onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onCurrentContactChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n    onRecentChatsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onChatConversationChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n    onChatOperatorChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n    onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n    onContactHovered: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n    constructor(private http: HttpClient, private location: Location) {\r\n    }\r\n\r\n    /**\r\n     * Resolve\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getRecentChats(),\r\n                this.getChatOperator()\r\n            ]).then(() => {\r\n                    /* if (this.routeParams.mailId) {\r\n                      this.setCurrentMail(this.routeParams.mailId);\r\n                    } else {\r\n                      this.setCurrentMail(null);\r\n                    } */\r\n\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all contacts\r\n     * @returns {Promise<Contact[]>}\r\n     */\r\n    getContacts(): Promise<Contact[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.contactsUrl)\r\n                .subscribe((response: any) => {\r\n                    this.contacts = response;\r\n                    this.onContactsChanged.next(this.contacts);\r\n                    resolve(this.contacts);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get recent chats\r\n     * @returns {Promise<Contact[]>}\r\n     */\r\n    getRecentChats(): Promise<Contact[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.contactsUrl + '?recent=true')\r\n                .subscribe((response: any) => {\r\n                    this.recentChats = response;\r\n                    this.onRecentChatsChanged.next(this.recentChats);\r\n                    resolve(this.recentChats);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get Chat Operator\r\n     * @return {Promise<any[]>}\r\n     */\r\n    getChatOperator(): Promise<any[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.chatOperatorUrl)\r\n                .subscribe((operator: any) => {\r\n                    this.chatOperator = operator;\r\n                    this.onChatOperatorChanged.next(this.chatOperator);\r\n                    resolve(this.chatOperator);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get chat conversation by conversation id\r\n     * @param cId\r\n     * @return {Promise<any[]>}\r\n     */\r\n    getChatConversation(cId): Promise<any[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.chatConversationUrl + '/' + cId)\r\n                .subscribe((response: any) => {\r\n                    this.chatConversation = response;\r\n                    this.onChatConversationChanged.next(this.chatConversation);\r\n                    resolve(this.chatConversation);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save a conversation\r\n     * @param {any} newMessage\r\n     * @return {Promise<any>}\r\n     */\r\n    saveConversation(newMessage: any) {\r\n        this.chatConversation.conversationData.push(newMessage);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post(this.chatConversationUrl + '/' + this.chatConversation.id, {...this.chatConversation})\r\n                .subscribe(response => {\r\n                    this.getChatConversation(this.chatConversation.id).then(res => {\r\n                        resolve(res);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2RyYXdlci9kcmF3ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'chat-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2RyYXdlci9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2RyYXdlci9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: flex;\\n  position: fixed; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL2NoYXQvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL0M6XFxVc2Vyc1xcdmlub1xcdmlub3RoXFx0cnVzdHByaW1lLXYzLjFcXHRydXN0LXByaW1lLXYzL3NyY1xcYXBwXFxjb250ZW50XFxhcHBzXFxjaGF0XFxoZWxwZXItd2lkZ2V0c1xcY29udGFjdC1ob3Zlci1jYXJkXFxjb250YWN0LWhvdmVyLWNhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9hcHBzL2NoYXQvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL2NvbnRhY3QtaG92ZXItY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcbiJdfQ== */\"","import {Component, ElementRef, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '../../chat.service';\r\nimport {Contact} from './../../contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-hover-card',\r\n  templateUrl: './contact-hover-card.component.html',\r\n  styleUrls: ['./contact-hover-card.component.scss']\r\n})\r\nexport class ContactHoverCardComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'card user-info-card';\r\n  isVisible = false;\r\n  position: any;\r\n  contact: Contact;\r\n  private el: HTMLElement;\r\n  onContactHovered: Subscription;\r\n\r\n  constructor(el: ElementRef, private chatService: ChatService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onContactHovered = this.chatService.onContactHovered\r\n      .subscribe(data => {\r\n\r\n        this.contact = data.contact;\r\n        this.isVisible = data.show;\r\n        this.position = data.position;\r\n        this.setPosition();\r\n      });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.showContactHoveredCard();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.hideContactHoveredCard();\r\n  }\r\n\r\n  /**\r\n   * Show contact hover card\r\n   */\r\n  showContactHoveredCard() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide contact hover card\r\n   */\r\n  hideContactHoveredCard() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactHovered.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Set hover card position\r\n   */\r\n  setPosition() {\r\n    if (this.position && this.isVisible) {\r\n      const windowHeight = window.innerHeight;\r\n\r\n      if (!this.el.style.top) {\r\n        this.el.style.top = (windowHeight / 2) + 'px';\r\n      }\r\n      this.el.style.left = (this.position.left + this.position.width) + 'px';\r\n\r\n      setTimeout(() => {\r\n        const cardHeight = this.el.offsetHeight;\r\n        const cardTotalHeight = cardHeight + this.position.top + 20;\r\n        if (cardTotalHeight > windowHeight) {\r\n          this.el.style.top = (windowHeight - (cardHeight + 20)) + 'px';\r\n        } else if (cardHeight > 0) {\r\n          this.el.style.top = this.position.top + 'px';\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '../../chat.service';\r\nimport {Contact} from './../../contact.model';\r\n\r\n@Component({\r\n  selector: 'chat-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-contact';\r\n  @HostBinding('class.active') isActive = false;\r\n  @Input() contact: Contact;\r\n  contactCardData: any = {show: false};\r\n  private el: HTMLElement;\r\n\r\n  onChatConversationChanged: Subscription;\r\n\r\n  constructor(el: ElementRef, private chatService: ChatService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update conversation on changes\r\n    this.onChatConversationChanged = this.chatService.onChatConversationChanged.subscribe((conversation) => {\r\n      if (conversation.id && conversation.conversationData.length > 0) {\r\n        this.isActive = conversation.id === this.contact.id;\r\n      } else {\r\n        this.isActive = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.chatService.getChatConversation(this.contact.id).then((data) => {\r\n      this.chatService.onCurrentContactChanged.next(this.contact);\r\n    });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.contactCardData.position = this.el.getBoundingClientRect();\r\n    this.contactCardData.show = true;\r\n    this.contactCardData.contact = this.contact;\r\n\r\n    this.chatService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.contactCardData.show = false;\r\n    this.chatService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onChatConversationChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}