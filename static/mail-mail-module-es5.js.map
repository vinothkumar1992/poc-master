{"version":3,"sources":["src/app/content/apps/mail/drawer/drawer.component.html","src/app/content/apps/mail/drawer/notifications/notifications.component.html","src/app/content/apps/mail/drawer/search/search.component.html","src/app/content/apps/mail/helper-widgets/badges/badges.component.html","src/app/content/apps/mail/helper-widgets/contact-hover-card/contact-hover-card.component.html","src/app/content/apps/mail/helper-widgets/contact/contact.component.html","src/app/content/apps/mail/helper-widgets/search-bar/search-bar.component.html","src/app/content/apps/mail/mail-compose/mail-compose.component.html","src/app/content/apps/mail/mail-details/details-header/details-header.component.html","src/app/content/apps/mail/mail-details/mail-conversation/mail-conversation.component.html","src/app/content/apps/mail/mail-details/mail-details.component.html","src/app/content/apps/mail/mail-header/mail-header.component.html","src/app/content/apps/mail/mail-list/mail-item/mail-item.component.html","src/app/content/apps/mail/mail-list/mail-list.component.html","src/app/content/apps/mail/mail-sidebar/mail-sidebar.component.html","src/app/content/apps/mail/mail.component.html","src/app/content/apps/mail/module-header/module-header.component.html","src/app/content/apps/mail/drawer/drawer.component.scss","src/app/content/apps/mail/drawer/drawer.component.ts","src/app/content/apps/mail/drawer/notifications/notifications.component.scss","src/app/content/apps/mail/drawer/notifications/notifications.component.ts","src/app/content/apps/mail/drawer/search/search.component.scss","src/app/content/apps/mail/drawer/search/search.component.ts","src/app/content/apps/mail/helper-widgets/badges/badges.component.ts","src/app/content/apps/mail/helper-widgets/contact-hover-card/contact-hover-card.component.scss","src/app/content/apps/mail/helper-widgets/contact-hover-card/contact-hover-card.component.ts","src/app/content/apps/mail/helper-widgets/contact/contact.component.ts","src/app/content/apps/mail/helper-widgets/search-bar/search-bar.component.scss","src/app/content/apps/mail/helper-widgets/search-bar/search-bar.component.ts","src/app/content/apps/mail/mail-compose/mail-compose.component.scss","src/app/content/apps/mail/mail-compose/mail-compose.component.ts","src/app/content/apps/mail/mail-details/details-header/details-header.component.scss","src/app/content/apps/mail/mail-details/details-header/details-header.component.ts","src/app/content/apps/mail/mail-details/mail-conversation/mail-conversation.component.ts","src/app/content/apps/mail/mail-details/mail-details.component.scss","src/app/content/apps/mail/mail-details/mail-details.component.ts","src/app/content/apps/mail/mail-header/mail-header.component.scss","src/app/content/apps/mail/mail-header/mail-header.component.ts","src/app/content/apps/mail/mail-list/mail-item/mail-item.component.scss","src/app/content/apps/mail/mail-list/mail-item/mail-item.component.ts","src/app/content/apps/mail/mail-list/mail-list.component.scss","src/app/content/apps/mail/mail-list/mail-list.component.ts","src/app/content/apps/mail/mail-sidebar/mail-sidebar.component.ts","src/app/content/apps/mail/mail.component.scss","src/app/content/apps/mail/mail.component.ts","src/app/content/apps/mail/mail.module.ts","src/app/content/apps/mail/mail.service.ts","src/app/content/apps/mail/models/mail.model.ts","src/app/content/apps/mail/module-header/module-header.component.scss","src/app/content/apps/mail/module-header/module-header.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<div class=\\\"badge-group\\\">\\r\\n<span *ngFor=\\\"let lid of items\\\" class=\\\"badge\\\"\\r\\n      [ngClass]=\\\"labels | getById:lid:'color'\\\">{{labels | getById:lid:'title'}}</span>\\r\\n\\r\\n  <span *ngIf=\\\"!showAll && ids.length > 2\\\" #moreBadges class=\\\"badge badge-light\\\">...</span>\\r\\n</div>\\r\\n\"","export default \"<ng-container *ngIf=\\\"contact && isVisible\\\">\\r\\n  <div class=\\\"p-4\\\">\\r\\n    <div class=\\\"dt-avatar-wrapper mb-3\\\">\\r\\n      <gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\" class=\\\"size-50\\\"></gx-avatar>\\r\\n\\r\\n      <div class=\\\"dt-avatar-info\\\">\\r\\n        <span class=\\\"dt-avatar-name h4 mb-1\\\">{{contact.first_name + ' ' + contact.last_name}}</span>\\r\\n        <span class=\\\"dt-avatar-desc f-12\\\">{{contact.email}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <gx-icon name=\\\"maps\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.location}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.connections}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"px-4 py-2 border-top d-flex justify-content-between\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\">Add to Contacts</a>\\r\\n    <div class=\\\"ml-2 ml-sm-10\\\">\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"mail\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"tag-o\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chat-app\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","export default \"<gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\"></gx-avatar>\\r\\n<!-- Contact Info -->\\r\\n<div class=\\\"dt-contact__info\\\">\\r\\n  <h4 class=\\\"dt-contact__title\\\">{{contact.first_name + ' ' + contact.last_name}}</h4>\\r\\n  <p class=\\\"dt-contact__desc\\\">{{contact.bio}}</p>\\r\\n</div>\\r\\n<!-- /contact info -->\\r\\n\"","export default \"<form>\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control border-0 shadow-none bg-focus form-control-sm\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <span class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></span>\\r\\n</form>\\r\\n\"","export default \"<div perfectScrollbar>\\r\\n  <!-- Compose Mail Header -->\\r\\n  <div class=\\\"compose-mail-box__header cursor-pointer\\\" (click)=\\\"minimized = !minimized\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n      <gx-icon name=\\\"editors\\\" class=\\\"mr-2\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      Compose New Message\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"action-area ml-auto\\\">\\r\\n      <a *ngIf=\\\"minimized\\\" class=\\\"text-white mr-3\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chevrolet-up\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <a *ngIf=\\\"!minimized\\\" class=\\\"text-white mr-3\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chevrolet-down\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a class=\\\"text-white\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onCloseClick($event)\\\">\\r\\n        <gx-icon name=\\\"remove\\\" size=\\\"sm\\\"></gx-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /compose mail header -->\\r\\n\\r\\n  <!-- Compose Mail Body -->\\r\\n  <div class=\\\"compose-mail-box__body\\\" [hidden]=\\\"minimized\\\">\\r\\n    <!-- Form -->\\r\\n    <form [formGroup]=\\\"composeMailForm\\\" (submit)=\\\"onSubmitForm()\\\">\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"form-group mb-1\\\" formArrayName=\\\"to\\\">\\r\\n        <div [formGroupName]=\\\"0\\\">\\r\\n          <label class=\\\"sr-only\\\" for=\\\"email\\\">Email address</label>\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"email\\\"\\r\\n                 placeholder=\\\"Enter email\\\"\\r\\n                 name=\\\"email\\\"\\r\\n                 formControlName=\\\"email\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"sr-only\\\" for=\\\"subject\\\">Subject</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Subject\\\"\\r\\n               id=\\\"subject\\\"\\r\\n               name=\\\"subject\\\"\\r\\n               formControlName=\\\"subject\\\">\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"sr-only\\\" for=\\\"textarea\\\">Example textarea</label>\\r\\n        <textarea class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"Your message here...\\\"\\r\\n                  id=\\\"textarea\\\"\\r\\n                  name=\\\"message\\\"\\r\\n                  formControlName=\\\"message\\\"></textarea>\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n\\r\\n      <!-- Form Group -->\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n\\r\\n        <div class=\\\"action-area ml-auto\\\">\\r\\n          <a class=\\\"text-dark\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onDiscardMail()\\\">\\r\\n            <gx-icon name=\\\"trash\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n            <span class=\\\"f-12 text-uppercase\\\">discard</span>\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /form group -->\\r\\n    </form>\\r\\n    <!-- /form -->\\r\\n  </div>\\r\\n  <!-- /compose mail body -->\\r\\n</div>\\r\\n\"","export default \"<!-- Action Bar -->\\r\\n<div class=\\\"d-flex flex-wrap mb-5\\\">\\r\\n  <!-- Back Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"btn btn-outline-dark btn-sm mr-auto mb-1\\\"\\r\\n     (click)=\\\"goToBack()\\\">\\r\\n    <gx-icon name=\\\"arrow-left\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n  </a>\\r\\n  <!-- /back button -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div class=\\\"btn-group btn-group-sm mr-3 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolder('archive')\\\">\\r\\n      <gx-icon name=\\\"archive\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolder('spam')\\\">\\r\\n      <gx-icon name=\\\"spam\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolder('trash')\\\">\\r\\n      <gx-icon name=\\\"trash-filled\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div class=\\\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"folder\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a  *ngFor=\\\"let folder of folders\\\"\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            class=\\\"dropdown-item\\\"\\r\\n            [ngClass]=\\\"{'active':folder.handle == currentMail.folder}\\\"\\r\\n            (click)=\\\"setFolder(folder.handle)\\\">{{folder.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"tag\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a *ngFor=\\\"let label of labels\\\"\\r\\n           href=\\\"javascript:void(0)\\\"\\r\\n           class=\\\"dropdown-item\\\"\\r\\n           [ngClass]=\\\"{'active':hasLabel(label.id)}\\\"\\r\\n           (click)=\\\"toggleLabel(label.id)\\\">{{label.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-dark btn-sm\\\" ngbDropdownToggle>\\r\\n      More\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"markAsUnread()\\\">Unread</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onToggleStarred(true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onToggleStarred(false)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /action bar -->\\r\\n\\r\\n<div class=\\\"d-flex flex-wrap\\\">\\r\\n  <h3 class=\\\"mb-0 text-truncate flex-1\\\">{{currentMail.subject}}</h3>\\r\\n\\r\\n  <!-- Badges -->\\r\\n  <task-badges class=\\\"ml-auto dt-module__list-item-info\\\"\\r\\n               [ids]=\\\"currentMail.labels\\\"\\r\\n               [labels]=\\\"labels\\\"></task-badges>\\r\\n  <!-- /badges -->\\r\\n</div>\\r\\n\"","export default \"<!-- Avatar -->\\r\\n<gx-avatar [user]=\\\"conversation.from\\\"\\r\\n           (click)=\\\"isOpened = !isOpened\\\"\\r\\n           class=\\\"mr-4 cursor-pointer\\\"></gx-avatar>\\r\\n<!-- /avatar -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__list-item-content\\\">\\r\\n  <h4 class=\\\"d-inline-block mb-1 cursor-pointer\\\" (click)=\\\"isOpened = !isOpened\\\">{{conversation.from.name}}</h4>\\r\\n  <p *ngIf=\\\"!isOpened\\\" class=\\\"mb-0 text-light-gray text-truncate\\\"\\r\\n     [innerHTML]=\\\"conversation.message | htmlToPlainText\\\"></p>\\r\\n  <p *ngIf=\\\"isOpened\\\" class=\\\"mb-0 text-light-gray\\\" [innerHTML]=\\\"conversation.message | nl2br\\\"></p>\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n  <span class=\\\"mt-1\\\">{{conversation.time}}</span>\\r\\n\\r\\n  <!-- Checkbox -->\\r\\n  <gx-star class=\\\"ml-sm-3\\\"\\r\\n           [gxModel]=\\\"conversation.starred\\\"></gx-star>\\r\\n  <!-- /checkbox -->\\r\\n\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Content Inner -->\\r\\n<div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n  <mail-details-header></mail-details-header>\\r\\n\\r\\n  <!-- Module List -->\\r\\n  <div class=\\\"dt-module__list mail-detail-list\\\">\\r\\n\\r\\n    <!-- Module Item -->\\r\\n    <div class=\\\"dt-module__list-item open\\\" [ngClass]=\\\"{'open': isOpened}\\\">\\r\\n      <!-- Avatar -->\\r\\n      <gx-avatar [user]=\\\"currentMail.from\\\"\\r\\n                 class=\\\"cursor-pointer mr-4\\\"\\r\\n                 (click)=\\\"isOpened = !isOpened\\\"></gx-avatar>\\r\\n      <!-- /avatar -->\\r\\n\\r\\n      <!-- Module Content -->\\r\\n      <div class=\\\"dt-module__list-item-content\\\">\\r\\n        <h4 class=\\\"d-inline-block cursor-pointer mb-1\\\"\\r\\n            (click)=\\\"isOpened = !isOpened\\\">{{currentMail.from.name}}</h4>\\r\\n\\r\\n        <p *ngIf=\\\"!isOpened\\\" class=\\\"mb-0 text-light-gray text-truncate\\\"\\r\\n           [innerHTML]=\\\"currentMail.message | htmlToPlainText\\\"></p>\\r\\n\\r\\n        <p *ngIf=\\\"isOpened\\\" class=\\\"mb-0 text-light-gray\\\" [innerHTML]=\\\"currentMail.message | nl2br\\\"></p>\\r\\n      </div>\\r\\n      <!-- /module content -->\\r\\n\\r\\n      <!-- Module Info -->\\r\\n      <div class=\\\"dt-module__list-item-info\\\">\\r\\n        <span class=\\\"mt-1\\\">{{currentMail.time}}</span>\\r\\n\\r\\n        <!-- Checkbox -->\\r\\n        <gx-star class=\\\"ml-sm-3\\\"\\r\\n                 [gxModel]=\\\"currentMail.starred\\\"\\r\\n                 (gxInputChange)=\\\"onToggleStarred($event)\\\"></gx-star>\\r\\n        <!-- /checkbox -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /module info -->\\r\\n    </div>\\r\\n    <!-- /Module Item -->\\r\\n\\r\\n    <mail-conversation *ngFor=\\\"let conversation of currentMail.conversation;\\\"\\r\\n                       [conversation]=\\\"conversation\\\"></mail-conversation>\\r\\n\\r\\n  </div>\\r\\n  <!-- /Module List -->\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- Action Bar -->\\r\\n<div class=\\\"d-flex flex-wrap\\\">\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown class=\\\"mr-auto\\\">\\r\\n\\r\\n    <!-- Checkbox -->\\r\\n    <gx-checkbox  class=\\\"mr-3\\\"\\r\\n                  [gxModel]=\\\"hasSelectedMails\\\"\\r\\n                 [indeterminate]=\\\"isIndeterminate\\\"\\r\\n                 (gxInputChange)=\\\"toggleSelectAll()\\\"></gx-checkbox>\\r\\n    <!-- /checkbox -->\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"text-dark\\\" ngbDropdownToggle> {{selected}} </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails()\\\">All</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deselectMails()\\\">None</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Read', 'read', true)\\\">Read</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Unread', 'read', false)\\\">Unread</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Starred', 'starred', true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectMails('Unstarred', 'starred', false)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div *ngIf=\\\"hasSelectedMails\\\" class=\\\"btn-group btn-group-sm mr-3 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolderOnSelectedMails('archive')\\\">\\r\\n      <gx-icon name=\\\"archive\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolderOnSelectedMails('spam')\\\">\\r\\n      <gx-icon name=\\\"spam\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setFolderOnSelectedMails('trash')\\\">\\r\\n      <gx-icon name=\\\"trash-filled\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div *ngIf=\\\"hasSelectedMails\\\" class=\\\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"folder\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a  *ngFor=\\\"let folder of folders\\\"\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            class=\\\"dropdown-item\\\"\\r\\n            (click)=\\\"setFolderOnSelectedMails(folder.handle)\\\">{{folder.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark no-arrow\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"tag\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n\\r\\n      <div ngbDropdownMenu>\\r\\n        <a *ngFor=\\\"let label of labels\\\"\\r\\n           href=\\\"javascript:void(0)\\\"\\r\\n           class=\\\"dropdown-item\\\"\\r\\n           (click)=\\\"toggleLabelOnSelectedMails(label.id)\\\">{{label.title}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div *ngIf=\\\"hasSelectedMails\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-dark btn-sm\\\" ngbDropdownToggle>\\r\\n      More\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Read</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Unread</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /action bar -->\\r\\n\"","export default \"<!-- Checkbox -->\\r\\n<gx-checkbox class=\\\"mr-5\\\" [gxModel]=\\\"selected\\\" (gxInputChange)=\\\"onSelectedChange($event)\\\"></gx-checkbox>\\r\\n<!-- /checkbox -->\\r\\n\\r\\n<gx-star class=\\\"mr-5\\\" [gxModel]=\\\"mail.starred\\\" (gxInputChange)=\\\"onToggleStarred($event)\\\"></gx-star>\\r\\n\\r\\n<!-- Avatar -->\\r\\n<gx-avatar [user]=\\\"mail.from\\\" class=\\\"mr-4\\\"></gx-avatar>\\r\\n<!-- /avatar -->\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__list-item-content\\\"\\r\\n     data-location=\\\"mail-detail.html\\\">\\r\\n  <div class=\\\"user-detail\\\">\\r\\n    <span class=\\\"user-name\\\">{{mail.from.name}}</span>\\r\\n    <span class=\\\"dt-separator-v\\\">&nbsp;</span>\\r\\n    <span class=\\\"designation\\\">{{mail.subject | htmlToPlainText | slice:0:30}}</span>\\r\\n  </div>\\r\\n  <p class=\\\"mb-0 text-light-gray text-truncate\\\">{{mail.message | htmlToPlainText | slice:0:100}}</p>\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n  <!-- Badges -->\\r\\n  <task-badges class=\\\"badge-group\\\"\\r\\n               [ids]=\\\"mail.labels\\\"\\r\\n               [labels]=\\\"labels\\\"\\r\\n               [showAll]=\\\"false\\\"></task-badges>\\r\\n  <!-- /badges -->\\r\\n\\r\\n  <span>{{mail.time}}</span>\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Content Inner -->\\r\\n<div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n  <mail-header></mail-header>\\r\\n\\r\\n  <!-- Module List -->\\r\\n  <div class=\\\"dt-module__list\\\">\\r\\n\\r\\n    <div *ngIf=\\\"mails.length == 0\\\" class=\\\"dt-module__list-item\\\">\\r\\n      <p class=\\\"empty-result\\\">No record found.</p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Module Item -->\\r\\n    <mail-item *ngFor=\\\"let mail of mails | filter: searchQuery\\\"\\r\\n               [mail]=\\\"mail\\\"\\r\\n               (click)=\\\"omMailClick(mail.id)\\\"></mail-item>\\r\\n    <!-- /Module Item -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Module List -->\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- Sidebar Header -->\\r\\n<div class=\\\"dt-module__sidebar-header border-bottom\\\">\\r\\n  <div class=\\\"d-none d-md-flex align-items-center\\\">\\r\\n    <gx-icon name=\\\"open-mail\\\" size=\\\"1x\\\" class=\\\"mr-3 text-dark\\\"></gx-icon>\\r\\n    <span class=\\\"h3 mb-0\\\">Messages</span>\\r\\n  </div>\\r\\n\\r\\n  <!-- App Quick Menu -->\\r\\n  <div class=\\\"quick-menu-list d-md-none\\\">\\r\\n    <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n       href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n       (click)=\\\"toggleNavigation($event)\\\">\\r\\n      <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Search Box -->\\r\\n    <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\"\\r\\n             placeholder=\\\"Search in app...\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n        <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n    </form>\\r\\n    <!-- /search box -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n      <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"quick-menu\\\" (click)=\\\"onComposeMail()\\\">\\r\\n      <gx-icon name=\\\"editors\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n      <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n       (click)=\\\"toggleOpen($event)\\\">\\r\\n      <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /app quick menu -->\\r\\n</div>\\r\\n<!-- /sidebar header -->\\r\\n\\r\\n<!-- Sidebar Menu -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\" perfectScrollbar>\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner\\\">\\r\\n    <!-- Button -->\\r\\n    <div class=\\\"action-area mt-5 mb-7 d-none d-md-block\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-shadow btn-default compose-btn btn-rounded\\\" (click)=\\\"onComposeMail()\\\">\\r\\n        <gx-icon name=\\\"editors\\\" class=\\\"mr-2\\\" [fw]=\\\"true\\\"></gx-icon>Compose\\r\\n      </a>\\r\\n    </div>\\r\\n    <!-- /button -->\\r\\n\\r\\n    <!-- Sidebar Navigation -->\\r\\n    <ul class=\\\"dt-module-side-nav\\\">\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">main</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li *ngFor=\\\"let folder of folders\\\"\\r\\n          class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/mail/'+folder.handle\\\">\\r\\n          <gx-icon [name]=\\\"folder.icon\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{folder.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">FILTERS</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li *ngFor=\\\"let filter of filters\\\"\\r\\n          class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/mail/filter/'+filter.handle\\\">\\r\\n          <gx-icon [name]=\\\"filter.icon\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{filter.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">Labels</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li *ngFor=\\\"let label of labels\\\"\\r\\n          class=\\\"dt-module-side-nav__item\\\"\\r\\n          routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\"\\r\\n           [routerLink]=\\\"'/' + settings.layout + '/apps/mail/label/'+label.handle\\\">\\r\\n          <gx-icon name=\\\"tag\\\" size=\\\"lg\\\" [fw]=\\\"true\\\" [ngClass]=\\\"label.icon\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">{{label.title}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n    </ul>\\r\\n    <!-- /sidebar navigation -->\\r\\n\\r\\n    <!-- Contacts -->\\r\\n    <div class=\\\"dt-contacts contacts-list\\\">\\r\\n      <h6 class=\\\"dt-contact__heading text-uppercase\\\">CONNECTIONS</h6>\\r\\n\\r\\n      <!-- Contact -->\\r\\n      <mail-contact *ngFor=\\\"let contact of contacts\\\"\\r\\n                    [contact]=\\\"contact\\\"></mail-contact>\\r\\n      <!-- /contact -->\\r\\n\\r\\n    </div>\\r\\n    <!-- contacts -->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar Menu -->\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module\\\">\\r\\n\\r\\n      <!-- Module Sidebar -->\\r\\n      <mail-sidebar></mail-sidebar>\\r\\n      <!-- /Module Sidebar -->\\r\\n\\r\\n      <!-- Module Container -->\\r\\n      <div class=\\\"dt-module__container\\\">\\r\\n\\r\\n        <!-- Module Header -->\\r\\n        <mail-module-header></mail-module-header>\\r\\n        <!-- /Module Header -->\\r\\n\\r\\n        <!-- Module Content -->\\r\\n        <app-mail-list [hidden]=\\\"currentMail\\\" perfectScrollbar></app-mail-list>\\r\\n        <!-- Module Content -->\\r\\n\\r\\n        <app-mail-details *ngIf=\\\"currentMail\\\" perfectScrollbar></app-mail-details>\\r\\n\\r\\n      </div>\\r\\n      <!-- /Module Container -->\\r\\n\\r\\n      <!-- Module Drawer -->\\r\\n      <mail-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></mail-drawer>\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n      <!-- Module Drawer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /Module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\\r\\n\"","export default \"<mail-search-bar></mail-search-bar>\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto dt-notification\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n  <!-- Dropdown Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"dt-icon-alert\\\"></gx-icon>\\r\\n  </a>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu class=\\\"dropdown-menu-media\\\">\\r\\n    <!-- Dropdown Menu Header -->\\r\\n    <div class=\\\"dropdown-menu-header\\\">\\r\\n      <h4 class=\\\"title\\\">Notifications (9)</h4>\\r\\n\\r\\n      <div class=\\\"ml-auto action-area\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\">Mark All Read</a> <a class=\\\"ml-2\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /dropdown menu header -->\\r\\n\\r\\n    <!-- Dropdown Menu Body -->\\r\\n    <div class=\\\"dropdown-menu-body position-relative\\\" perfectScrollbar>\\r\\n\\r\\n      <div class=\\\"h-auto\\\">\\r\\n        <!-- Media -->\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n          <!-- Avatar -->\\r\\n          <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n          <!-- avatar -->\\r\\n\\r\\n          <!-- Media Body -->\\r\\n          <span class=\\\"media-body\\\">\\r\\n            <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n            <span class=\\\"meta-date\\\">\\r\\n              <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n                       [name]=\\\"notification.icon.name\\\"\\r\\n                       [ngClass]=\\\"notification.icon.color\\\"\\r\\n                       [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n              {{notification.time}}\\r\\n            </span>\\r\\n          </span>\\r\\n          <!-- /media body -->\\r\\n\\r\\n        </a>\\r\\n        <!-- /media -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Dropdown Menu Footer -->\\r\\n    <div class=\\\"dropdown-menu-footer\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\"> See All\\r\\n        <gx-icon name=\\\"arrow-right\\\" [fw]=\\\"true\\\"></gx-icon></a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu footer -->\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2RyYXdlci9kcmF3ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'mail-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2RyYXdlci9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2RyYXdlci9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'task-badges',\r\n  templateUrl: './badges.component.html'\r\n})\r\nexport class BadgesComponent implements OnInit {\r\n  @Input() ids: number[];\r\n  @Input() labels: any[];\r\n  @Input() showAll = true;\r\n\r\n  items: number[];\r\n\r\n  ngOnInit() {\r\n    if(this.showAll) {\r\n      this.items = this.ids;\r\n    } else {\r\n      this.items = this.ids.slice(0, 2);\r\n    }\r\n  }\r\n}\r\n","export default \":host {\\n  display: flex;\\n  position: fixed; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL21haWwvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL0M6XFxVc2Vyc1xcdmlub1xcdmlub3RoXFx0cnVzdHByaW1lLXYzLjFcXHRydXN0LXByaW1lLXYzL3NyY1xcYXBwXFxjb250ZW50XFxhcHBzXFxtYWlsXFxoZWxwZXItd2lkZ2V0c1xcY29udGFjdC1ob3Zlci1jYXJkXFxjb250YWN0LWhvdmVyLWNhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9hcHBzL21haWwvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL2NvbnRhY3QtaG92ZXItY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcbiJdfQ== */\"","import {Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {MailService} from '../../mail.service';\r\nimport {Contact} from './../../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-hover-card',\r\n  templateUrl: './contact-hover-card.component.html',\r\n  styleUrls: ['./contact-hover-card.component.scss']\r\n})\r\nexport class ContactHoverCardComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'card user-info-card';\r\n  isVisible = false;\r\n  position: any;\r\n  contact: Contact;\r\n  private el: HTMLElement;\r\n  onContactHovered: Subscription;\r\n\r\n  constructor(el: ElementRef, private mailService: MailService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onContactHovered = this.mailService.onContactHovered\r\n      .subscribe(data => {\r\n\r\n        this.contact = data.contact;\r\n        this.isVisible = data.show;\r\n        this.position = data.position;\r\n        this.setPosition();\r\n      });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.showContactHoveredCard();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.hideContactHoveredCard();\r\n  }\r\n\r\n  /**\r\n   * Show contact hover card\r\n   */\r\n  showContactHoveredCard() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide contact hover card\r\n   */\r\n  hideContactHoveredCard() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactHovered.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Set hover card position\r\n   */\r\n  setPosition() {\r\n    if (this.position && this.isVisible) {\r\n      const windowHeight = window.innerHeight;\r\n\r\n      if (!this.el.style.top) {\r\n        this.el.style.top = (windowHeight / 2) + 'px';\r\n      }\r\n      this.el.style.left = (this.position.left + this.position.width) + 'px';\r\n\r\n      setTimeout(() => {\r\n        const cardHeight = this.el.offsetHeight;\r\n        const cardTotalHeight = cardHeight + this.position.top + 20;\r\n        if (cardTotalHeight > windowHeight) {\r\n          this.el.style.top = (windowHeight - (cardHeight + 20)) + 'px';\r\n        } else if (cardHeight > 0) {\r\n          this.el.style.top = this.position.top + 'px';\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, HostBinding, HostListener, Input, OnInit} from '@angular/core';\r\nimport {MailService} from '../../mail.service';\r\nimport {Contact} from './../../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'mail-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-contact';\r\n  @Input() contact: Contact;\r\n  contactCardData: any = {show: false};\r\n  private el: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private mailService: MailService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.contactCardData.position = this.el.getBoundingClientRect();\r\n    this.contactCardData.show = true;\r\n    this.contactCardData.contact = this.contact;\r\n\r\n    this.mailService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.contactCardData.show = false;\r\n    this.mailService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL2hlbHBlci13aWRnZXRzL3NlYXJjaC1iYXIvc2VhcmNoLWJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MailService} from './../../mail.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'mail-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'search-box ml-n4';\r\n  searchQuery: FormControl;\r\n\r\n  constructor(private mailService: MailService) {\r\n    this.searchQuery = new FormControl('');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.mailService.onSearchQueryChanged.next(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtY29tcG9zZS9tYWlsLWNvbXBvc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {GxHelper} from '@gaxon/helpers';\r\n\r\nimport {MailService} from './../mail.service';\r\nimport {Mail} from './../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'app-mail-compose',\r\n  templateUrl: './mail-compose.component.html',\r\n  styleUrls: ['./mail-compose.component.scss']\r\n})\r\nexport class MailComposeComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'compose-mail-box';\r\n\r\n  composeMail: any;\r\n  minimized = false;\r\n  composeMailForm: FormGroup;\r\n  onComposeMailClicked: Subscription;\r\n\r\n  constructor(private mailService: MailService, private componentRef: ElementRef, private formBuilder: FormBuilder) {\r\n    this.componentRef.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.composeMailForm = this.createComposeForm();\r\n\r\n    // Subscribe to update composedMail on changes\r\n    this.onComposeMailClicked = this.mailService.onComposeMailClicked\r\n      .subscribe((response: any) => {\r\n        this.componentRef.nativeElement.style.display = 'block';\r\n        this.composeMail = this.resetMail();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Reset new mail\r\n   * @return {Mail}\r\n   */\r\n  resetMail() {\r\n    const newMail = new Mail();\r\n    newMail.id = GxHelper.UUID();\r\n    newMail.from = this.mailService.currentUser;\r\n    newMail.read = true;\r\n    newMail.attachments = [];\r\n    newMail.labels = [];\r\n    newMail.conversation = [];\r\n\r\n    return newMail;\r\n  }\r\n\r\n  /**\r\n   * Create comose reactive form\r\n   */\r\n  createComposeForm() {\r\n    const subject = 'subject';\r\n    const message = 'Hi Mate,\\n' +\r\n      'Sorry for the delay in response!\\n' +\r\n      'I’m afraid, I won’t be able to join you in the conference call. I have to take my\\n' +\r\n      'daughter for her game. I hope that is ok.\\n' +\r\n      '\\n' +\r\n      'Cheers!\\n' +\r\n      'Dom';\r\n\r\n    const toUsers = new FormArray([]);\r\n\r\n    toUsers.push(\r\n      new FormGroup({\r\n        name: new FormControl(null),\r\n        email: new FormControl(null, Validators.required)\r\n      })\r\n    );\r\n\r\n    return this.formBuilder.group({\r\n      subject: new FormControl(subject, Validators.required),\r\n      message: new FormControl(message, Validators.required),\r\n      to: toUsers\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On close form\r\n   * @param event\r\n   */\r\n  onCloseClick(event) {\r\n    event.stopPropagation();\r\n\r\n    const today = new Date();\r\n    this.composeMail.time = today.getDate() + ' ' + today.toLocaleString('en', { month: 'short' });\r\n    this.composeMail.folder = 'drafts';\r\n\r\n    this.composeMail.subject = this.composeMailForm.get('subject').value;\r\n    this.composeMail.message = this.composeMailForm.get('message').value;\r\n    this.composeMail.to = this.composeMailForm.get('to').value;\r\n\r\n    this.saveMail(this.composeMail).then((response) => {\r\n      this.composeMailForm = this.createComposeForm();\r\n      this.composeMail = this.resetMail();\r\n\r\n      this.componentRef.nativeElement.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmitForm() {\r\n    const today = new Date();\r\n    this.composeMail.time = today.getDate() + ' ' + today.toLocaleString('en', { month: 'short' });\r\n    this.composeMail.folder = 'sent';\r\n\r\n    this.composeMail.subject = this.composeMailForm.get('subject').value;\r\n    this.composeMail.message = this.composeMailForm.get('message').value;\r\n    this.composeMail.to = this.composeMailForm.get('to').value;\r\n\r\n    this.saveMail(this.composeMail).then((response) => {\r\n      this.composeMailForm = this.createComposeForm();\r\n      this.composeMail = this.resetMail();\r\n\r\n      this.componentRef.nativeElement.style.display = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save mail in data\r\n   * @param mail\r\n   * @return {Promise<any>}\r\n   */\r\n  saveMail(mail) {\r\n    return this.mailService.saveMail(mail);\r\n  }\r\n\r\n  /**\r\n   * On Discard Mail\r\n   */\r\n  onDiscardMail() {\r\n    this.composeMailForm = this.createComposeForm();\r\n    this.composeMail = this.resetMail();\r\n\r\n    this.componentRef.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onComposeMailClicked.unsubscribe();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtZGV0YWlscy9kZXRhaWxzLWhlYWRlci9kZXRhaWxzLWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../../mail.service';\r\nimport {Mail} from './../../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'mail-details-header',\r\n  templateUrl: './details-header.component.html',\r\n  styleUrls: ['./details-header.component.scss']\r\n})\r\nexport class DetailsHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'd-block px-1 pb-4 border-bottom border-w-2';\r\n  currentMail: Mail;\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n\r\n  onCurrentMailChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n\r\n  constructor(private eleRef: ElementRef, private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update currentMail on changes\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n            this.eleRef.nativeElement.classList.add('mb-1');\r\n            this.eleRef.nativeElement.classList.add('mt-n1');\r\n          } else {\r\n            this.currentMail = currentMail;\r\n          }\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged =\r\n      this.mailService.onFoldersChanged\r\n        .subscribe((folders: any) => {\r\n          this.folders = folders;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Go to back mail listing\r\n   */\r\n  goToBack() {\r\n    this.mailService.setCurrentMail(null);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.currentMail.starred = event;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * Mark mail as unread\r\n   */\r\n  markAsUnread() {\r\n    this.currentMail.read = false;\r\n    this.mailService.saveMail(this.currentMail).then((response) => {\r\n      this.goToBack();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected emails\r\n   * @param folderHandle\r\n   */\r\n  setFolder(folderHandle) {\r\n    this.currentMail.folder = folderHandle;\r\n    this.mailService.saveMail(this.currentMail).then((response) => {\r\n      if(folderHandle == 'trash') {\r\n        this.goToBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check Mail has label\r\n   * @param labelId\r\n   * @return {any | boolean}\r\n   */\r\n  hasLabel(labelId) {\r\n    return this.mailService.hasLabel(labelId, this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * Change lables to selectd emails\r\n   * @param labelId\r\n   */\r\n  toggleLabel(labelId){\r\n    this.mailService.toggleLabel(labelId, this.currentMail);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentMailChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mail-conversation',\r\n  templateUrl: './mail-conversation.component.html'\r\n})\r\nexport class MailConversationComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.open') isOpened: boolean;\r\n  @Input() conversation: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtZGV0YWlscy9tYWlsLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../mail.service';\r\nimport {Mail} from './../models/mail.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-mail-details',\r\n  templateUrl: './mail-details.component.html',\r\n  styleUrls: ['./mail-details.component.scss']\r\n})\r\nexport class MailDetailsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n  currentMail: Mail;\r\n  isOpened = true;\r\n\r\n  onCurrentMailChanged: Subscription;\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update currentMail on changes\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n          } else {\r\n            this.currentMail = currentMail;\r\n            this.markAsRead();\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.scrollToBottom();\r\n          }, 300);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Mark as read mail\r\n   */\r\n  markAsRead() {\r\n    this.currentMail.read = true;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.currentMail.starred = event;\r\n\r\n    this.mailService.saveMail(this.currentMail);\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onCurrentMailChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL21haWwvbWFpbC1oZWFkZXIvQzpcXFVzZXJzXFx2aW5vXFx2aW5vdGhcXHRydXN0cHJpbWUtdjMuMVxcdHJ1c3QtcHJpbWUtdjMvc3JjXFxhcHBcXGNvbnRlbnRcXGFwcHNcXG1haWxcXG1haWwtaGVhZGVyXFxtYWlsLWhlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtaGVhZGVyL21haWwtaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3R7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuIl19 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {MailService} from './../mail.service';\r\n\r\n@Component({\r\n  selector: 'mail-header',\r\n  templateUrl: './mail-header.component.html',\r\n  styleUrls: ['./mail-header.component.scss']\r\n})\r\nexport class MailHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'px-1 pb-4 border-bottom border-w-2 mb-1 mt-n1';\r\n  hasSelectedMails: boolean;\r\n  isIndeterminate: boolean;\r\n  selected = 'None';\r\n\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n\r\n  onSelectedMailsChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedMailsChanged =\r\n      this.mailService.onSelectedMailsChanged\r\n        .subscribe(selectedMails => {\r\n\r\n          setTimeout(() => {\r\n            this.hasSelectedMails = selectedMails.length > 0;\r\n            this.isIndeterminate = (selectedMails.length !== this.mailService.mails.length && selectedMails.length > 0);\r\n\r\n            if (selectedMails.length === 0) {\r\n              this.selected = 'None';\r\n            } else if (selectedMails.length === this.mailService.mails.length) {\r\n              this.selected = 'All';\r\n            }\r\n          }, 0);\r\n        });\r\n\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged =\r\n      this.mailService.onFoldersChanged\r\n        .subscribe((folders: any) => {\r\n          this.folders = folders;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Toggle select all mails\r\n   */\r\n  toggleSelectAll() {\r\n    this.mailService.toggleSelectAll();\r\n  }\r\n\r\n  /**\r\n   * Select mails by filter\r\n   * @param selected\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectMails(selected?, filterParameter?, filterValue?) {\r\n    this.selected = (selected) ? selected : this.selected;\r\n    this.mailService.selectMails(filterParameter, filterValue);\r\n  }\r\n\r\n  /**\r\n   * Deselect all mails\r\n   */\r\n  deselectMails() {\r\n    this.mailService.deselectMails();\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected emails\r\n   * @param folderHandle\r\n   */\r\n  setFolderOnSelectedMails(folderHandle) {\r\n    this.mailService.setFolderOnSelectedMails(folderHandle);\r\n  }\r\n\r\n  /**\r\n   * Change lables to selectd emails\r\n   * @param labelId\r\n   */\r\n  toggleLabelOnSelectedMails(labelId) {\r\n    this.mailService.toggleLabelOnSelectedMails(labelId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n    this.onSelectedMailsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtbGlzdC9tYWlsLWl0ZW0vbWFpbC1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {MailService} from './../../mail.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Mail} from './../../models/mail.model';\r\n\r\n@Component({\r\n  selector: 'mail-item',\r\n  templateUrl: './mail-item.component.html',\r\n  styleUrls: ['./mail-item.component.scss']\r\n})\r\nexport class MailItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item cursor-pointer';\r\n  @HostBinding('class.selected') selected: boolean;\r\n  @Input() mail: Mail;\r\n\r\n  labels: any[] = [];\r\n  onLabelsChanged: Subscription;\r\n  onSelectedMailsChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update labels on changes\r\n    this.onLabelsChanged =\r\n      this.mailService.onLabelsChanged\r\n        .subscribe((labels: any) => {\r\n          this.labels = labels;\r\n        });\r\n\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedMailsChanged =\r\n      this.mailService.onSelectedMailsChanged\r\n        .subscribe(selectedMails => {\r\n          this.selected = selectedMails.find((mail: Mail) => {\r\n            return mail.id === this.mail.id;\r\n          });\r\n        });\r\n  }\r\n\r\n  onSelectedChange(event) {\r\n    this.selected = event;\r\n    this.mailService.toggleSelectedMail(this.mail.id);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.mail.starred = event;\r\n\r\n    this.mailService.saveMail(this.mail);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onSelectedMailsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwtbGlzdC9tYWlsLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MailService} from './../mail.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Mail} from './../models/mail.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-mail-list',\r\n  templateUrl: './mail-list.component.html',\r\n  styleUrls: ['./mail-list.component.scss']\r\n})\r\nexport class MailListComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n\r\n  public mails: Mail[] = [];\r\n  public searchQuery = '';\r\n\r\n  onMailsChanged: Subscription;\r\n  onSearchQueryChanged: Subscription;\r\n\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private mailService: MailService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update mails on changes\r\n    this.onMailsChanged = this.mailService.onMailsChanged\r\n      .subscribe(mails => {\r\n        this.mails = mails;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      });\r\n\r\n    // Subscribe to update search keywords on changes\r\n    this.onSearchQueryChanged = this.mailService.onSearchQueryChanged\r\n      .subscribe(searchStr => {\r\n        this.searchQuery = searchStr;\r\n        if (searchStr) {\r\n          this.mailService.setCurrentMail(null);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On click mail\r\n   * @param mailId\r\n   */\r\n  omMailClick(mailId) {\r\n    this.mailService.setCurrentMail(mailId);\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMailsChanged.unsubscribe();\r\n    this.onSearchQueryChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\nimport {DrawerService} from './../../drawer.service';\r\nimport {MailService} from './../mail.service';\r\nimport {Contact} from './../models/contact.model';\r\n\r\n@Component({\r\n  selector: 'mail-sidebar',\r\n  templateUrl: './mail-sidebar.component.html',\r\n  animations: appAnimations\r\n})\r\nexport class MailSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  contacts: Contact[] = [];\r\n  labels: any[] = [];\r\n  folders: any[] = [];\r\n  filters: any[] = [];\r\n\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onContactsChanged: Subscription;\r\n  onLabelsChanged: Subscription;\r\n  onFiltersChanged: Subscription;\r\n  onFoldersChanged: Subscription;\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private mailService: MailService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update lebels on changes\r\n    this.onLabelsChanged = this.mailService.onLabelsChanged\r\n      .subscribe(labels => {\r\n        this.labels = labels;\r\n      });\r\n\r\n    // Subscribe to update filters on changes\r\n    this.onFiltersChanged = this.mailService.onFiltersChanged\r\n      .subscribe(filters => {\r\n        this.filters = filters;\r\n      });\r\n\r\n    // Subscribe to update folders on changes\r\n    this.onFoldersChanged = this.mailService.onFoldersChanged\r\n      .subscribe(folders => {\r\n        this.folders = folders;\r\n      });\r\n\r\n    // Subscribe to update contacts on changes\r\n    this.onContactsChanged = this.mailService.onContactsChanged\r\n      .subscribe(contacts => {\r\n        this.contacts = contacts;\r\n      });\r\n\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  onComposeMail() {\r\n    this.mailService.onComposeMailClicked.next('');\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onLabelsChanged.unsubscribe();\r\n    this.onFiltersChanged.unsubscribe();\r\n    this.onFoldersChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21haWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DynamicDomService} from '@gaxon/services/dynamic-dom.service';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\nimport {MailService} from './mail.service';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport {MailComposeComponent} from './mail-compose/mail-compose.component';\r\nimport {Mail} from './models/mail.model';\r\n\r\n@Component({\r\n  selector: 'app-mail',\r\n  templateUrl: './mail.component.html',\r\n  styleUrls: ['./mail.component.scss']\r\n})\r\nexport class MailComponent implements OnInit, OnDestroy {\r\n  currentMail: Mail;\r\n  onCurrentMailChanged: Subscription;\r\n\r\n  composeMail: any;\r\n  hoverCard: any;\r\n\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private dynamicDom: DynamicDomService, private mailService: MailService, private drawerService: DrawerService) {\r\n    this.hoverCard = this.dynamicDom.appendComponentToBody(ContactHoverCardComponent);\r\n    this.composeMail = this.dynamicDom.appendComponentToBody(MailComposeComponent);\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onCurrentMailChanged =\r\n      this.mailService.onCurrentMailChanged\r\n        .subscribe(currentMail => {\r\n          if (!currentMail) {\r\n            this.currentMail = null;\r\n          }\r\n          else {\r\n            this.currentMail = currentMail;\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dynamicDom.destroyCard(this.hoverCard);\r\n    this.dynamicDom.destroyCard(this.composeMail);\r\n\r\n    this.onCurrentMailChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {MailService} from './mail.service';\r\nimport {MailComponent} from './mail.component';\r\nimport {MailListComponent} from './mail-list/mail-list.component';\r\nimport {MailItemComponent} from './mail-list/mail-item/mail-item.component';\r\nimport {MailSidebarComponent} from './mail-sidebar/mail-sidebar.component';\r\nimport {MailComposeComponent} from './mail-compose/mail-compose.component';\r\nimport {MailDetailsComponent} from './mail-details/mail-details.component';\r\nimport {ContactComponent} from './helper-widgets/contact/contact.component';\r\nimport {BadgesComponent} from './helper-widgets/badges/badges.component';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport {SearchBarComponent} from './helper-widgets/search-bar/search-bar.component';\r\nimport {MailHeaderComponent} from './mail-header/mail-header.component';\r\nimport {ModuleHeaderComponent} from './module-header/module-header.component';\r\nimport {DetailsHeaderComponent} from './mail-details/details-header/details-header.component';\r\nimport {MailConversationComponent} from './mail-details/mail-conversation/mail-conversation.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'filter/:filterHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'filter/:filterHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'label/:labelHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      tasks: MailService\r\n    }\r\n  },\r\n  {\r\n    path: 'label/:labelHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: ':folderHandle',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: ':folderHandle/:mailId',\r\n    component: MailComponent,\r\n    resolve: {\r\n      mails: MailService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'inbox'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    MailComponent,\r\n    MailListComponent,\r\n    MailItemComponent,\r\n    MailSidebarComponent,\r\n    MailComposeComponent,\r\n    MailDetailsComponent,\r\n    ContactComponent,\r\n    BadgesComponent,\r\n    ContactHoverCardComponent,\r\n    SearchBarComponent,\r\n    MailHeaderComponent,\r\n    ModuleHeaderComponent,\r\n    DetailsHeaderComponent,\r\n    MailConversationComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ],\r\n  entryComponents: [\r\n    ContactHoverCardComponent,\r\n    MailComposeComponent\r\n  ]\r\n})\r\nexport class MailModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\n\r\nimport {Contact} from './models/contact.model';\r\nimport {Mail} from './models/mail.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MailService implements Resolve<any> {\r\n  private mailsUrl = 'api/mail-list';  // URL to web api\r\n  private contactsUrl = 'api/mail-contacts';  // URL to web api\r\n  private labelsUrl = 'api/mail-labels';  // URL to web api\r\n  private filtersUrl = 'api/mail-filters';  // URL to web api\r\n  private foldersUrl = 'api/mail-folders';  // URL to web api\r\n\r\n  mails: Mail[];\r\n  selectedMails: Mail[] = [];\r\n  currentMail: Mail;\r\n  currentUser = {\r\n    name: 'Alex Dolgove',\r\n    email: 'alex-dolgove@example.com',\r\n    avatar: ''\r\n  };\r\n\r\n  contacts: Contact[];\r\n  labels: any[];\r\n  filters: any[];\r\n  folders: any[];\r\n  routeParams: any;\r\n\r\n  onMailsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSelectedMailsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onCurrentMailChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onComposeMailClicked: Subject<any> = new Subject();\r\n  onContactHovered: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n  onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onLabelsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onFiltersChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onFoldersChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getMails(),\r\n        this.getContacts(),\r\n        this.getLabels(),\r\n        this.getFilters(),\r\n        this.getFolders()\r\n      ]).then(\r\n        () => {\r\n          if (this.routeParams.mailId) {\r\n            this.setCurrentMail(this.routeParams.mailId);\r\n          } else {\r\n            this.setCurrentMail(null);\r\n          }\r\n\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMails(): Promise<Mail[]> {\r\n    if (this.routeParams.folderHandle) {\r\n      return this.getMailsByFolder(this.routeParams.folderHandle);\r\n    } else if (this.routeParams.filterHandle) {\r\n      return this.getMailsByFilter(this.routeParams.filterHandle);\r\n    } else if (this.routeParams.labelHandle) {\r\n      return this.getMailsByLabel(this.routeParams.labelHandle);\r\n    } else {\r\n      return this.getMailsList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get mails list\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsList(): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.mailsUrl)\r\n        .subscribe((response: any) => {\r\n          this.mails = response;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by folder\r\n   * @param folder\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsByFolder(folder): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.mailsUrl + '?folder=' + folder)\r\n        .subscribe((response: any) => {\r\n          this.mails = response;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by filter\r\n   * @param filter\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsByFilter(filter): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.http.get(this.mailsUrl + '?' + filter + '=true')\r\n        .subscribe((mails: any) => {\r\n          this.mails = mails;\r\n          this.onMailsChanged.next(this.mails);\r\n          resolve(this.mails);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get mails by label\r\n   * @param handle\r\n   * @returns {Promise<Mail[]>}\r\n   */\r\n  getMailsByLabel(handle): Promise<Mail[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl + '?handle=' + handle)\r\n        .subscribe((labels: any) => {\r\n\r\n          const labelId = labels[0].id;\r\n\r\n          this.http.get(this.mailsUrl + '?labels=' + labelId)\r\n            .subscribe((mails: any) => {\r\n              this.mails = mails;\r\n              this.onMailsChanged.next(this.mails);\r\n              resolve(this.mails);\r\n            }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all labels\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getLabels(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.labelsUrl)\r\n        .subscribe((response: any) => {\r\n          this.labels = response;\r\n          this.onLabelsChanged.next(this.labels);\r\n          resolve(this.labels);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all filters\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getFilters(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.filtersUrl)\r\n        .subscribe((response: any) => {\r\n          this.filters = response;\r\n          this.onFiltersChanged.next(this.filters);\r\n          resolve(this.filters);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all folders\r\n   * @returns {Promise<any[]>}\r\n   */\r\n  getFolders(): Promise<any[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.foldersUrl)\r\n        .subscribe((response: any) => {\r\n          this.folders = response;\r\n          this.onFoldersChanged.next(this.folders);\r\n          resolve(this.folders);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getContacts(): Promise<Contact[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selected mail by id\r\n   * @param id\r\n   */\r\n  toggleSelectedMail(id) {\r\n    // First, check if we already have that mail as selected...\r\n    if (this.selectedMails.length > 0) {\r\n      for (const mail of this.selectedMails) {\r\n        // ...delete the selected mail\r\n        if (mail.id === id) {\r\n          const index = this.selectedMails.indexOf(mail);\r\n\r\n          if (index !== -1) {\r\n            this.selectedMails.splice(index, 1);\r\n\r\n            // Trigger the next event\r\n            this.onSelectedMailsChanged.next(this.selectedMails);\r\n\r\n            // Return\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we don't have it, push as selected\r\n    this.selectedMails.push(\r\n      this.mails.find(mail => {\r\n        return mail.id === id;\r\n      })\r\n    );\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  /**\r\n   * Toggle select all\r\n   */\r\n  toggleSelectAll() {\r\n    if (this.selectedMails.length > 0) {\r\n      this.deselectMails();\r\n    } else {\r\n      this.selectMails();\r\n    }\r\n\r\n  }\r\n\r\n  selectMails(filterParameter?, filterValue?) {\r\n    this.selectedMails = [];\r\n\r\n    // If there is no filter, select all mails\r\n    if (filterParameter === undefined || filterValue === undefined) {\r\n      this.selectedMails = this.mails.map(x => Object.assign({}, x));\r\n    } else {\r\n      this.selectedMails.push(...\r\n        this.mails.filter(mail => {\r\n          return mail[filterParameter] === filterValue;\r\n        })\r\n      );\r\n    }\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  deselectMails() {\r\n    this.selectedMails = [];\r\n\r\n    // Trigger the next event\r\n    this.onSelectedMailsChanged.next(this.selectedMails);\r\n  }\r\n\r\n  /**\r\n   * Toggle label on selected mails\r\n   * @param labelId\r\n   */\r\n  toggleLabelOnSelectedMails(labelId) {\r\n    this.selectedMails.map(mail => {\r\n\r\n      const index = mail.labels.indexOf(labelId);\r\n\r\n      if (index !== -1) {\r\n        mail.labels.splice(index, 1);\r\n      } else {\r\n        mail.labels.push(labelId);\r\n      }\r\n\r\n      this.saveMail(mail);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set folder on selected mails\r\n   * @param folderHandle\r\n   */\r\n  setFolderOnSelectedMails(folderHandle) {\r\n    this.selectedMails.map(mail => {\r\n      mail.folder = folderHandle;\r\n\r\n      this.saveMail(mail);\r\n    });\r\n\r\n    this.deselectMails();\r\n  }\r\n\r\n  /**\r\n   * Set current mail by id\r\n   * @param id\r\n   */\r\n  setCurrentMail(id) {\r\n    this.currentMail = this.mails.find(mail => {\r\n      if (id) {\r\n        return mail.id === id;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    this.onCurrentMailChanged.next(this.currentMail);\r\n\r\n    const taskParam = (this.currentMail) ? '/' + this.currentMail.id : '';\r\n    const labelHandle = this.routeParams.labelHandle;\r\n    const folderHandle = this.routeParams.folderHandle;\r\n    const filterHandle = this.routeParams.filterHandle;\r\n\r\n    const segments = this.location.path().split('/');\r\n    if (labelHandle) {\r\n      this.location.go(segments[1] + '/apps/mail/label/' + labelHandle + taskParam);\r\n    } else if (filterHandle) {\r\n      this.location.go(segments[1] + '/apps/mail/filter/' + filterHandle + taskParam);\r\n    } else if (filterHandle) {\r\n      this.location.go(segments[1] + '/apps/mail/' + folderHandle + taskParam);\r\n    } else {\r\n      this.location.go(segments[1] + '/apps/mail/inbox' + taskParam);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle label on task\r\n   * @param labelId\r\n   * @param mail\r\n   */\r\n  toggleLabel(labelId, mail) {\r\n    const index = mail.labels.indexOf(labelId);\r\n\r\n    if (index !== -1) {\r\n      mail.labels.splice(index, 1);\r\n    } else {\r\n      mail.labels.push(labelId);\r\n    }\r\n\r\n    this.saveMail(mail);\r\n  }\r\n\r\n  /**\r\n   * Check mail has given label\r\n   * @param labelId\r\n   * @param mail\r\n   * @return {boolean}\r\n   */\r\n  hasLabel(labelId, mail) {\r\n    if (!mail.labels) {\r\n      return false;\r\n    }\r\n\r\n    return mail.labels.indexOf(labelId) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Save a mail\r\n   * @param {Mail} mail\r\n   * @return {Promise<any>}\r\n   */\r\n  saveMail(mail: Mail) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.mailsUrl + '/' + mail.id, {...mail})\r\n        .subscribe(response => {\r\n          this.getMails().then(mails => {\r\n            resolve(mails);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export class Mail {\r\n  id: string;\r\n  from: {\r\n    name: string,\r\n    avatar: string,\r\n    email: string\r\n  };\r\n  to: {\r\n    name: string,\r\n    email: string\r\n  }[];\r\n  subject: string;\r\n  message: string;\r\n  time: string;\r\n  read: boolean;\r\n  starred: boolean;\r\n  important: boolean;\r\n  hasAttachments: boolean;\r\n  attachments: {\r\n    type: string,\r\n    fileName: string,\r\n    preview: string,\r\n    url: string,\r\n    size: string\r\n  }[];\r\n  labels: string[];\r\n  folder: string;\r\n  conversation: any[];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9tYWlsL21vZHVsZS1oZWFkZXIvbW9kdWxlLWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'mail-module-header',\r\n  templateUrl: './module-header.component.html',\r\n  styleUrls: ['./module-header.component.scss']\r\n})\r\nexport class ModuleHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header d-none d-md-flex';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"mail-mail-module-es5.js"}