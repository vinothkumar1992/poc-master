{"version":3,"sources":["src/app/content/apps/chat/chat-area/chat-area.component.html","src/app/content/apps/chat/chat-area/chat-box/chat-box.component.html","src/app/content/apps/chat/chat-area/chat-conversation/chat-conversation.component.html","src/app/content/apps/chat/chat-area/chat-header/chat-header.component.html","src/app/content/apps/chat/chat-sidebar/chat-sidebar.component.html","src/app/content/apps/chat/chat-sidebar/operator-profile/operator-profile.component.html","src/app/content/apps/chat/chat.component.html","src/app/content/apps/chat/drawer/drawer.component.html","src/app/content/apps/chat/drawer/notifications/notifications.component.html","src/app/content/apps/chat/drawer/search/search.component.html","src/app/content/apps/chat/helper-widgets/contact-hover-card/contact-hover-card.component.html","src/app/content/apps/chat/helper-widgets/contact/contact.component.html","src/app/content/apps/chat/chat-area/chat-area.component.scss","src/app/content/apps/chat/chat-area/chat-area.component.ts","src/app/content/apps/chat/chat-area/chat-box/chat-box.component.ts","src/app/content/apps/chat/chat-area/chat-conversation/chat-conversation.component.ts","src/app/content/apps/chat/chat-area/chat-header/chat-header.component.scss","src/app/content/apps/chat/chat-area/chat-header/chat-header.component.ts","src/app/content/apps/chat/chat-sidebar/chat-sidebar.component.scss","src/app/content/apps/chat/chat-sidebar/chat-sidebar.component.ts","src/app/content/apps/chat/chat-sidebar/operator-profile/operator-profile.component.scss","src/app/content/apps/chat/chat-sidebar/operator-profile/operator-profile.component.ts","src/app/content/apps/chat/chat.component.scss","src/app/content/apps/chat/chat.component.ts","src/app/content/apps/chat/chat.module.ts","src/app/content/apps/chat/chat.service.ts","src/app/content/apps/chat/drawer/drawer.component.scss","src/app/content/apps/chat/drawer/drawer.component.ts","src/app/content/apps/chat/drawer/notifications/notifications.component.scss","src/app/content/apps/chat/drawer/notifications/notifications.component.ts","src/app/content/apps/chat/drawer/search/search.component.scss","src/app/content/apps/chat/drawer/search/search.component.ts","src/app/content/apps/chat/helper-widgets/contact-hover-card/contact-hover-card.component.scss","src/app/content/apps/chat/helper-widgets/contact-hover-card/contact-hover-card.component.ts","src/app/content/apps/chat/helper-widgets/contact/contact.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gjDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kjCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kcAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,s5CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,w8FAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,quIAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+vBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,0+FAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,81DAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ohCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,65CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,sRAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6NAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,iBAAb;AAYE,iCAAoB,MAApB,EAAgD,WAAhD,EAAwE;AAAA;;AAAA;;AAApD,aAAA,MAAA,GAAA,MAAA;AAA4B,aAAA,WAAA,GAAA,WAAA;AAThD,aAAA,QAAA,GAAkB,EAAlB;AAKA,aAAA,MAAA,GAAS,KAAT;AAKE,aAAK,MAAL,CAAY,aAAZ,CAA0B,SAA1B,CAAoC,GAApC,CAAwC,sBAAxC,EADsE,CAGtE;;AACA,aAAK,yBAAL,GAAiC,KAAK,WAAL,CAAiB,yBAAjB,CAA2C,SAA3C,CAAqD,UAAC,YAAD,EAAiB;AACrG,cAAI,YAAY,CAAC,EAAb,IAAmB,YAAY,CAAC,gBAAb,CAA8B,MAA9B,GAAuC,CAA9D,EAAiE;AAC/D,YAAA,KAAI,CAAC,QAAL,GAAgB,YAAY,CAAC,gBAA7B;AAEA,YAAA,UAAU,CAAC,YAAK;AACd,cAAA,KAAI,CAAC,cAAL;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;AACF,SARgC,CAAjC,CAJsE,CActE;;AACA,aAAK,uBAAL,GAA+B,KAAK,WAAL,CAAiB,uBAAjB,CAAyC,SAAzC,CAAmD,UAAC,OAAD,EAAY;AAC5F,UAAA,KAAI,CAAC,cAAL,GAAsB,OAAtB;AACD,SAF8B,CAA/B,CAfsE,CAmBtE;;AACA,aAAK,qBAAL,GAA6B,KAAK,WAAL,CAAiB,qBAAjB,CAAuC,SAAvC,CAAiD,UAAC,QAAD,EAAa;AACzF,UAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;AACD,SAF4B,CAA7B;AAIA,aAAK,wBAAL,GAAgC,KAAK,WAAL,CAAiB,iBAAjB,CAAmC,SAAnC,CAA6C,UAAA,iBAAiB,EAAG;AAC/F,UAAA,KAAI,CAAC,MAAL,GAAc,iBAAd;AACD,SAF+B,CAAhC;AAGD;;AAvCH;AAAA;AAAA,mCAyCU,CACP;AA1CH;AAAA;AAAA,yCA4CgB;AACZ,cAAI,KAAK,YAAT,EAAuB;AACrB,iBAAK,YAAL,CAAkB,MAAlB;AACA,iBAAK,YAAL,CAAkB,cAAlB;AACD;AACF;AAjDH;AAAA;AAAA,sCAmDa;AACT,eAAK,yBAAL,CAA+B,WAA/B;AACA,eAAK,uBAAL,CAA6B,WAA7B;AACA,eAAK,wBAAL,CAA8B,WAA9B;AACA,eAAK,qBAAL,CAA2B,WAA3B;AACD;AAxDH;AAAA;AAAA,iCA2DW,KA3DX,EA2DgB;AACZ,eAAK,MAAL,GAAc,KAAK,CAAC,MAAN,CAAa,UAAb,GAA0B,GAAxC;AACA,eAAK,WAAL,CAAiB,iBAAjB,CAAmC,IAAnC,CAAwC,KAAK,MAA7C;AACD;AA9DH;AAAA;AAAA,mCAgEa,KAhEb,EAgEyB;AACrB,UAAA,KAAK,CAAC,cAAN;AACA,eAAK,MAAL,GAAc,CAAC,KAAK,MAApB;AACA,eAAK,WAAL,CAAiB,iBAAjB,CAAmC,IAAnC,CAAwC,KAAK,MAA7C;AACD;AApEH;;AAAA;AAAA,OAAA;;;;cAY8B,0CAAA,CAAA,YAAA;;cAAiC,0CAAA,CAAA,aAAA;;;;AAFN,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAtD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,kDAAA,CAAA,2BAAA,CAAV,EAAqC;AAAC,gBAAQ;AAAT,KAArC,CAAsD,CAAA,E,2BAAA,E,cAAA,E,KAAyC,CAAzC;AAiDvD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,eAAb,EAA8B,CAAC,QAAD,CAA9B,CACD,CAAA,E,2BAAA,E,UAAA,EAGC,IAHD;AA3DW,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAa,gBAAb;AAME,gCAAoB,WAApB,EAAsD,WAAtD,EAA8E;AAAA;;AAA1D,aAAA,WAAA,GAAA,WAAA;AAAkC,aAAA,WAAA,GAAA,WAAA;AALhC,aAAA,SAAA,GAAY,yBAAZ;AAMrB;;AAPH;AAAA;AAAA,mCASU;AACN,eAAK,UAAL;AACD;AAED;;;;AAbF;AAAA;AAAA,qCAgBY;AACR,eAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACrC,YAAA,QAAQ,EAAE,KAAK,QAAL,CAAc,EADa;AAErC,YAAA,OAAO,EAAE,EAF4B;AAGrC,YAAA,MAAM,EAAE,IAAI,IAAJ;AAH6B,WAAvB,CAAhB;AAKD;AAED;;;;;AAxBF;AAAA;AAAA,kCA4BY,KA5BZ,EA4BiB;AACb,cAAI,KAAK,CAAC,OAAN,KAAkB,EAAlB,IAAwB,KAAK,QAAL,CAAc,KAA1C,EAAiD;AAC/C,gBAAI,CAAC,KAAK,CAAC,QAAX,EAAqB;AACnB,mBAAK,WAAL;AACA,cAAA,KAAK,CAAC,cAAN;AACD,aAJ8C,CAK/C;;AACD,WAND,MAMO,IAAI,KAAK,CAAC,OAAN,KAAkB,EAAtB,EAA0B;AAC/B,YAAA,KAAK,CAAC,cAAN;AACD;AACF;AAED;;;;AAxCF;AAAA;AAAA,sCA2Ca;AACT,eAAK,QAAL,CAAc,KAAd,CAAoB,MAApB,GAA6B,IAAI,IAAJ,EAA7B;;AACA,cAAI,KAAK,WAAL,CAAiB,gBAAjB,CAAkC,KAAK,QAAL,CAAc,KAAhD,CAAJ,EAA4D;AAC1D,iBAAK,UAAL;AACD;AACF;AAhDH;;AAAA;AAAA,OAAA;;;;cAMmC,0CAAA,CAAA,aAAA;;cAAkC,2CAAA,CAAA,aAAA;;;;AAL7C,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,0BAAA,E,WAAA,E,KAAsC,CAAtC;AACb,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,0BAAA,E,UAAA,E,KAAc,CAAd;AAFE,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oHAAA,CAAA;AAFS,KAAV,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,QAAI,cAAc,GAAG,EAArB;;AAMA,QAAa,yBAAb;AAcE,yCAAoB,MAApB,EAAsC;AAAA;;AAAlB,aAAA,MAAA,GAAA,MAAA;AAbQ,aAAA,OAAA,GAAU,KAAV;AAU5B,aAAA,aAAA,GAAgB,IAAhB;AACA,aAAA,WAAA,GAAqB,EAArB;AAIC;;AAhBH;AAAA;AAAA,mCAkBU;AACN,cAAI,KAAK,QAAL,CAAc,EAAd,KAAqB,KAAK,OAAL,CAAa,QAAtC,EAAgD;AAC9C,iBAAK,OAAL,GAAe,IAAf;AACA,iBAAK,MAAL,GAAc,KAAK,QAAnB;AACD,WAHD,MAGO;AACL,iBAAK,OAAL,GAAe,KAAf;AACA,iBAAK,MAAL,GAAc,KAAK,OAAnB;AACD;;AAED,cAAI,KAAK,KAAL,GAAa,CAAjB,EAAoB;AAClB,iBAAK,WAAL,GAAmB,KAAK,QAAL,CAAc,KAAK,KAAL,GAAa,CAA3B,CAAnB;AACD;;AAED,cAAI,KAAK,KAAL,GAAc,KAAK,QAAL,CAAc,MAAd,GAAuB,CAAzC,EAA6C;AAC3C,iBAAK,WAAL,GAAmB,KAAK,QAAL,CAAc,KAAK,KAAL,GAAa,CAA3B,CAAnB;AACD;;AAED,cAAI,KAAK,WAAT,EAAsB;AACpB,gBAAI,KAAK,WAAL,IAAoB,KAAK,WAAL,CAAiB,QAAjB,KAA8B,KAAK,OAAL,CAAa,QAAnE,EAA6E;AAC3E,cAAA,cAAc,CAAC,IAAf,CAAoB,KAAK,OAAzB;AACA,mBAAK,aAAL,GAAqB,KAArB;AACD,aAHD,MAGO,IAAI,KAAK,WAAL,CAAiB,QAAjB,KAA8B,KAAK,OAAL,CAAa,QAA/C,EAAyD;AAC9D,cAAA,cAAc,CAAC,IAAf,CAAoB,KAAK,OAAzB;AAEA,mBAAK,WAAL,GAAmB,cAAnB;AACA,cAAA,cAAc,GAAG,EAAjB;AACA,mBAAK,aAAL,GAAqB,IAArB;AACD;AACF,WAXD,MAWO;AACL,YAAA,cAAc,CAAC,IAAf,CAAoB,KAAK,OAAzB;AAEA,iBAAK,WAAL,GAAmB,cAAnB;AACA,YAAA,cAAc,GAAG,EAAjB;AACA,iBAAK,aAAL,GAAqB,IAArB;AACD;;AAED,cAAG,KAAK,aAAR,EAAuB;AACrB,iBAAK,MAAL,CAAY,aAAZ,CAA0B,SAA1B,CAAoC,GAApC,CAAwC,eAAxC;AACD,WAFD,MAEO;AACL,iBAAK,MAAL,CAAY,aAAZ,CAA0B,KAA1B,CAAgC,OAAhC,GAA0C,MAA1C;AACD;AACF;AA3DH;;AAAA;AAAA,OAAA;;;;cAc8B,0CAAA,CAAA,YAAA;;;;AAbA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA3B,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,aAAZ,CAA2B,CAAA,E,mCAAA,E,SAAA,E,KAAgB,CAAhB;AACnB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,mCAAA,E,UAAA,E,KAAc,CAAd;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,mCAAA,E,OAAA,E,KAAW,CAAX;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,mCAAA,E,SAAA,E,KAAa,CAAb;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,mCAAA,E,UAAA,E,KAAc,CAAd;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,mCAAA,E,SAAA,E,KAAa,CAAb;AANE,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sIAAA,CAAA;AAFS,KAAV,CAIqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,mBAAb;AAIE,qCAAA;AAAA;;AAHsB,aAAA,SAAA,GAAY,mBAAZ;AAIrB;;AALH;AAAA;AAAA,mCAOU,CACP;AARH;;AAAA;AAAA,OAAA;;AACwB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,6BAAA,E,WAAA,E,KAAgC,CAAhC;AACb,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,SAAA,E,KAAiB,CAAjB;AAFE,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0HAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,oBAAb;AAeE,oCAAoB,WAApB,EAA4C;AAAA;;AAAA;;AAAxB,aAAA,WAAA,GAAA,WAAA;AAdE,aAAA,UAAA,GAAa,oBAAb;AACO,aAAA,MAAA,GAAS,KAAT;AAI7B,aAAA,QAAA,GAAsB,EAAtB;AACA,aAAA,WAAA,GAAyB,EAAzB;AACA,aAAA,SAAA,GAAY,QAAZ,CAO4C,CAC1C;;AACA,aAAK,iBAAL,GAAyB,KAAK,WAAL,CAAiB,iBAAjB,CAAmC,SAAnC,CAA6C,UAAC,QAAD,EAAwB;AAC5F,UAAA,MAAI,CAAC,QAAL,GAAgB,QAAhB;AACD,SAFwB,CAAzB,CAF0C,CAM1C;;AACA,aAAK,oBAAL,GAA4B,KAAK,WAAL,CAAiB,oBAAjB,CAAsC,SAAtC,CAAgD,UAAC,WAAD,EAA2B;AACrG,UAAA,MAAI,CAAC,WAAL,GAAmB,WAAnB;AACD,SAF2B,CAA5B;AAIA,aAAK,wBAAL,GAAgC,KAAK,WAAL,CAAiB,iBAAjB,CAAmC,SAAnC,CAA6C,UAAA,iBAAiB,EAAG;AAC/F,UAAA,MAAI,CAAC,MAAL,GAAc,iBAAd;AACD,SAF+B,CAAhC,CAX0C,CAe1C;;AACA,aAAK,yBAAL,GAAiC,KAAK,WAAL,CAAiB,yBAAjB,CAA2C,SAA3C,CAAqD,UAAC,YAAD,EAAiB;AACrG,UAAA,MAAI,CAAC,MAAL,GAAc,MAAM,CAAC,UAAP,GAAoB,GAAlC;;AACA,UAAA,MAAI,CAAC,WAAL,CAAiB,iBAAjB,CAAmC,IAAnC,CAAwC,MAAI,CAAC,MAA7C;AACD,SAHgC,CAAjC;AAID;;AAnCH;AAAA;AAAA,mCAqCU;AACN;AACA,eAAK,MAAL,GAAc,MAAM,CAAC,UAAP,GAAoB,GAAlC;AACD;AAxCH;AAAA;AAAA,iCA2CW,KA3CX,EA2CgB;AACZ,eAAK,MAAL,GAAc,KAAK,CAAC,MAAN,CAAa,UAAb,GAA0B,GAAxC;AAEA,eAAK,WAAL,CAAiB,iBAAjB,CAAmC,IAAnC,CAAwC,KAAK,MAA7C;AACD;AAED;;;;;;AAjDF;AAAA;AAAA,mCAsDa,KAtDb,EAsDkB;AACd,eAAK,MAAL,GAAc,KAAd;AACA,eAAK,WAAL,CAAiB,iBAAjB,CAAmC,IAAnC,CAAwC,KAAK,MAA7C;AACD;AAzDH;AAAA;AAAA,sCA2Da;AACT,eAAK,iBAAL,CAAuB,WAAvB;AACA,eAAK,oBAAL,CAA0B,WAA1B;AACA,eAAK,wBAAL,CAA8B,WAA9B;AACA,eAAK,yBAAL,CAA+B,WAA/B;AACD;AAhEH;;AAAA;AAAA,OAAA;;;;cAemC,0CAAA,CAAA,aAAA;;;;AAdX,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,8BAAA,E,YAAA,E,KAAkC,CAAlC;AACO,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA5B,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,cAAZ,CAA4B,CAAA,E,8BAAA,E,QAAA,E,KAAe,CAAf;AAES,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,QAAV,EAAoB;AAAC,gBAAQ;AAAT,KAApB,CAAqC,CAAA,E,8BAAA,E,QAAA,E,KAAmB,CAAnB;AAuCtC,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,eAAb,EAA8B,CAAC,QAAD,CAA9B,CACD,CAAA,E,8BAAA,E,UAAA,EAIC,IAJD;AA3CW,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CANhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kHAAA,CAAA,YAFS;AAIT,MAAA,UAAU,EAAE,kDAAA,CAAA,eAAA,CAJH;;;;AAAA,KAAV,CAMgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iQAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,wBAAb;AAgBE,wCAAoB,WAApB,EACoB,aADpB,EAEoB,cAFpB,EAEmD;AAAA;;AAAA;;AAF/B,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,cAAA,GAAA,cAAA;AAjBE,aAAA,SAAA,GAAY,gCAAZ;AAKtB,aAAA,MAAA,GAAS,KAAT;AAGA,aAAA,gBAAA,GAAmB,CAAC,QAAD,EAAW,aAAX,EAA0B,kBAA1B,CAAnB;AAUE,aAAK,eAAL,GAAuB,KAAK,aAAL,CAAmB,eAAnB,CAAmC,SAAnC,CAA6C,UAAC,MAAD,EAAW;AAC7E,UAAA,MAAI,CAAC,MAAL,GAAc,MAAd;AACA,UAAA,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,MAAL,CAAY,UAA9B;;AAEA,cAAI,CAAC,MAAI,CAAC,MAAL,CAAY,MAAjB,EAAyB;AACvB,YAAA,MAAI,CAAC,UAAL,GAAkB,EAAlB;AACD;AACF,SAPsB,CAAvB;AASA,aAAK,wBAAL,GAAgC,KAAK,WAAL,CAAiB,iBAAjB,CAAmC,SAAnC,CAA6C,UAAA,iBAAiB,EAAG;AAC/F,UAAA,MAAI,CAAC,MAAL,GAAc,iBAAd;AACD,SAF+B,CAAhC,CAViD,CAcjD;;AACA,aAAK,qBAAL,GAA6B,KAAK,WAAL,CAAiB,qBAAjB,CAAuC,SAAvC,CAAiD,UAAC,QAAD,EAAa;AACzF,UAAA,MAAI,CAAC,OAAL,GAAe,QAAf;AACD,SAF4B,CAA7B;AAIA,aAAK,gBAAL,GAAwB,KAAK,cAAL,CAAoB,gBAApB,CAAqC,SAArC,CACtB,UAAC,WAAD,EAAgB;AACd,UAAA,MAAI,CAAC,QAAL,GAAgB,WAAhB;AACA,UAAA,MAAI,CAAC,gBAAL,GAAwB,MAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,MAAI,CAAC,QAAL,CAAc,MAA7C,CAAxB;AACD,SAJqB,CAAxB;AAMD;;AA3CH;AAAA;AAAA,mCA6CU,CAEP;AAED;;;;AAjDF;AAAA;AAAA,oCAoDc,KApDd,EAoDqB,UApDrB,EAoD+B;AAC3B,UAAA,KAAK,CAAC,cAAN;AAEA,eAAK,MAAL,CAAY,UAAZ,GAAyB,KAAK,UAAL,GAAkB,UAA3C;AACA,eAAK,MAAL,CAAY,MAAZ,GAAqB,IAArB;AACA,eAAK,aAAL,CAAmB,MAAnB,CAA0B,KAAK,MAA/B;AACD;AAED;;;;;;AA5DF;AAAA;AAAA,mCAiEa,EAjEb,EAiEe;AACX,UAAA,EAAE,CAAC,cAAH;AACA,eAAK,MAAL,GAAc,CAAC,KAAK,MAApB;AACA,eAAK,WAAL,CAAiB,iBAAjB,CAAmC,IAAnC,CAAwC,KAAK,MAA7C;AACD;AAED;;;;;AAvEF;AAAA;AAAA,yCA2EmB,KA3EnB,EA2EwB;AACpB,UAAA,KAAK,CAAC,cAAN;AAEA,eAAK,QAAL,CAAc,eAAd,GAAgC,CAAC,KAAK,QAAL,CAAc,eAA/C;AACA,eAAK,cAAL,CAAoB,WAApB,CAAgC,KAAK,QAArC;AACD;AAhFH;AAAA;AAAA,sCAkFa;AACT,eAAK,qBAAL,CAA2B,WAA3B;AACA,eAAK,eAAL,CAAqB,WAArB;AACA,eAAK,wBAAL,CAA8B,WAA9B;AACA,eAAK,gBAAL,CAAsB,WAAtB;AACD;AAvFH;;AAAA;AAAA,OAAA;;;;cAgBmC,0CAAA,CAAA,aAAA;;cACE,4CAAA,CAAA,eAAA;;cACC,2DAAA,CAAA,iBAAA;;;;AAjBd,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,kCAAA,E,WAAA,E,KAA6C,CAA7C;AADX,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALpC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,sBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uIAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,aAAb;AAKE,6BAAoB,UAApB,EAA2D,aAA3D,EAAuF;AAAA;;AAAA;;AAAnE,aAAA,UAAA,GAAA,UAAA;AAAuC,aAAA,aAAA,GAAA,aAAA;AACzD,aAAK,SAAL,GAAiB,KAAK,UAAL,CAAgB,qBAAhB,CAAsC,4FAAA,CAAA,2BAAA,CAAtC,CAAjB;AAEA,aAAK,eAAL,GAAuB,KAAK,aAAL,CAAmB,eAAnB,CAAmC,SAAnC,CAA6C,UAAC,MAAD,EAAW;AAC7E,UAAA,MAAI,CAAC,MAAL,GAAc,MAAd;AACD,SAFsB,CAAvB;AAGD;;AAXH;AAAA;AAAA,mCAaU,CACP;AAED;;;;;AAhBF;AAAA;AAAA,oCAoBc,KApBd,EAoBmB;AACf,UAAA,KAAK,CAAC,cAAN;AAEA,eAAK,MAAL,CAAY,MAAZ,GAAqB,KAArB;AACA,eAAK,aAAL,CAAmB,MAAnB,CAA0B,KAAK,MAA/B;AACD;AAzBH;AAAA;AAAA,sCA2Ba;AACT,eAAK,UAAL,CAAgB,WAAhB,CAA4B,KAAK,SAAjC;AACA,eAAK,eAAL,CAAqB,WAArB;AACD;AA9BH;;AAAA;AAAA,OAAA;;;;cAKkC,gEAAA,CAAA,mBAAA;;cAA0C,4CAAA,CAAA,eAAA;;;;AAL/D,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,6FAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQb,QAAM,gCAAgC,GAAoC;AACxE,MAAA,eAAe,EAAE,IADuD;AAExE,MAAA,gBAAgB,EAAE;AAFsD,KAA1E;AAKA,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,4CAAA,CAAA,eAAA,CAFb;AAGE,MAAA,OAAO,EAAE;AACP,QAAA,IAAI,EAAE,0CAAA,CAAA,aAAA;AADC;AAHX,KADqB,CAAvB;;AAyCA,QAAa,UAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,UAAU,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CA/BtB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CADO,EAEP,4CAAA,CAAA,cAAA,CAFO,EAGP,2CAAA,CAAA,cAAA,CAHO,EAIP,kDAAA,CAAA,wBAAA,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CACZ,4CAAA,CAAA,eAAA,CADY,EAEZ,iEAAA,CAAA,sBAAA,CAFY,EAGZ,sFAAA,CAAA,0BAAA,CAHY,EAIZ,4DAAA,CAAA,mBAAA,CAJY,EAKZ,sFAAA,CAAA,2BAAA,CALY,EAMZ,oEAAA,CAAA,kBAAA,CANY,EAOZ,uEAAA,CAAA,kBAAA,CAPY,EAQZ,6FAAA,CAAA,2BAAA,CARY,EASZ,0EAAA,CAAA,qBAAA,CATY,EAUZ,sDAAA,CAAA,iBAAA,CAVY,EAWZ,2EAAA,CAAA,wBAAA,CAXY,EAYZ,6DAAA,CAAA,iBAAA,CAZY,CAPN;AAqBR,MAAA,eAAe,EAAE,CACf,6FAAA,CAAA,2BAAA,CADe,CArBT;AAwBR,MAAA,SAAS,EAAE,CACT;AACE,QAAA,OAAO,EAAE,kDAAA,CAAA,0BAAA,CADX;AAEE,QAAA,QAAQ,EAAE;AAFZ,OADS;AAxBH,KAAT,CA+BsB,CAAA,EAAV,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDb,QAAa,WAAb;AAoBI,2BAAoB,IAApB,EAA8C,QAA9C,EAAgE;AAAA;;AAA5C,aAAA,IAAA,GAAA,IAAA;AAA0B,aAAA,QAAA,GAAA,QAAA;AAnBtC,aAAA,WAAA,GAAc,mBAAd,CAmBwD,CAnBpB;;AACpC,aAAA,mBAAA,GAAsB,uBAAtB,CAkBwD,CAlBR;;AAChD,aAAA,eAAA,GAAkB,mBAAlB,CAiBwD,CAjBhB;;AAQhD,aAAA,iBAAA,GAA8C,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,KAApB,CAA9C;AACA,aAAA,iBAAA,GAA0C,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAA1C;AACA,aAAA,uBAAA,GAAgD,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAAhD;AACA,aAAA,oBAAA,GAA6C,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAA7C;AACA,aAAA,yBAAA,GAAkD,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAAlD;AACA,aAAA,qBAAA,GAA8C,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAA9C;AACA,aAAA,oBAAA,GAA6C,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAA7C;AACA,aAAA,gBAAA,GAAyC,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAAzC;AAGC;AAED;;;;;;;;AAvBJ;AAAA;AAAA,gCA6BY,KA7BZ,EA6B2C,KA7B3C,EA6BqE;AAAA;;AAC7D,eAAK,WAAL,GAAmB,KAAK,CAAC,MAAzB;AAEA,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,OAAO,CAAC,GAAR,CAAY,CACR,MAAI,CAAC,WAAL,EADQ,EAER,MAAI,CAAC,cAAL,EAFQ,EAGR,MAAI,CAAC,eAAL,EAHQ,CAAZ,EAIG,IAJH,CAIQ,YAAK;AACL;;;;;AAMA,cAAA,OAAO;AACV,aAZL,EAaI,MAbJ;AAeH,WAhBM,CAAP;AAiBH;AAED;;;;;AAnDJ;AAAA;AAAA,sCAuDe;AAAA;;AACP,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,WAAnB,EACK,SADL,CACe,UAAC,QAAD,EAAkB;AACzB,cAAA,MAAI,CAAC,QAAL,GAAgB,QAAhB;;AACA,cAAA,MAAI,CAAC,iBAAL,CAAuB,IAAvB,CAA4B,MAAI,CAAC,QAAjC;;AACA,cAAA,OAAO,CAAC,MAAI,CAAC,QAAN,CAAP;AACH,aALL,EAKO,MALP;AAMH,WAPM,CAAP;AAQH;AAED;;;;;AAlEJ;AAAA;AAAA,yCAsEkB;AAAA;;AACV,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,WAAL,GAAmB,cAAjC,EACK,SADL,CACe,UAAC,QAAD,EAAkB;AACzB,cAAA,MAAI,CAAC,WAAL,GAAmB,QAAnB;;AACA,cAAA,MAAI,CAAC,oBAAL,CAA0B,IAA1B,CAA+B,MAAI,CAAC,WAApC;;AACA,cAAA,OAAO,CAAC,MAAI,CAAC,WAAN,CAAP;AACH,aALL,EAKO,MALP;AAMH,WAPM,CAAP;AAQH;AAED;;;;;AAjFJ;AAAA;AAAA,0CAqFmB;AAAA;;AACX,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,eAAnB,EACK,SADL,CACe,UAAC,QAAD,EAAkB;AACzB,cAAA,MAAI,CAAC,YAAL,GAAoB,QAApB;;AACA,cAAA,MAAI,CAAC,qBAAL,CAA2B,IAA3B,CAAgC,MAAI,CAAC,YAArC;;AACA,cAAA,OAAO,CAAC,MAAI,CAAC,YAAN,CAAP;AACH,aALL,EAKO,MALP;AAMH,WAPM,CAAP;AAQH;AAED;;;;;;AAhGJ;AAAA;AAAA,4CAqGwB,GArGxB,EAqG2B;AAAA;;AACnB,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,mBAAL,GAA2B,GAA3B,GAAiC,GAA/C,EACK,SADL,CACe,UAAC,QAAD,EAAkB;AACzB,cAAA,MAAI,CAAC,gBAAL,GAAwB,QAAxB;;AACA,cAAA,MAAI,CAAC,yBAAL,CAA+B,IAA/B,CAAoC,MAAI,CAAC,gBAAzC;;AACA,cAAA,OAAO,CAAC,MAAI,CAAC,gBAAN,CAAP;AACH,aALL,EAKO,MALP;AAMH,WAPM,CAAP;AAQH;AAED;;;;;;AAhHJ;AAAA;AAAA,yCAqHqB,UArHrB,EAqHoC;AAAA;;AAC5B,eAAK,gBAAL,CAAsB,gBAAtB,CAAuC,IAAvC,CAA4C,UAA5C;AAEA,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,OAAI,CAAC,IAAL,CAAU,IAAV,CAAe,OAAI,CAAC,mBAAL,GAA2B,GAA3B,GAAiC,OAAI,CAAC,gBAAL,CAAsB,EAAtE,EAAwE,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,OAAI,CAAC,gBAAX,CAAxE,EACK,SADL,CACe,UAAA,QAAQ,EAAG;AAClB,cAAA,OAAI,CAAC,mBAAL,CAAyB,OAAI,CAAC,gBAAL,CAAsB,EAA/C,EAAmD,IAAnD,CAAwD,UAAA,GAAG,EAAG;AAC1D,gBAAA,OAAO,CAAC,GAAD,CAAP;AAEH,eAHD,EAGG,MAHH;AAIH,aANL;AAOH,WARM,CAAP;AASH;AAjIL;;AAAA;AAAA,OAAA;;;;cAoB8B,iDAAA,CAAA,YAAA;;cAA8B,4CAAA,CAAA,UAAA;;;;AApB/C,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHvB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACR,MAAA,UAAU,EAAE;AADJ,KAAX,CAGuB,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;ACVb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,eAAb;AAQE,+BAAoB,aAApB,EAAgD;AAAA;;AAAA;;AAA5B,aAAA,aAAA,GAAA,aAAA;AAPE,aAAA,aAAA,GAAgB,2CAAhB;AACK,aAAA,MAAA,GAAS,KAAT;AAE3B,aAAA,UAAA,GAAa,KAAb;AAKE,aAAK,eAAL,GAAuB,KAAK,aAAL,CAAmB,eAAnB,CAAmC,SAAnC,CAA6C,UAAC,MAAD,EAAgB;AAClF,cAAI,CAAC,OAAI,CAAC,UAAV,EAAsB;AACpB,YAAA,OAAI,CAAC,aAAL;AACD;;AAED,UAAA,OAAI,CAAC,MAAL,GAAc,MAAd;AACA,UAAA,OAAI,CAAC,MAAL,GAAc,OAAI,CAAC,MAAnB;AACA,UAAA,OAAI,CAAC,UAAL,GAAkB,OAAI,CAAC,MAAL,CAAY,UAA9B;;AAEA,cAAI,CAAC,OAAI,CAAC,MAAL,CAAY,MAAjB,EAAyB;AACvB,YAAA,OAAI,CAAC,UAAL,GAAkB,EAAlB;AACD;AACF,SAZsB,CAAvB;AAaD;;AAtBH;AAAA;AAAA,mCAwBU,CACP;AAzBH;AAAA;AAAA,wCA2Be;AAAA;;AACX,eAAK,UAAL,GAAkB,IAAlB;AAEA,UAAA,UAAU,CAAC,YAAK;AACd,YAAA,OAAI,CAAC,UAAL,GAAkB,KAAlB;AACD,WAFS,EAEP,IAFO,CAAV;AAGD;AAED;;;;;AAnCF;AAAA;AAAA,oCAuCc,KAvCd,EAuCmB;AACf,UAAA,KAAK,CAAC,cAAN;AAEA,eAAK,MAAL,CAAY,MAAZ,GAAqB,KAArB;AACA,eAAK,aAAL,CAAmB,MAAnB,CAA0B,KAAK,MAA/B;AACD;AA5CH;AAAA;AAAA,qCA8Ce,KA9Cf,EA8CsB,UA9CtB,EA8CgC;AAC5B,UAAA,KAAK,CAAC,cAAN;AACA,eAAK,aAAL;AAEA,eAAK,MAAL,CAAY,UAAZ,GAAyB,KAAK,UAAL,GAAkB,UAA3C;AACA,eAAK,aAAL,CAAmB,MAAnB,CAA0B,KAAK,MAA/B;AACD;AApDH;AAAA;AAAA,sCAsDa;AACT,eAAK,eAAL,CAAqB,WAArB;AACD;AAxDH;;AAAA;AAAA,OAAA;;;;cAQqC,4CAAA,CAAA,eAAA;;;;AAPb,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,yBAAA,E,eAAA,E,KAA4D,CAA5D;AACK,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA1B,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,YAAZ,CAA0B,CAAA,E,yBAAA,E,QAAA,E,KAAe,CAAf;AAFhB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sGAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACTb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,sBAAb;AAKE,sCAAoB,UAApB,EAA0C;AAAA;;AAAA;;AAAtB,aAAA,UAAA,GAAA,UAAA;AAJE,aAAA,SAAA,GAAY,iBAAZ;AACtB,aAAA,aAAA,GAAuB,EAAvB;AAIE,aAAK,sBAAL,GAA8B,KAAK,UAAL,CAAgB,sBAAhB,CAAuC,SAAvC,CAAiD,UAAC,aAAD,EAAyB;AACtG,UAAA,OAAI,CAAC,aAAL,GAAqB,aAArB;AACD,SAF6B,CAA9B;AAGD;;AATH;AAAA;AAAA,mCAWU,CACP;AAZH;AAAA;AAAA,sCAca;AACT,eAAK,sBAAL,CAA4B,WAA5B;AACD;AAhBH;;AAAA;AAAA,OAAA;;;;cAKkC,6CAAA,CAAA,YAAA;;;;AAJV,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,gCAAA,E,WAAA,E,KAA8B,CAA9B;AADX,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALlC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2HAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACTb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6NAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,eAAb;AAOE,+BAAoB,UAApB,EAA0C;AAAA;;AAAA;;AAAtB,aAAA,UAAA,GAAA,UAAA;AANE,aAAA,UAAA,GAAa,iBAAb;AACtB,aAAA,QAAA,GAAkB,EAAlB;AACA,aAAA,UAAA,GAAa,EAAb;AAKE,aAAK,WAAL,GAAmB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAAnB;AACA,aAAK,iBAAL,GAAyB,KAAK,UAAL,CAAgB,iBAAhB,CAAkC,SAAlC,CAA4C,UAAC,QAAD,EAAoB;AACvF,UAAA,OAAI,CAAC,QAAL,GAAgB,QAAhB;AACD,SAFwB,CAAzB;AAGD;;AAZH;AAAA;AAAA,mCAcU;AAAA;;AACN,eAAK,WAAL,CAAiB,YAAjB,CAA8B,IAA9B,CACE,MAAA,CAAA,2CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,GAAb,CADF,EAEE,MAAA,CAAA,2CAAA,CAAA,sBAAA,CAAA,CAAA,EAFF,EAGE,SAHF,CAGY,UAAA,UAAU,EAAG;AACvB,YAAA,OAAI,CAAC,UAAL,GAAkB,UAAlB;AACD,WALD;AAMD;AArBH;AAAA;AAAA,sCAuBa;AACT,eAAK,iBAAL,CAAuB,WAAvB;AACD;AAzBH;;AAAA;AAAA,OAAA;;;;cAOkC,6CAAA,CAAA,YAAA;;;;AANV,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,yBAAA,E,YAAA,E,KAA+B,CAA/B;AADX,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,6GAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8uBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,yBAAb;AAQE,yCAAY,EAAZ,EAAoC,WAApC,EAA4D;AAAA;;AAAxB,aAAA,WAAA,GAAA,WAAA;AAPd,aAAA,SAAA,GAAY,qBAAZ;AACtB,aAAA,SAAA,GAAY,KAAZ;AAOE,aAAK,EAAL,GAAU,EAAE,CAAC,aAAb;AACD;;AAVH;AAAA;AAAA,mCAYU;AAAA;;AACN,eAAK,gBAAL,GAAwB,KAAK,WAAL,CAAiB,gBAAjB,CACrB,SADqB,CACX,UAAA,IAAI,EAAG;AAEhB,YAAA,OAAI,CAAC,OAAL,GAAe,IAAI,CAAC,OAApB;AACA,YAAA,OAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,IAAtB;AACA,YAAA,OAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,QAArB;;AACA,YAAA,OAAI,CAAC,WAAL;AACD,WAPqB,CAAxB;AAQD;AArBH;AAAA;AAAA,uCAwBc;AACV,eAAK,sBAAL;AACD;AA1BH;AAAA;AAAA,uCA6Bc;AACV,eAAK,sBAAL;AACD;AAED;;;;AAjCF;AAAA;AAAA,iDAoCwB;AACpB,eAAK,SAAL,GAAiB,IAAjB;AACD;AAED;;;;AAxCF;AAAA;AAAA,iDA2CwB;AACpB,eAAK,SAAL,GAAiB,KAAjB;AACD;AA7CH;AAAA;AAAA,sCA+Ca;AACT,eAAK,gBAAL,CAAsB,WAAtB;AACD;AAED;;;;AAnDF;AAAA;AAAA,sCAsDa;AAAA;;AACT,cAAI,KAAK,QAAL,IAAiB,KAAK,SAA1B,EAAqC;AACnC,gBAAM,YAAY,GAAG,MAAM,CAAC,WAA5B;;AAEA,gBAAI,CAAC,KAAK,EAAL,CAAQ,KAAR,CAAc,GAAnB,EAAwB;AACtB,mBAAK,EAAL,CAAQ,KAAR,CAAc,GAAd,GAAqB,YAAY,GAAG,CAAhB,GAAqB,IAAzC;AACD;;AACD,iBAAK,EAAL,CAAQ,KAAR,CAAc,IAAd,GAAsB,KAAK,QAAL,CAAc,IAAd,GAAqB,KAAK,QAAL,CAAc,KAApC,GAA6C,IAAlE;AAEA,YAAA,UAAU,CAAC,YAAK;AACd,kBAAM,UAAU,GAAG,OAAI,CAAC,EAAL,CAAQ,YAA3B;AACA,kBAAM,eAAe,GAAG,UAAU,GAAG,OAAI,CAAC,QAAL,CAAc,GAA3B,GAAiC,EAAzD;;AACA,kBAAI,eAAe,GAAG,YAAtB,EAAoC;AAClC,gBAAA,OAAI,CAAC,EAAL,CAAQ,KAAR,CAAc,GAAd,GAAqB,YAAY,IAAI,UAAU,GAAG,EAAjB,CAAb,GAAqC,IAAzD;AACD,eAFD,MAEO,IAAI,UAAU,GAAG,CAAjB,EAAoB;AACzB,gBAAA,OAAI,CAAC,EAAL,CAAQ,KAAR,CAAc,GAAd,GAAoB,OAAI,CAAC,QAAL,CAAc,GAAd,GAAoB,IAAxC;AACD;AACF,aARS,EAQP,GARO,CAAV;AASD;AACF;AAzEH;;AAAA;AAAA,OAAA;;;;cAQkB,0CAAA,CAAA,YAAA;;cAAiC,0CAAA,CAAA,aAAA;;;;AAP3B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,mCAAA,E,WAAA,E,KAAkC,CAAlC;AAuBtB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,YAAb,CACD,CAAA,E,mCAAA,E,cAAA,EAEC,IAFD;AAKA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,YAAb,CACD,CAAA,E,mCAAA,E,cAAA,EAEC,IAFD;AA7BW,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,6IAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,gBAAb;AASE,gCAAY,EAAZ,EAAoC,WAApC,EAA4D;AAAA;;AAAxB,aAAA,WAAA,GAAA,WAAA;AARd,aAAA,SAAA,GAAY,YAAZ;AACO,aAAA,QAAA,GAAW,KAAX;AAE7B,aAAA,eAAA,GAAuB;AAAC,UAAA,IAAI,EAAE;AAAP,SAAvB;AAME,aAAK,EAAL,GAAU,EAAE,CAAC,aAAb;AACD;;AAXH;AAAA;AAAA,mCAaU;AAAA;;AACN;AACA,eAAK,yBAAL,GAAiC,KAAK,WAAL,CAAiB,yBAAjB,CAA2C,SAA3C,CAAqD,UAAC,YAAD,EAAiB;AACrG,gBAAI,YAAY,CAAC,EAAb,IAAmB,YAAY,CAAC,gBAAb,CAA8B,MAA9B,GAAuC,CAA9D,EAAiE;AAC/D,cAAA,OAAI,CAAC,QAAL,GAAgB,YAAY,CAAC,EAAb,KAAoB,OAAI,CAAC,OAAL,CAAa,EAAjD;AACD,aAFD,MAEO;AACL,cAAA,OAAI,CAAC,QAAL,GAAgB,KAAhB;AACD;AACF,WANgC,CAAjC;AAOD;AAtBH;AAAA;AAAA,kCAyBS;AAAA;;AACL,eAAK,WAAL,CAAiB,mBAAjB,CAAqC,KAAK,OAAL,CAAa,EAAlD,EAAsD,IAAtD,CAA2D,UAAC,IAAD,EAAS;AAClE,YAAA,OAAI,CAAC,WAAL,CAAiB,uBAAjB,CAAyC,IAAzC,CAA8C,OAAI,CAAC,OAAnD;AACD,WAFD;AAGD;AA7BH;AAAA;AAAA,uCAgCc;AACV,eAAK,eAAL,CAAqB,QAArB,GAAgC,KAAK,EAAL,CAAQ,qBAAR,EAAhC;AACA,eAAK,eAAL,CAAqB,IAArB,GAA4B,IAA5B;AACA,eAAK,eAAL,CAAqB,OAArB,GAA+B,KAAK,OAApC;AAEA,eAAK,WAAL,CAAiB,gBAAjB,CAAkC,IAAlC,CAAuC,KAAK,eAA5C;AACD;AAtCH;AAAA;AAAA,uCAyCc;AACV,eAAK,eAAL,CAAqB,IAArB,GAA4B,KAA5B;AACA,eAAK,WAAL,CAAiB,gBAAjB,CAAkC,IAAlC,CAAuC,KAAK,eAA5C;AACD;AA5CH;AAAA;AAAA,sCA8Ca;AACT,eAAK,yBAAL,CAA+B,WAA/B;AACD;AAhDH;;AAAA;AAAA,OAAA;;;;cASkB,0CAAA,CAAA,YAAA;;cAAiC,0CAAA,CAAA,aAAA;;;;AAR3B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,OAAZ,CAAqB,CAAA,E,0BAAA,E,WAAA,E,KAAyB,CAAzB;AACO,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA5B,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,cAAZ,CAA4B,CAAA,E,0BAAA,E,UAAA,E,KAAiB,CAAjB;AACpB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,0BAAA,E,SAAA,E,KAAiB,CAAjB;AAsBT,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,OAAb,CACD,CAAA,E,0BAAA,E,SAAA,EAIC,IAJD;AAOA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,YAAb,CACD,CAAA,E,0BAAA,E,cAAA,EAMC,IAND;AASA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,YAAb,CACD,CAAA,E,0BAAA,E,cAAA,EAGC,IAHD;AAzCW,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uHAAA,CAAA;AAFS,KAAV,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB","sourcesContent":["export default \"<app-chat-header *ngIf=\\\"chatData.length > 0\\\" [contact]=\\\"currentContact\\\"></app-chat-header>\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__content position-relative\\\" perfectScrollbar>\\r\\n\\r\\n  <div *ngIf=\\\"chatData.length === 0\\\"\\r\\n       class=\\\"dt-module__content-inner h-100 d-flex flex-column justify-content-center align-items-center\\\">\\r\\n    <gx-icon name=\\\"message\\\" [fw]=\\\"true\\\" size=\\\"7x\\\" class=\\\"mb-2\\\"></gx-icon>\\r\\n    <h1 class=\\\"display-4\\\">Select User to start Chat</h1>\\r\\n\\r\\n    <button class=\\\"btn btn-primary d-md-none\\\"\\r\\n            (click)=\\\"toggleOpen($event)\\\">Select contact to start Chat\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <ng-container *ngIf=\\\"chatData.length > 0\\\">\\r\\n\\r\\n    <!-- Module Content Inner -->\\r\\n    <div class=\\\"dt-module__content-inner\\\">\\r\\n\\r\\n      <!-- Chat Conversation -->\\r\\n      <div class=\\\"dt-chat__conversation\\\">\\r\\n\\r\\n        <app-chat-conversation *ngFor=\\\"let message of chatData; let i = index;\\\"\\r\\n                               [chatData]=\\\"chatData\\\"\\r\\n                               [message]=\\\"message\\\"\\r\\n                               [index]=\\\"i\\\"\\r\\n                               [operator]=\\\"operator\\\"\\r\\n                               [contact]=\\\"currentContact\\\"></app-chat-conversation>\\r\\n\\r\\n      </div>\\r\\n      <!-- /chat conversation -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /module content inner -->\\r\\n\\r\\n  </ng-container>\\r\\n\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<app-chat-box *ngIf=\\\"chatData.length > 0\\\"\\r\\n              [operator]=\\\"operator\\\"></app-chat-box>\\r\\n\"","export default \"<form [formGroup]=\\\"chatForm\\\" (ngSubmit)=\\\"chatForm.valid && sendMessage()\\\">\\r\\n  <!-- Action Tools -->\\r\\n  <div class=\\\"action-tools\\\">\\r\\n    <button class=\\\"btn btn-primary dt-fab-btn\\\" type=\\\"submit\\\" [disabled]=\\\"chatForm.invalid\\\">\\r\\n      <gx-icon name=\\\"send-new\\\" size=\\\"xl\\\"></gx-icon>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"dt-fab-btn dt-attachment-btn size-30\\\">\\r\\n      <input type=\\\"file\\\">\\r\\n      <gx-icon name=\\\"attach-v\\\"></gx-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /action tools -->\\r\\n\\r\\n  <!-- Media -->\\r\\n  <bs-media-object [img]=\\\"{url: operator.thumb, alt: operator.name, classlist: 'dt-avatar mr-2'}\\\">\\r\\n    <!-- Text Area -->\\r\\n    <textarea class=\\\"form-control border-0 shadow-none bg-focus\\\"\\r\\n              rows=\\\"1\\\"\\r\\n              name=\\\"message\\\"\\r\\n              formControlName=\\\"message\\\"\\r\\n              (keydown)=\\\"onKeyDown($event)\\\"\\r\\n              required\\r\\n              placeholder=\\\"Write your comment...\\\"></textarea>\\r\\n    <!-- /text area -->\\r\\n  </bs-media-object>\\r\\n  <!-- /media -->\\r\\n</form>\\r\\n\"","export default \"<ng-container *ngIf=\\\"renderMessage\\\">\\r\\n\\r\\n  <gx-avatar [user]=\\\"avatar\\\" class=\\\"size-30\\\" [charLength]=\\\"\\\"></gx-avatar>\\r\\n\\r\\n  <!-- Messages -->\\r\\n  <div class=\\\"dt-chat__message-wrapper\\\">\\r\\n\\r\\n    <!-- Message -->\\r\\n    <div class=\\\"dt-chat__message\\\"\\r\\n         *ngFor=\\\"let item of messageList\\\" [innerHTML]=\\\"item.message | nl2br\\\"></div>\\r\\n    <!-- /message -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /messages -->\\r\\n\\r\\n</ng-container>\\r\\n\"","export default \"<!-- User Detail  -->\\r\\n<div class=\\\"dt-avatar-wrapper\\\">\\r\\n  <div class=\\\"dt-avatar-status mr-2\\\">\\r\\n    <gx-avatar class=\\\"size-45\\\" [user]=\\\"contact\\\" [charLength]=\\\"0\\\"></gx-avatar>\\r\\n    <div class=\\\"dot-shape bg-success dot-shape-lg\\\"></div>\\r\\n  </div>\\r\\n  <span class=\\\"dt-avatar-info\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-name\\\">{{contact.name}}</a>\\r\\n    <span class=\\\"d-inline-block\\\">{{contact.email}}</span>\\r\\n  </span>\\r\\n</div>\\r\\n<!-- User Detail  -->\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n  <a class=\\\"no-arrow text-dark\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"horizontal-more\\\" size=\\\"lg\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <div ngbDropdownMenu>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Edit\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"trash\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Delete\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Contact List</a>\\r\\n    <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n      <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n      Favourite List\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<app-operator-profile (onMenuClick)=\\\"toggleOpen($event)\\\"></app-operator-profile>\\r\\n\\r\\n<!-- Sidebar Menu -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\">\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner\\\">\\r\\n    <!-- Card Header -->\\r\\n    <div class=\\\"card-header card-nav bg-transparent border-bottom\\\">\\r\\n      <ul class=\\\"card-header-links nav nav-underline text-uppercase\\\" role=\\\"tablist\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             href=\\\"javascript:void(0)\\\"\\r\\n             [ngClass]=\\\"{'active':activeTab == 'recent'}\\\"\\r\\n             (click)=\\\"activeTab = 'recent'\\\">Recent</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             href=\\\"javascript:void(0)\\\"\\r\\n             [ngClass]=\\\"{'active':activeTab == 'contact'}\\\"\\r\\n             (click)=\\\"activeTab = 'contact'\\\">Contact</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <!-- /card header -->\\r\\n\\r\\n    <!-- Tab Content-->\\r\\n    <div class=\\\"tab-content\\\">\\r\\n\\r\\n      <!-- Tab panel -->\\r\\n      <div class=\\\"tab-pane position-relative\\\" [ngClass]=\\\"{'active':activeTab == 'recent'}\\\" perfectScrollbar>\\r\\n\\r\\n        <!-- Contact Container -->\\r\\n        <div class=\\\"dt-contacts__container\\\">\\r\\n\\r\\n          <div class=\\\"dt-contacts__container-inner\\\">\\r\\n\\r\\n            <!-- Contacts -->\\r\\n            <div class=\\\"dt-contacts contacts-list\\\">\\r\\n\\r\\n              <!-- Contact Heading -->\\r\\n              <h5 class=\\\"dt-contact__heading\\\">Yesterday</h5>\\r\\n              <!-- /contact heading -->\\r\\n\\r\\n              <!-- Contact -->\\r\\n              <chat-contact *ngFor=\\\"let contact of recentChats\\\"\\r\\n                            [contact]=\\\"contact\\\"></chat-contact>\\r\\n              <!-- /contact -->\\r\\n\\r\\n            </div>\\r\\n            <!-- contacts -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- /contact container -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /tab panel -->\\r\\n\\r\\n      <!-- Tab panel -->\\r\\n      <div class=\\\"tab-pane position-relative\\\" [ngClass]=\\\"{'active':activeTab == 'contact'}\\\" perfectScrollbar>\\r\\n\\r\\n        <!-- Contact Container -->\\r\\n        <div class=\\\"dt-contacts__container\\\">\\r\\n\\r\\n          <div class=\\\"dt-contacts__container-inner\\\">\\r\\n\\r\\n            <!-- Contacts -->\\r\\n            <div class=\\\"dt-contacts contacts-list\\\">\\r\\n\\r\\n              <!-- Contact -->\\r\\n              <chat-contact *ngFor=\\\"let contact of contacts\\\"\\r\\n                            [contact]=\\\"contact\\\"></chat-contact>\\r\\n              <!-- /contact -->\\r\\n\\r\\n            </div>\\r\\n            <!-- contacts -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- /contact container -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /tab panel -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /tab content-->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar Menu -->\\r\\n\"","export default \"<!-- User Detail  -->\\r\\n<div *ngIf=\\\"profile\\\" class=\\\"dt-avatar-wrapper mb-8 d-none d-md-flex\\\">\\r\\n  <div class=\\\"dt-avatar-status\\\">\\r\\n    <gx-avatar [user]=\\\"profile\\\"></gx-avatar>\\r\\n    <div class=\\\"dot-shape bg-success dot-shape-lg\\\"></div>\\r\\n  </div>\\r\\n  <span class=\\\"dt-avatar-info\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-name\\\">{{profile.name}}</a>\\r\\n    <span class=\\\"f-12 d-inline-block\\\">online</span>\\r\\n  </span>\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div class=\\\"ml-auto align-self-start mt-1\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n    <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n      <gx-icon name=\\\"vertical-more\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Edit\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Contact List</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Favourite List\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- User Detail  -->\\r\\n\\r\\n<!-- App Quick Menu -->\\r\\n<div class=\\\"quick-menu-list\\\">\\r\\n  <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n     href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n     [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n     (click)=\\\"toggleNavigation($event)\\\">\\r\\n    <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <!-- Search Box -->\\r\\n  <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n    <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Search in app...\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n      <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n  </form>\\r\\n  <!-- /search box -->\\r\\n\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu\\\"\\r\\n     [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n     (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n    <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu\\\"\\r\\n     [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n     (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n    <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n  </a>\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div class=\\\"quick-menu\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n      <gx-icon name=\\\"circle-add-o\\\"></gx-icon>\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Group</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Chat</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Contact</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n\\r\\n  <div class=\\\"quick-menu d-md-none\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n    <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n      <gx-avatar [user]=\\\"profile\\\" class=\\\"size-25\\\"></gx-avatar>\\r\\n    </a>\\r\\n\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Edit\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Contact List</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Favourite List\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <a href=\\\"javascript:void(0)\\\"\\r\\n     class=\\\"quick-menu d-md-none\\\"\\r\\n     [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n     (click)=\\\"toggleOpen($event)\\\">\\r\\n    <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /app quick menu -->\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module dt-module--chat\\\">\\r\\n\\r\\n      <!-- Module sidebar -->\\r\\n      <app-chat-sidebar></app-chat-sidebar>\\r\\n      <!-- /module sidebar -->\\r\\n\\r\\n      <!-- Module Container -->\\r\\n      <app-chat-area></app-chat-area>\\r\\n      <!-- /module Container -->\\r\\n\\r\\n      <!-- Module Drawer -->\\r\\n      <chat-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></chat-drawer>\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n      <!-- Module Drawer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /grid -->\\r\\n\"","export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" ngbDropdown>\\r\\n          <!-- Dropdown Button -->\\r\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"dt-action-nav__link no-arrow\\\" ngbDropdownToggle>\\r\\n            <gx-icon name=\\\"circle-add-o\\\"></gx-icon>\\r\\n          </a>\\r\\n          <!-- /dropdown button -->\\r\\n\\r\\n          <!-- Dropdown Menu -->\\r\\n          <div ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Group</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Chat</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Add New Contact</a>\\r\\n          </div>\\r\\n          <!-- /dropdown menu -->\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<ng-container *ngIf=\\\"contact && isVisible\\\">\\r\\n  <div class=\\\"p-4\\\">\\r\\n    <div class=\\\"dt-avatar-wrapper mb-3\\\">\\r\\n      <gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\" class=\\\"size-50\\\"></gx-avatar>\\r\\n\\r\\n      <div class=\\\"dt-avatar-info\\\">\\r\\n        <span class=\\\"dt-avatar-name h4 mb-1\\\">{{contact.name}}</span>\\r\\n        <span class=\\\"dt-avatar-desc f-12\\\">{{contact.email}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mb-1\\\">\\r\\n      <gx-icon name=\\\"maps\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.location}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      <span class=\\\"f-12\\\">{{contact.connections}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"px-4 py-2 border-top d-flex justify-content-between\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\">Add to Contacts</a>\\r\\n    <div class=\\\"ml-2 ml-sm-10\\\">\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"mail\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a class=\\\"mr-1\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"tag-o\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n      <a href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"chat-app\\\" [fw]=\\\"true\\\" size=\\\"xl\\\"></gx-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","export default \"<gx-avatar [user]=\\\"contact\\\" [charLength]=\\\"0\\\"></gx-avatar>\\r\\n<!-- Contact Info -->\\r\\n<div class=\\\"dt-contact__info\\\">\\r\\n  <h4 class=\\\"dt-contact__title\\\">{{contact.name}}</h4>\\r\\n  <p class=\\\"dt-contact__desc\\\">{{contact.bio}}</p>\\r\\n</div>\\r\\n<!-- /contact info -->\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtYXJlYS9jaGF0LWFyZWEuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from './../chat.service';\r\nimport {Contact} from './../contact.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-chat-area',\r\n  templateUrl: './chat-area.component.html',\r\n  styleUrls: ['./chat-area.component.scss']\r\n})\r\nexport class ChatAreaComponent implements OnInit, OnDestroy {\r\n  currentContact: Contact;\r\n  operator: any;\r\n  chatData: any[] = [];\r\n  onChatConversationChanged: Subscription;\r\n  onCurrentContactChanged: Subscription;\r\n  onChatOperatorChanged: Subscription;\r\n  toggleChatSidebarService: Subscription;\r\n  isOpen = false;\r\n\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private eleRef: ElementRef, private chatService: ChatService) {\r\n    this.eleRef.nativeElement.classList.add('dt-module__container');\r\n\r\n    // Subscribe to update conversation on changes\r\n    this.onChatConversationChanged = this.chatService.onChatConversationChanged.subscribe((conversation) => {\r\n      if (conversation.id && conversation.conversationData.length > 0) {\r\n        this.chatData = conversation.conversationData;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      }\r\n    });\r\n\r\n    // Subscribe to update conversation on changes\r\n    this.onCurrentContactChanged = this.chatService.onCurrentContactChanged.subscribe((contact) => {\r\n      this.currentContact = contact;\r\n    });\r\n\r\n    // Subscribe to update operator on changes\r\n    this.onChatOperatorChanged = this.chatService.onChatOperatorChanged.subscribe((operator) => {\r\n      this.operator = operator;\r\n    });\r\n\r\n    this.toggleChatSidebarService = this.chatService.toggleChatSubject.subscribe(toggleChatSidebar => {\r\n      this.isOpen = toggleChatSidebar;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onChatConversationChanged.unsubscribe();\r\n    this.onCurrentContactChanged.unsubscribe();\r\n    this.toggleChatSidebarService.unsubscribe();\r\n    this.onChatOperatorChanged.unsubscribe();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  toggleOpen(event: Event) {\r\n    event.preventDefault();\r\n    this.isOpen = !this.isOpen;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n}\r\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\nimport {ChatService} from './../../chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-box',\r\n  templateUrl: './chat-box.component.html'\r\n})\r\nexport class ChatBoxComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'd-block add-comment-box';\r\n  @Input() operator: any;\r\n\r\n  chatForm: FormGroup;\r\n\r\n  constructor(private chatService: ChatService, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  /**\r\n   * Create form for Task\r\n   */\r\n  createForm() {\r\n    this.chatForm = this.formBuilder.group({\r\n      senderId: this.operator.id,\r\n      message: '',\r\n      sentAt: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Call function on keydown\r\n   * @param event\r\n   */\r\n  onKeyDown(event) {\r\n    if (event.keyCode === 13 && this.chatForm.valid) {\r\n      if (!event.shiftKey) {\r\n        this.sendMessage();\r\n        event.preventDefault();\r\n      }\r\n      // rest of your code\r\n    } else if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send Chat message\r\n   */\r\n  sendMessage() {\r\n    this.chatForm.value.sentAt = new Date();\r\n    if (this.chatService.saveConversation(this.chatForm.value)) {\r\n      this.createForm();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, HostBinding, Input, OnInit} from '@angular/core';\r\n\r\nlet storedMessages = [];\r\n\r\n@Component({\r\n  selector: 'app-chat-conversation',\r\n  templateUrl: './chat-conversation.component.html'\r\n})\r\nexport class ChatConversationComponent implements OnInit {\r\n  @HostBinding('class.reply') replied = false;\r\n  @Input() chatData: any;\r\n  @Input() index: any;\r\n  @Input() message: any;\r\n  @Input() operator: any;\r\n  @Input() contact: any;\r\n\r\n  prevMessage: any;\r\n  nextMessage: any;\r\n  avatar: any;\r\n  renderMessage = true;\r\n  messageList: any[] = [];\r\n\r\n  constructor(private eleRef: ElementRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.operator.id === this.message.senderId) {\r\n      this.replied = true;\r\n      this.avatar = this.operator;\r\n    } else {\r\n      this.replied = false;\r\n      this.avatar = this.contact;\r\n    }\r\n\r\n    if (this.index > 0) {\r\n      this.prevMessage = this.chatData[this.index - 1];\r\n    }\r\n\r\n    if (this.index < (this.chatData.length - 1)) {\r\n      this.nextMessage = this.chatData[this.index + 1];\r\n    }\r\n\r\n    if (this.nextMessage) {\r\n      if (this.nextMessage && this.nextMessage.senderId === this.message.senderId) {\r\n        storedMessages.push(this.message);\r\n        this.renderMessage = false;\r\n      } else if (this.nextMessage.senderId !== this.message.senderId) {\r\n        storedMessages.push(this.message);\r\n\r\n        this.messageList = storedMessages;\r\n        storedMessages = [];\r\n        this.renderMessage = true;\r\n      }\r\n    } else {\r\n      storedMessages.push(this.message);\r\n\r\n      this.messageList = storedMessages;\r\n      storedMessages = [];\r\n      this.renderMessage = true;\r\n    }\r\n\r\n    if(this.renderMessage) {\r\n      this.eleRef.nativeElement.classList.add('dt-chat__item');\r\n    } else {\r\n      this.eleRef.nativeElement.style.display = 'none';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtYXJlYS9jaGF0LWhlYWRlci9jaGF0LWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {Contact} from './../../contact.model';\r\n\r\n@Component({\r\n  selector: 'app-chat-header',\r\n  templateUrl: './chat-header.component.html',\r\n  styleUrls: ['./chat-header.component.scss']\r\n})\r\nexport class ChatHeaderComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__header';\r\n  @Input() contact: Contact;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtc2lkZWJhci9jaGF0LXNpZGViYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, HostBinding, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from './../chat.service';\r\nimport {Contact} from './../contact.model';\r\n\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\n\r\n@Component({\r\n  selector: 'app-chat-sidebar',\r\n  templateUrl: './chat-sidebar.component.html',\r\n  styleUrls: ['./chat-sidebar.component.scss'],\r\n  animations: appAnimations\r\n})\r\nexport class ChatSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  @ViewChild('tabset', {static: false}) tabset: ElementRef;\r\n\r\n  contacts: Contact[] = [];\r\n  recentChats: Contact[] = [];\r\n  activeTab = 'recent';\r\n\r\n  onContactsChanged: Subscription;\r\n  onRecentChatsChanged: Subscription;\r\n  toggleChatSidebarService: Subscription;\r\n  onChatConversationChanged: Subscription;\r\n\r\n  constructor(private chatService: ChatService) {\r\n    // Subscribe to update contacts on changes\r\n    this.onContactsChanged = this.chatService.onContactsChanged.subscribe((contacts: Contact[]) => {\r\n      this.contacts = contacts;\r\n    });\r\n\r\n    // Subscribe to update recentChats on changes\r\n    this.onRecentChatsChanged = this.chatService.onRecentChatsChanged.subscribe((recentChats: Contact[]) => {\r\n      this.recentChats = recentChats;\r\n    });\r\n\r\n    this.toggleChatSidebarService = this.chatService.toggleChatSubject.subscribe(toggleChatSidebar => {\r\n      this.isOpen = toggleChatSidebar;\r\n    });\r\n\r\n    // Subscribe to update conversation on changes\r\n    this.onChatConversationChanged = this.chatService.onChatConversationChanged.subscribe((conversation) => {\r\n      this.isOpen = window.innerWidth > 767;\r\n      this.chatService.toggleChatSubject.next(this.isOpen);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(event) {\r\n    this.isOpen = event;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onRecentChatsChanged.unsubscribe();\r\n    this.toggleChatSidebarService.unsubscribe();\r\n    this.onChatConversationChanged.unsubscribe();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQtc2lkZWJhci9vcGVyYXRvci1wcm9maWxlL29wZXJhdG9yLXByb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {ChatService} from './../../chat.service';\r\nimport {DrawerService} from './../../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-operator-profile',\r\n  templateUrl: './operator-profile.component.html',\r\n  styleUrls: ['./operator-profile.component.scss']\r\n})\r\nexport class OperatorProfileComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__sidebar-header pb-0';\r\n\r\n  profile: any;\r\n  activeMenu: string;\r\n  drawer: any;\r\n  isOpen = false;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onDrawerChanged: Subscription;\r\n  onChatOperatorChanged: Subscription;\r\n  toggleChatSidebarService: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private chatService: ChatService,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.toggleChatSidebarService = this.chatService.toggleChatSubject.subscribe(toggleChatSidebar => {\r\n      this.isOpen = toggleChatSidebar;\r\n    });\r\n\r\n    // Subscribe to update operator on changes\r\n    this.onChatOperatorChanged = this.chatService.onChatOperatorChanged.subscribe((operator) => {\r\n      this.profile = operator;\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n    this.isOpen = !this.isOpen;\r\n    this.chatService.toggleChatSubject.next(this.isOpen);\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onChatOperatorChanged.unsubscribe();\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.toggleChatSidebarService.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2NoYXQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {DynamicDomService} from '@gaxon/services/dynamic-dom.service';\r\n\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\n\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy {\r\n  hoverCard: any;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private dynamicDom: DynamicDomService, private drawerService: DrawerService) {\r\n    this.hoverCard = this.dynamicDom.appendComponentToBody(ContactHoverCardComponent);\r\n\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dynamicDom.destroyCard(this.hoverCard);\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {ChatService} from './chat.service';\r\nimport {ChatComponent} from './chat.component';\r\nimport {ChatSidebarComponent} from './chat-sidebar/chat-sidebar.component';\r\nimport {OperatorProfileComponent} from './chat-sidebar/operator-profile/operator-profile.component';\r\nimport {ChatAreaComponent} from './chat-area/chat-area.component';\r\nimport {ChatConversationComponent} from './chat-area/chat-conversation/chat-conversation.component';\r\nimport {ChatBoxComponent} from './chat-area/chat-box/chat-box.component';\r\nimport {ContactComponent} from './helper-widgets/contact/contact.component';\r\nimport {ContactHoverCardComponent} from './helper-widgets/contact-hover-card/contact-hover-card.component';\r\nimport { ChatHeaderComponent } from './chat-area/chat-header/chat-header.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChatComponent,\r\n    resolve: {\r\n      list: ChatService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    ChatComponent,\r\n    ChatSidebarComponent,\r\n    OperatorProfileComponent,\r\n    ChatAreaComponent,\r\n    ChatConversationComponent,\r\n    ChatBoxComponent,\r\n    ContactComponent,\r\n    ContactHoverCardComponent,\r\n    ChatHeaderComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  entryComponents: [\r\n    ContactHoverCardComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ]\r\n})\r\nexport class ChatModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {Contact} from './contact.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ChatService implements Resolve<any> {\r\n    private contactsUrl = 'api/chat-contacts';  // URL to web api\r\n    private chatConversationUrl = 'api/chat-conversation';  // URL to web api\r\n    private chatOperatorUrl = 'api/chat-operator';  // URL to web api\r\n\r\n    contacts: Contact[];\r\n    currentContact: Contact;\r\n    recentChats: Contact[];\r\n    chatConversation: any;\r\n    chatOperator: any;\r\n    routeParams: any;\r\n    toggleChatSubject: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n    onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onCurrentContactChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n    onRecentChatsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onChatConversationChanged: BehaviorSubject<any> = new BehaviorSubject({});\r\n    onChatOperatorChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n    onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n    onContactHovered: BehaviorSubject<any> = new BehaviorSubject({});\r\n\r\n    constructor(private http: HttpClient, private location: Location) {\r\n    }\r\n\r\n    /**\r\n     * Resolve\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getRecentChats(),\r\n                this.getChatOperator()\r\n            ]).then(() => {\r\n                    /* if (this.routeParams.mailId) {\r\n                      this.setCurrentMail(this.routeParams.mailId);\r\n                    } else {\r\n                      this.setCurrentMail(null);\r\n                    } */\r\n\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all contacts\r\n     * @returns {Promise<Contact[]>}\r\n     */\r\n    getContacts(): Promise<Contact[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.contactsUrl)\r\n                .subscribe((response: any) => {\r\n                    this.contacts = response;\r\n                    this.onContactsChanged.next(this.contacts);\r\n                    resolve(this.contacts);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get recent chats\r\n     * @returns {Promise<Contact[]>}\r\n     */\r\n    getRecentChats(): Promise<Contact[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.contactsUrl + '?recent=true')\r\n                .subscribe((response: any) => {\r\n                    this.recentChats = response;\r\n                    this.onRecentChatsChanged.next(this.recentChats);\r\n                    resolve(this.recentChats);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get Chat Operator\r\n     * @return {Promise<any[]>}\r\n     */\r\n    getChatOperator(): Promise<any[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.chatOperatorUrl)\r\n                .subscribe((operator: any) => {\r\n                    this.chatOperator = operator;\r\n                    this.onChatOperatorChanged.next(this.chatOperator);\r\n                    resolve(this.chatOperator);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get chat conversation by conversation id\r\n     * @param cId\r\n     * @return {Promise<any[]>}\r\n     */\r\n    getChatConversation(cId): Promise<any[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(this.chatConversationUrl + '/' + cId)\r\n                .subscribe((response: any) => {\r\n                    this.chatConversation = response;\r\n                    this.onChatConversationChanged.next(this.chatConversation);\r\n                    resolve(this.chatConversation);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save a conversation\r\n     * @param {any} newMessage\r\n     * @return {Promise<any>}\r\n     */\r\n    saveConversation(newMessage: any) {\r\n        this.chatConversation.conversationData.push(newMessage);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post(this.chatConversationUrl + '/' + this.chatConversation.id, {...this.chatConversation})\r\n                .subscribe(response => {\r\n                    this.getChatConversation(this.chatConversation.id).then(res => {\r\n                        resolve(res);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2RyYXdlci9kcmF3ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'chat-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2RyYXdlci9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jaGF0L2RyYXdlci9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: flex;\\n  position: fixed; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL2NoYXQvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL0M6XFxVc2Vyc1xcdmlub1xcdmlub3RoXFx0cnVzdHByaW1lLXYzLjFcXHRydXN0LXByaW1lLXYzL3NyY1xcYXBwXFxjb250ZW50XFxhcHBzXFxjaGF0XFxoZWxwZXItd2lkZ2V0c1xcY29udGFjdC1ob3Zlci1jYXJkXFxjb250YWN0LWhvdmVyLWNhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9hcHBzL2NoYXQvaGVscGVyLXdpZGdldHMvY29udGFjdC1ob3Zlci1jYXJkL2NvbnRhY3QtaG92ZXItY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcbiJdfQ== */\"","import {Component, ElementRef, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '../../chat.service';\r\nimport {Contact} from './../../contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-hover-card',\r\n  templateUrl: './contact-hover-card.component.html',\r\n  styleUrls: ['./contact-hover-card.component.scss']\r\n})\r\nexport class ContactHoverCardComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'card user-info-card';\r\n  isVisible = false;\r\n  position: any;\r\n  contact: Contact;\r\n  private el: HTMLElement;\r\n  onContactHovered: Subscription;\r\n\r\n  constructor(el: ElementRef, private chatService: ChatService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onContactHovered = this.chatService.onContactHovered\r\n      .subscribe(data => {\r\n\r\n        this.contact = data.contact;\r\n        this.isVisible = data.show;\r\n        this.position = data.position;\r\n        this.setPosition();\r\n      });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.showContactHoveredCard();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.hideContactHoveredCard();\r\n  }\r\n\r\n  /**\r\n   * Show contact hover card\r\n   */\r\n  showContactHoveredCard() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide contact hover card\r\n   */\r\n  hideContactHoveredCard() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactHovered.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Set hover card position\r\n   */\r\n  setPosition() {\r\n    if (this.position && this.isVisible) {\r\n      const windowHeight = window.innerHeight;\r\n\r\n      if (!this.el.style.top) {\r\n        this.el.style.top = (windowHeight / 2) + 'px';\r\n      }\r\n      this.el.style.left = (this.position.left + this.position.width) + 'px';\r\n\r\n      setTimeout(() => {\r\n        const cardHeight = this.el.offsetHeight;\r\n        const cardTotalHeight = cardHeight + this.position.top + 20;\r\n        if (cardTotalHeight > windowHeight) {\r\n          this.el.style.top = (windowHeight - (cardHeight + 20)) + 'px';\r\n        } else if (cardHeight > 0) {\r\n          this.el.style.top = this.position.top + 'px';\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '../../chat.service';\r\nimport {Contact} from './../../contact.model';\r\n\r\n@Component({\r\n  selector: 'chat-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-contact';\r\n  @HostBinding('class.active') isActive = false;\r\n  @Input() contact: Contact;\r\n  contactCardData: any = {show: false};\r\n  private el: HTMLElement;\r\n\r\n  onChatConversationChanged: Subscription;\r\n\r\n  constructor(el: ElementRef, private chatService: ChatService) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update conversation on changes\r\n    this.onChatConversationChanged = this.chatService.onChatConversationChanged.subscribe((conversation) => {\r\n      if (conversation.id && conversation.conversationData.length > 0) {\r\n        this.isActive = conversation.id === this.contact.id;\r\n      } else {\r\n        this.isActive = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.chatService.getChatConversation(this.contact.id).then((data) => {\r\n      this.chatService.onCurrentContactChanged.next(this.contact);\r\n    });\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.contactCardData.position = this.el.getBoundingClientRect();\r\n    this.contactCardData.show = true;\r\n    this.contactCardData.contact = this.contact;\r\n\r\n    this.chatService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.contactCardData.show = false;\r\n    this.chatService.onContactHovered.next(this.contactCardData);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onChatConversationChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"chat-chat-module-es5.js"}