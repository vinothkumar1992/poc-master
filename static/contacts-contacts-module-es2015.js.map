{"version":3,"sources":["./src/app/content/apps/contacts/contacts-header/contacts-header.component.html","./src/app/content/apps/contacts/contacts-header/search-bar/search-bar.component.html","./src/app/content/apps/contacts/contacts-list/contact-list-header/contact-list-header.component.html","./src/app/content/apps/contacts/contacts-list/contact-list-item/contact-list-item.component.html","./src/app/content/apps/contacts/contacts-list/contacts-list.component.html","./src/app/content/apps/contacts/contacts-sidebar/contacts-sidebar.component.html","./src/app/content/apps/contacts/contacts.component.html","./src/app/content/apps/contacts/drawer/drawer.component.html","./src/app/content/apps/contacts/drawer/notifications/notifications.component.html","./src/app/content/apps/contacts/drawer/search/search.component.html","./src/app/content/apps/contacts/edit-contact/edit-contact.component.html","./src/app/content/apps/contacts/contact.model.ts","./src/app/content/apps/contacts/contacts-header/contacts-header.component.scss","./src/app/content/apps/contacts/contacts-header/contacts-header.component.ts","./src/app/content/apps/contacts/contacts-header/search-bar/search-bar.component.ts","./src/app/content/apps/contacts/contacts-list/contact-list-header/contact-list-header.component.scss","./src/app/content/apps/contacts/contacts-list/contact-list-header/contact-list-header.component.ts","./src/app/content/apps/contacts/contacts-list/contact-list-item/contact-list-item.component.scss","./src/app/content/apps/contacts/contacts-list/contact-list-item/contact-list-item.component.ts","./src/app/content/apps/contacts/contacts-list/contacts-list.component.scss","./src/app/content/apps/contacts/contacts-list/contacts-list.component.ts","./src/app/content/apps/contacts/contacts-sidebar/contacts-sidebar.component.ts","./src/app/content/apps/contacts/contacts.component.scss","./src/app/content/apps/contacts/contacts.component.ts","./src/app/content/apps/contacts/contacts.module.ts","./src/app/content/apps/contacts/contacts.service.ts","./src/app/content/apps/contacts/drawer/drawer.component.scss","./src/app/content/apps/contacts/drawer/drawer.component.ts","./src/app/content/apps/contacts/drawer/notifications/notifications.component.scss","./src/app/content/apps/contacts/drawer/notifications/notifications.component.ts","./src/app/content/apps/contacts/drawer/search/search.component.scss","./src/app/content/apps/contacts/drawer/search/search.component.ts","./src/app/content/apps/contacts/edit-contact/edit-contact.component.scss","./src/app/content/apps/contacts/edit-contact/edit-contact.component.ts"],"names":[],"mappings":"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","file":"contacts-contacts-module-es2015.js","sourcesContent":["export default \"<contact-search-bar></contact-search-bar>\\r\\n\\r\\n<!-- Dropdown -->\\r\\n<div class=\\\"ml-auto dt-notification\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n  <!-- Dropdown Button -->\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"no-arrow\\\" ngbDropdownToggle>\\r\\n    <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\" size=\\\"1x\\\" class=\\\"dt-icon-alert\\\"></gx-icon>\\r\\n  </a>\\r\\n  <!-- /dropdown button -->\\r\\n\\r\\n  <!-- Dropdown Menu -->\\r\\n  <div ngbDropdownMenu class=\\\"dropdown-menu-media\\\">\\r\\n    <!-- Dropdown Menu Header -->\\r\\n    <div class=\\\"dropdown-menu-header\\\">\\r\\n      <h4 class=\\\"title\\\">Notifications (9)</h4>\\r\\n\\r\\n      <div class=\\\"ml-auto action-area\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\">Mark All Read</a> <a class=\\\"ml-2\\\" href=\\\"javascript:void(0)\\\">\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /dropdown menu header -->\\r\\n\\r\\n    <!-- Dropdown Menu Body -->\\r\\n    <div class=\\\"dropdown-menu-body position-relative\\\" perfectScrollbar>\\r\\n\\r\\n      <div class=\\\"h-auto\\\">\\r\\n        <!-- Media -->\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n          <!-- Avatar -->\\r\\n          <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n          <!-- avatar -->\\r\\n\\r\\n          <!-- Media Body -->\\r\\n          <span class=\\\"media-body\\\">\\r\\n            <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n            <span class=\\\"meta-date\\\">\\r\\n              <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n                       [name]=\\\"notification.icon.name\\\"\\r\\n                       [ngClass]=\\\"notification.icon.color\\\"\\r\\n                       [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n              {{notification.time}}\\r\\n            </span>\\r\\n          </span>\\r\\n          <!-- /media body -->\\r\\n\\r\\n        </a>\\r\\n        <!-- /media -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Dropdown Menu Footer -->\\r\\n    <div class=\\\"dropdown-menu-footer\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"card-link\\\"> See All\\r\\n        <gx-icon name=\\\"arrow-right\\\" [fw]=\\\"true\\\"></gx-icon></a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu footer -->\\r\\n  </div>\\r\\n  <!-- /dropdown menu -->\\r\\n\\r\\n</div>\\r\\n<!-- /dropdown -->\\r\\n\"","export default \"<form>\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control border-0 shadow-none bg-focus form-control-sm\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in contacts...\\\">\\r\\n  <span class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></span>\\r\\n</form>\\r\\n\"","export default \"<!-- Action Bar -->\\r\\n<div class=\\\"d-flex flex-wrap\\\">\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown class=\\\"mr-auto\\\">\\r\\n\\r\\n    <!-- Checkbox -->\\r\\n    <gx-checkbox class=\\\"mr-3\\\"\\r\\n                 [gxModel]=\\\"hasSelectedContacts\\\"\\r\\n                 [indeterminate]=\\\"isIndeterminate\\\"\\r\\n                 (gxInputChange)=\\\"toggleSelectAll()\\\"></gx-checkbox>\\r\\n    <!-- /checkbox -->\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"text-dark\\\" ngbDropdownToggle> {{selected}} </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectContacts()\\\">All</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deselectContacts()\\\">None</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Starred', 'starred', true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Unstarred', 'starred', false)\\\">Unstarred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Favourite', 'favourite', true)\\\">Favourite</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"\\r\\n         (click)=\\\"selectContacts('Unfavourite', 'favourite', false)\\\">Unfavourite</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n\\r\\n  <!-- Button Group -->\\r\\n  <div *ngIf=\\\"hasSelectedContacts\\\" class=\\\"btn-group btn-group-sm mr-4 mr-lg-7 mb-1\\\" role=\\\"group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setPropertyOnSelectedContacts('favourite', true)\\\">\\r\\n      <gx-icon name=\\\"heart-o\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setPropertyOnSelectedContacts('starred', true)\\\">\\r\\n      <gx-icon name=\\\"star-fill\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"setPropertyOnSelectedContacts('suggested', true)\\\">\\r\\n      <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\" size=\\\"lg\\\"></gx-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- /button group -->\\r\\n\\r\\n  <!-- Dropdown -->\\r\\n  <div *ngIf=\\\"hasSelectedContacts\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n\\r\\n    <!-- Dropdown Button -->\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-dark btn-sm\\\" ngbDropdownToggle>\\r\\n      More\\r\\n    </a>\\r\\n    <!-- /dropdown button -->\\r\\n\\r\\n    <!-- Dropdown Menu -->\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('favourite', false)\\\">Unfavourite</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('favourite', true)\\\">Favourite</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('suggested', true)\\\">Add\\r\\n        in Suggestions</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('starred', true)\\\">Starred</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"setPropertyOnSelectedContacts('starred', false)\\\">Unstarred</a>\\r\\n    </div>\\r\\n    <!-- /dropdown menu -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /action bar -->\\r\\n\"","export default \"<!-- Checkbox -->\\r\\n<gx-checkbox class=\\\"mr-5\\\" [gxModel]=\\\"selected\\\" (gxInputChange)=\\\"onSelectedChange($event)\\\"></gx-checkbox>\\r\\n<!-- /checkbox -->\\r\\n\\r\\n<gx-star class=\\\"mr-5\\\" [gxModel]=\\\"contact.starred\\\" (gxInputChange)=\\\"onToggleStarred($event)\\\"></gx-star>\\r\\n\\r\\n<gx-avatar [user]=\\\"contact\\\" class=\\\"mr-4\\\"></gx-avatar>\\r\\n\\r\\n<!-- Module Content -->\\r\\n<div class=\\\"dt-module__list-item-content\\\">\\r\\n  <div class=\\\"user-detail\\\">\\r\\n    <span class=\\\"user-name\\\">{{contact.first_name}}</span>\\r\\n    <span class=\\\"dt-separator-v\\\">&nbsp;</span>\\r\\n    <span class=\\\"designation\\\">{{contact.designation | htmlToPlainText | slice:0:30}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"text-light-gray\\\">\\r\\n    <span class=\\\"d-inline-block mr-3\\\">{{contact.email}}</span>\\r\\n    <span class=\\\"d-inline-block\\\">{{contact.phone}}</span>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /module content -->\\r\\n\\r\\n<!-- Module Info -->\\r\\n<div class=\\\"dt-module__list-item-info\\\">\\r\\n  <!-- Dropdown -->\\r\\n  <div ngbDropdown placement=\\\"bottom-right\\\">\\r\\n    <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n      <gx-icon name=\\\"vertical-more\\\" [fw]=\\\"true\\\" size=\\\"xl\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <div ngbDropdownMenu>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\"  (click)=\\\"editContact(contact)\\\">\\r\\n        <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Edit\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deleteContact(contact)\\\">\\r\\n        <gx-icon name=\\\"trash\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Delete\\r\\n      </a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onFavouriteContact()\\\">\\r\\n        <gx-icon name=\\\"heart-o\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n        Favourite List\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /dropdown -->\\r\\n</div>\\r\\n<!-- /module info -->\\r\\n\"","export default \"<!-- Module Content Inner -->\\r\\n<div class=\\\"dt-module__content-inner\\\">\\r\\n  <app-contact-list-header></app-contact-list-header>\\r\\n\\r\\n  <!-- Module List -->\\r\\n  <div class=\\\"dt-module__list\\\">\\r\\n\\r\\n    <div *ngIf=\\\"contacts.length == 0\\\" class=\\\"dt-module__list-item\\\">\\r\\n      <p class=\\\"empty-result\\\">No record found.</p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Module Item -->\\r\\n    <app-contact-list-item *ngFor=\\\"let contact of contacts | filter: searchQuery\\\"\\r\\n                           [contact]=\\\"contact\\\"></app-contact-list-item>\\r\\n    <!-- /Module Item -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Module List -->\\r\\n</div>\\r\\n\"","export default \"<!-- Sidebar Header -->\\r\\n<div class=\\\"dt-module__sidebar-header border-bottom\\\">\\r\\n  <div class=\\\"d-none d-md-flex align-items-center\\\">\\r\\n    <gx-icon name=\\\"user-account\\\" size=\\\"1x\\\" class=\\\"mr-3 text-dark\\\"></gx-icon>\\r\\n    <span class=\\\"h3 mb-0\\\">Contacts</span>\\r\\n  </div>\\r\\n\\r\\n  <!-- App Quick Menu -->\\r\\n  <div class=\\\"quick-menu-list d-md-none\\\">\\r\\n    <a *ngIf=\\\"hiddenPageHeader\\\"\\r\\n       href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu mr-auto d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':settings.activeNavDrawer}\\\"\\r\\n       (click)=\\\"toggleNavigation($event)\\\">\\r\\n      <gx-icon name=\\\"menu\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <!-- Search Box -->\\r\\n    <form class=\\\"search-box d-md-none\\\" *ngIf=\\\"!hiddenPageHeader\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"search\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Search in app...\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"search-icon\\\">\\r\\n        <gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon>\\r\\n      </button>\\r\\n    </form>\\r\\n    <!-- /search box -->\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'search', 'd-none d-md-block': !hiddenPageHeader}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'search')\\\">\\r\\n      <gx-icon name=\\\"search\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"quick-menu\\\" (click)=\\\"onClickNewContact()\\\">\\r\\n      <gx-icon name=\\\"contacts\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu\\\"\\r\\n       [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\"\\r\\n       (click)=\\\"onClickMenu($event, 'notifications')\\\">\\r\\n      <gx-icon name=\\\"notification2\\\"></gx-icon>\\r\\n    </a>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\"\\r\\n       class=\\\"quick-menu d-md-none\\\"\\r\\n       [ngClass]=\\\"{'active':isOpen}\\\"\\r\\n       (click)=\\\"toggleOpen($event)\\\">\\r\\n      <gx-icon name=\\\"{{hiddenPageHeader? 'vertical-more': 'menu'}}\\\"></gx-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- /app quick menu -->\\r\\n</div>\\r\\n<!-- /sidebar header -->\\r\\n\\r\\n<!-- Sidebar Menu -->\\r\\n<div class=\\\"dt-module__sidebar-content position-relative\\\" [@collapseAppSidebar]=\\\"isOpen\\\" perfectScrollbar>\\r\\n  <!-- Sidebar Content Inner -->\\r\\n  <div class=\\\"dt-module__sidebar-content-inner\\\">\\r\\n    <!-- Button -->\\r\\n    <div class=\\\"action-area mt-5 mb-7 d-none d-md-block\\\">\\r\\n      <a href=\\\"javascript:void(0)\\\"\\r\\n         class=\\\"btn btn-shadow btn-default compose-btn btn-rounded\\\"\\r\\n         (click)=\\\"onClickNewContact()\\\">\\r\\n        <gx-icon name=\\\"contacts\\\" class=\\\"mr-2\\\" [fw]=\\\"true\\\"></gx-icon>Add Contact\\r\\n      </a>\\r\\n    </div>\\r\\n    <!-- /button -->\\r\\n\\r\\n    <!-- Sidebar Navigation -->\\r\\n    <ul class=\\\"dt-module-side-nav\\\">\\r\\n\\r\\n      <!-- Menu Header -->\\r\\n      <li class=\\\"dt-module-side-nav__header\\\">\\r\\n        <span class=\\\"dt-module-side-nav__text\\\">Contacts</span>\\r\\n      </li>\\r\\n      <!-- /menu header -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/all'\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">All Contacts</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/favourite'\\\">\\r\\n          <gx-icon name=\\\"heart-o\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Favourite List</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/suggested'\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Suggestions</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"dt-module-side-nav__link\\\" [routerLink]=\\\"'/' + settings.layout + '/apps/contacts/starred'\\\">\\r\\n          <gx-icon name=\\\"star-o\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Starred contacts</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n      <!-- Menu Item -->\\r\\n      <li class=\\\"dt-module-side-nav__item\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"dt-module-side-nav__link\\\">\\r\\n          <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          <span class=\\\"dt-module-side-nav__text\\\">Settings</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- /menu item -->\\r\\n\\r\\n    </ul>\\r\\n    <!-- /sidebar navigation -->\\r\\n  </div>\\r\\n  <!-- /sidebar content inner -->\\r\\n</div>\\r\\n<!-- /sidebar Menu -->\\r\\n\"","export default \"<!-- Grid -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Grid Item -->\\r\\n  <div class=\\\"col-xl-12\\\">\\r\\n\\r\\n    <!-- Module -->\\r\\n    <div class=\\\"dt-module\\\">\\r\\n\\r\\n      <!-- Module Sidebar -->\\r\\n      <app-contacts-sidebar></app-contacts-sidebar>\\r\\n      <!-- /Module Sidebar -->\\r\\n\\r\\n      <!-- Module Container -->\\r\\n      <div class=\\\"dt-module__container\\\">\\r\\n\\r\\n        <!-- Module Header -->\\r\\n        <app-contacts-header></app-contacts-header>\\r\\n        <!-- /Module Header -->\\r\\n\\r\\n        <!-- Module Content -->\\r\\n        <app-contacts-list perfectScrollbar></app-contacts-list>\\r\\n        <!-- Module Content -->\\r\\n\\r\\n      </div>\\r\\n      <!-- /Module Container -->\\r\\n\\r\\n      <!-- Module Drawer -->\\r\\n      <contact-drawer [ngClass]=\\\"{'open':drawer.isOpen}\\\"></contact-drawer>\\r\\n      <div class=\\\"dt-backdrop\\\" *ngIf=\\\"drawer.isOpen\\\" (click)=\\\"closeDrawer($event)\\\"></div>\\r\\n      <!-- Module Drawer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /Module -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /Grid Item -->\\r\\n\\r\\n</div>\\r\\n<!-- /Grid -->\\r\\n\"","export default \"<!-- Module Drawer Inner -->\\r\\n<div class=\\\"dt-module__drawer-inner\\\">\\r\\n\\r\\n  <div class=\\\"dt-module__drawer-header\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"d-inline-block\\\" (click)=\\\"closeDrawer($event)\\\">\\r\\n      <gx-icon name=\\\"arrow-long-left\\\" size=\\\"2x\\\" class=\\\"mr-3\\\"></gx-icon>\\r\\n      <span class=\\\"align-middle\\\">Back</span>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actionable Drawer -->\\r\\n  <div class=\\\"dt-actionable-drawer\\\">\\r\\n\\r\\n    <!-- Menu Bar -->\\r\\n    <div class=\\\"dt-action-bar\\\">\\r\\n\\r\\n      <!-- Action Menu -->\\r\\n      <ul class=\\\"dt-action-nav\\\">\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'notifications'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'notifications')\\\">\\r\\n            <gx-icon name=\\\"notification2\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n        <!-- Menu Item -->\\r\\n        <li class=\\\"dt-action-nav__item\\\" [ngClass]=\\\"{'active':activeMenu == 'search'}\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\"\\r\\n             class=\\\"dt-action-nav__link\\\"\\r\\n             (click)=\\\"onSelectMenu($event, 'search')\\\">\\r\\n            <gx-icon name=\\\"search\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n        <!-- /menu item -->\\r\\n\\r\\n      </ul>\\r\\n      <!-- /action menu -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /menu bar -->\\r\\n\\r\\n    <!-- Drawer Content Area -->\\r\\n    <div class=\\\"dt-action-content-wrapper\\\">\\r\\n\\r\\n      <gx-loader [ngClass]=\\\"{'active':showLoader}\\\"></gx-loader>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'search'}\\\" perfectScrollbar>\\r\\n        <todo-search></todo-search>\\r\\n      </div>\\r\\n      <div class=\\\"dt-action-content fade position-relative\\\" [ngClass]=\\\"{'show':!showLoader && activeMenu == 'notifications'}\\\" perfectScrollbar>\\r\\n        <todo-notifications></todo-notifications>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- /drawer content area -->\\r\\n\\r\\n  </div>\\r\\n  <!-- /actionable drawer -->\\r\\n\\r\\n</div>\\r\\n<!-- /module drawer inner -->\\r\\n\"","export default \"<div class=\\\"d-flex align-items-center mb-6\\\">\\r\\n  <h5 class=\\\"mb-0\\\">Notifications ({{notifications.length}})</h5>\\r\\n\\r\\n  <div class=\\\"ml-auto action-area\\\">\\r\\n    <a href=\\\"javascript:void(0)\\\">Mark All Read</a>\\r\\n\\r\\n    <!-- Dropdown -->\\r\\n    <span class=\\\"ml-2 d-inline-block\\\" ngbDropdown placement=\\\"bottom-right\\\">\\r\\n      <a class=\\\"no-arrow\\\" href=\\\"javascript:void(0)\\\" ngbDropdownToggle>\\r\\n        <gx-icon name=\\\"settings\\\" size=\\\"lg\\\" class=\\\"text-light-gray\\\"></gx-icon>\\r\\n      </a>\\r\\n\\r\\n      <span ngbDropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"editors\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Edit\\r\\n        </a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Contact List</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">\\r\\n          <gx-icon name=\\\"heart\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n          Favourite List\\r\\n        </a>\\r\\n      </span>\\r\\n    </span>\\r\\n    <!-- /dropdown -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Media -->\\r\\n<a href=\\\"javascript:void(0)\\\" class=\\\"media\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n\\r\\n  <!-- Avatar -->\\r\\n  <gx-avatar [user]=\\\"notification\\\" [charLength]=\\\"0\\\" class=\\\"mr-3\\\"></gx-avatar>\\r\\n  <!-- avatar -->\\r\\n\\r\\n  <!-- Media Body -->\\r\\n  <span class=\\\"media-body\\\">\\r\\n    <span class=\\\"message\\\" [innerHTML]=\\\"notification.message\\\"></span>\\r\\n    <span class=\\\"meta-date\\\">\\r\\n      <gx-icon *ngIf=\\\"notification.icon.name\\\"\\r\\n               [name]=\\\"notification.icon.name\\\"\\r\\n               [ngClass]=\\\"notification.icon.color\\\"\\r\\n               [fw]=\\\"true\\\" class=\\\"mr-1\\\"></gx-icon>\\r\\n      {{notification.time}}\\r\\n    </span>\\r\\n  </span>\\r\\n  <!-- /media body -->\\r\\n\\r\\n</a>\\r\\n<!-- /media -->\\r\\n\"","export default \"<!-- Search Box -->\\r\\n<form class=\\\"search-box right-side-icon mw-100 mb-8\\\">\\r\\n  <input type=\\\"search\\\"\\r\\n         class=\\\"form-control form-control-lg\\\"\\r\\n         [formControl]=\\\"searchQuery\\\"\\r\\n         placeholder=\\\"Search in mails...\\\">\\r\\n  <button type=\\\"submit\\\" class=\\\"search-icon\\\"><gx-icon name=\\\"search\\\" size=\\\"lg\\\"></gx-icon></button>\\r\\n</form>\\r\\n<!-- /search box -->\\r\\n\\r\\n<h4>Recently Viewed</h4>\\r\\n\\r\\n<!-- Search Result-->\\r\\n<div class=\\\"search-result\\\" *ngFor=\\\"let message of messages | filter: searchText\\\">\\r\\n  <a href=\\\"javascript:void(0)\\\" class=\\\"dt-avatar-wrapper\\\">\\r\\n    <!-- Avatar -->\\r\\n    <gx-avatar [user]=\\\"message\\\" [charLength]=\\\"0\\\" class=\\\"font-italic\\\"></gx-avatar>\\r\\n    <!-- /avatar -->\\r\\n\\r\\n    <!-- Avatar Info -->\\r\\n    <span class=\\\"dt-avatar-info\\\">\\r\\n      <span class=\\\"dt-avatar-name\\\">{{message.name}}</span>\\r\\n      <span class=\\\"f-12\\\" [innerHTML]=\\\"message.message\\\"></span>\\r\\n    </span>\\r\\n    <!-- /avatar info -->\\r\\n  </a>\\r\\n</div>\\r\\n<!-- /search result-->\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <gx-icon name=\\\"remove\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-lg-4 text-center text-center order-lg-2\\\">\\r\\n      <img *ngIf=\\\"contact.thumb\\\" class=\\\"ml-lg-3 mb-4 mb-lg-0 dt-avatar size-120\\\" [src]=\\\"contact.thumb\\\" alt=\\\"Avatar\\\">\\r\\n      <img *ngIf=\\\"!contact.thumb\\\" class=\\\"ml-lg-3 mb-4 mb-lg-0 dt-avatar size-120\\\" src=\\\"assets/images/placeholder.jpg\\\"\\r\\n           alt=\\\"Avatar\\\">\\r\\n\\r\\n      <div class=\\\"form-group col-lg-12 mt-4\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"custom-file\\\">\\r\\n            <input type=\\\"file\\\"\\r\\n                   class=\\\"custom-file-input\\\"\\r\\n                   id=\\\"imageUrl\\\"\\r\\n                   name=\\\"imageUrl\\\"\\r\\n                   accept=\\\"image/*\\\"\\r\\n                   (change)=\\\"handleInputChange($event)\\\">\\r\\n            <label class=\\\"custom-file-label text-left\\\" for=\\\"imageUrl\\\">{{filename}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 order-lg-1\\\">\\r\\n      <form #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"First Name\\\"\\r\\n                 name=\\\"fisrt_name\\\"\\r\\n                 [(ngModel)]=\\\"contact.first_name\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Last Name\\\"\\r\\n                 name=\\\"last_name\\\"\\r\\n                 [(ngModel)]=\\\"contact.last_name\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Email\\\"\\r\\n                 name=\\\"email\\\"\\r\\n                 [(ngModel)]=\\\"contact.email\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Phone\\\"\\r\\n                 name=\\\"phone\\\"\\r\\n                 [(ngModel)]=\\\"contact.phone\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Designation\\\"\\r\\n                 name=\\\"designation\\\"\\r\\n                 [(ngModel)]=\\\"contact.designation\\\"\\r\\n                 required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <textarea type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"Designation\\\"\\r\\n                    name=\\\"bio\\\"\\r\\n                    [(ngModel)]=\\\"contact.bio\\\"></textarea>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer justify-content-start\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"contactForm.invalid\\\" (click)=\\\"onFormSubmit()\\\">\\r\\n    <gx-icon name=\\\"contacts\\\" [fw]=\\\"true\\\"></gx-icon>\\r\\n    <span> Save Contact </span>\\r\\n  </button>\\r\\n</div>\\r\\n\"","export class Contact {\r\n  id: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  phone: string;\r\n  designation: string;\r\n  starred: boolean;\r\n  favourite: boolean;\r\n  suggested: boolean;\r\n  thumb: string;\r\n  thumb_placeholder: string;\r\n  bio: string;\r\n  location: string;\r\n  connections: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy1oZWFkZXIvY29udGFjdHMtaGVhZGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-contacts-header',\r\n  templateUrl: './contacts-header.component.html',\r\n  styleUrls: ['./contacts-header.component.scss']\r\n})\r\nexport class ContactsHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__header d-none d-md-flex';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n}\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {ContactsService} from './../../contacts.service';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'contact-search-bar',\r\n  templateUrl: './search-bar.component.html'\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'search-box ml-n4';\r\n  searchQuery: FormControl;\r\n\r\n  constructor(private contactService: ContactsService) {\r\n    this.searchQuery = new FormControl('');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.contactService.onSearchQueryChanged.next(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9hcHBzL2NvbnRhY3RzL2NvbnRhY3RzLWxpc3QvY29udGFjdC1saXN0LWhlYWRlci9DOlxcVXNlcnNcXHZpbm9cXHZpbm90aFxcdHJ1c3RwcmltZS12My4xXFx0cnVzdC1wcmltZS12My9zcmNcXGFwcFxcY29udGVudFxcYXBwc1xcY29udGFjdHNcXGNvbnRhY3RzLWxpc3RcXGNvbnRhY3QtbGlzdC1oZWFkZXJcXGNvbnRhY3QtbGlzdC1oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb250ZW50L2FwcHMvY29udGFjdHMvY29udGFjdHMtbGlzdC9jb250YWN0LWxpc3QtaGVhZGVyL2NvbnRhY3QtbGlzdC1oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4iXX0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ContactsService} from './../../contacts.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-list-header',\r\n  templateUrl: './contact-list-header.component.html',\r\n  styleUrls: ['./contact-list-header.component.scss']\r\n})\r\nexport class ContactListHeaderComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'px-1 pb-4 border-bottom border-w-2 mb-1 mt-n1';\r\n  hasSelectedContacts: boolean;\r\n  isIndeterminate: boolean;\r\n  onSelectedContactsChanged: Subscription;\r\n  selected = 'None';\r\n\r\n  constructor(private contactService: ContactsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedContactsChanged =\r\n      this.contactService.onSelectedContactsChanged\r\n        .subscribe(selectedContacts => {\r\n\r\n          setTimeout(() => {\r\n            this.hasSelectedContacts = selectedContacts.length > 0;\r\n            this.isIndeterminate = (selectedContacts.length !== this.contactService.contacts.length && selectedContacts.length > 0);\r\n\r\n            if (selectedContacts.length === 0) {\r\n              this.selected = 'None';\r\n            } else if (selectedContacts.length === this.contactService.contacts.length) {\r\n              this.selected = 'All';\r\n            }\r\n          }, 0);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Toggle select all contacts\r\n   */\r\n  toggleSelectAll() {\r\n    this.contactService.toggleSelectAll();\r\n  }\r\n\r\n  /**\r\n   * Select contacts by filter\r\n   * @param selected\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectContacts(selected?, filterParameter?, filterValue?) {\r\n    this.selected = (selected) ? selected : this.selected;\r\n    this.contactService.selectContacts(filterParameter, filterValue);\r\n  }\r\n\r\n  /**\r\n   * Deselect all contacts\r\n   */\r\n  deselectContacts() {\r\n    this.contactService.deselectContacts();\r\n  }\r\n\r\n  /**\r\n   * Change folder to selected contacts\r\n   * @param property\r\n   * @param value\r\n   */\r\n  setPropertyOnSelectedContacts(property, value) {\r\n    this.contactService.setPropertyOnSelectedContacts(property, value);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onSelectedContactsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy1saXN0L2NvbnRhY3QtbGlzdC1pdGVtL2NvbnRhY3QtbGlzdC1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {Contact} from './../../contact.model';\r\nimport {ContactsService} from './../../contacts.service';\r\nimport {EditContactComponent} from './../../edit-contact/edit-contact.component';\r\n  '';\r\n\r\n@Component({\r\n  selector: 'app-contact-list-item',\r\n  templateUrl: './contact-list-item.component.html',\r\n  styleUrls: ['./contact-list-item.component.scss']\r\n})\r\nexport class ContactListItemComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-module__list-item';\r\n  @HostBinding('class.selected') selected: boolean;\r\n  @Input() contact: Contact;\r\n  onSelectedContactsChanged: Subscription;\r\n\r\n  constructor(private contactService: ContactsService, private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update SelectedMails on changes\r\n    this.onSelectedContactsChanged =\r\n      this.contactService.onSelectedContactsChanged\r\n        .subscribe(selectedContacts => {\r\n          this.selected = selectedContacts.find((contact: Contact) => {\r\n            return contact.id === this.contact.id;\r\n          });\r\n        });\r\n  }\r\n\r\n  onSelectedChange(event) {\r\n    this.selected = event;\r\n    this.contactService.toggleSelectedContact(this.contact.id);\r\n  }\r\n\r\n  /**\r\n   * On toggle starred\r\n   */\r\n  onToggleStarred(event) {\r\n    this.contact.starred = event;\r\n\r\n    this.contactService.saveContact(this.contact);\r\n  }\r\n\r\n  /**\r\n   * Edit a contact\r\n   * @param {Contact} contact\r\n   */\r\n  editContact(contact: Contact) {\r\n    const modalRef = this.modalService.open(EditContactComponent, { size: 'lg' });\r\n    modalRef.componentInstance.contact = contact;\r\n    modalRef.componentInstance.title = 'Edit Contact';\r\n  }\r\n\r\n  /**\r\n   * Delete a contact\r\n   * @param {Contact} contact\r\n   */\r\n  deleteContact(contact: Contact) {\r\n    this.contactService.deleteContact(contact.id);\r\n  }\r\n\r\n  /**\r\n   * Add contact in Favourite List\r\n   */\r\n  onFavouriteContact() {\r\n    this.contact.favourite = true;\r\n\r\n    this.contactService.saveContact(this.contact);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onSelectedContactsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy1saXN0L2NvbnRhY3RzLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {ContactsService} from './../contacts.service';\r\nimport {Contact} from './../contact.model';\r\nimport {PerfectScrollbarDirective} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-contacts-list',\r\n  templateUrl: './contacts-list.component.html',\r\n  styleUrls: ['./contacts-list.component.scss']\r\n})\r\nexport class ContactsListComponent implements OnInit {\r\n  @HostBinding('class') classlist = 'dt-module__content position-relative ps';\r\n\r\n  public contacts: Contact[] = [];\r\n  public searchQuery = '';\r\n\r\n  onContactsChanged: Subscription;\r\n  onSearchQueryChanged: Subscription;\r\n\r\n  @ViewChild(PerfectScrollbarDirective, {static: false}) directiveRef?: PerfectScrollbarDirective;\r\n\r\n  constructor(private contactService: ContactsService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to update mails on changes\r\n    this.onContactsChanged = this.contactService.onContactsChanged\r\n      .subscribe(contacts => {\r\n        this.contacts = contacts;\r\n\r\n        setTimeout(() => {\r\n          this.scrollToBottom();\r\n        }, 300);\r\n      });\r\n\r\n    // Subscribe to update search keywords on changes\r\n    this.onSearchQueryChanged = this.contactService.onSearchQueryChanged\r\n      .subscribe(searchStr => {\r\n        this.searchQuery = searchStr;\r\n      });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.directiveRef) {\r\n      this.directiveRef.update();\r\n      this.directiveRef.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onContactsChanged.unsubscribe();\r\n    this.onSearchQueryChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {Component, HostBinding, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Subscription} from 'rxjs';\r\nimport {appAnimations} from '@gaxon/mix/animations';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\nimport {SettingsService} from '@app/settings/settings.service';\r\nimport {GxHelper} from '@gaxon/helpers';\r\nimport {EditContactComponent} from './../edit-contact/edit-contact.component';\r\nimport {Contact} from './../contact.model';\r\n\r\n@Component({\r\n  selector: 'app-contacts-sidebar',\r\n  templateUrl: './contacts-sidebar.component.html',\r\n  animations: appAnimations\r\n})\r\nexport class ContactsSidebarComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classNames = 'dt-module__sidebar';\r\n  @HostBinding('class.active') isOpen = false;\r\n\r\n  activeMenu: string;\r\n  drawer: any;\r\n  settings: any;\r\n  hiddenPageHeader: boolean;\r\n  headerLessLayout = ['modern', 'back-office', 'back-office-mini'];\r\n\r\n  onDrawerChanged: Subscription;\r\n  onSettingChanged: Subscription;\r\n\r\n  constructor(private modalService: NgbModal,\r\n              private drawerService: DrawerService,\r\n              private settingService: SettingsService,\r\n              private router: Router) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n\r\n    this.onSettingChanged = this.settingService.onSettingChanged.subscribe(\r\n      (newSettings) => {\r\n        this.settings = newSettings;\r\n        this.hiddenPageHeader = this.headerLessLayout.includes(this.settings.layout);\r\n      }\r\n    );\r\n\r\n    router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.isOpen = window.innerWidth > 767;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isOpen = event.target.innerWidth > 767;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // display app sidebar\r\n    this.isOpen = window.innerWidth > 767;\r\n  }\r\n\r\n  onClickNewContact() {\r\n    const modalRef = this.modalService.open(EditContactComponent, {size: 'lg', windowClass: 'contact-modal'});\r\n    modalRef.componentInstance.contact = this.createNewContact();\r\n  }\r\n\r\n  createNewContact() {\r\n    const newContact = new Contact();\r\n    newContact.id = GxHelper.generateGUID();\r\n\r\n    return newContact;\r\n  }\r\n\r\n  /**\r\n   * On Click Menu\r\n   */\r\n  onClickMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawer.isOpen = true;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  /**\r\n   * Toggle collapse\r\n   *\r\n   * @param ev\r\n   */\r\n  toggleOpen(ev) {\r\n    ev.preventDefault();\r\n\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Toggle main navigation\r\n   * @param event\r\n   */\r\n  toggleNavigation(event) {\r\n    event.preventDefault();\r\n\r\n    this.settings.activeNavDrawer = !this.settings.activeNavDrawer;\r\n    this.settingService.setSettings(this.settings);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n    this.onSettingChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9jb250YWN0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {DrawerService} from './../drawer.service';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.scss']\r\n})\r\nexport class ContactsComponent implements OnInit, OnDestroy {\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer) => {\r\n      this.drawer = drawer;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@gaxon/modules';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {ContactsService} from './contacts.service';\r\nimport {ContactsComponent} from './contacts.component';\r\nimport {ContactsListComponent} from './contacts-list/contacts-list.component';\r\nimport {ContactListItemComponent} from './contacts-list/contact-list-item/contact-list-item.component';\r\nimport {ContactsSidebarComponent} from './contacts-sidebar/contacts-sidebar.component';\r\nimport {ContactsHeaderComponent} from './contacts-header/contacts-header.component';\r\nimport {SearchBarComponent} from './contacts-header/search-bar/search-bar.component';\r\nimport { ContactListHeaderComponent } from './contacts-list/contact-list-header/contact-list-header.component';\r\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\r\n\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { NotificationsComponent } from './drawer/notifications/notifications.component';\r\nimport { SearchComponent } from './drawer/search/search.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: true\r\n};\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all',\r\n    component: ContactsComponent,\r\n    resolve: {\r\n      contacts: ContactsService\r\n    }\r\n  },\r\n  {\r\n    path: ':handle',\r\n    component: ContactsComponent,\r\n    resolve: {\r\n      contacts: ContactsService\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'all'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    SharedModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  declarations: [\r\n    ContactsComponent,\r\n    ContactsListComponent,\r\n    ContactListItemComponent,\r\n    ContactsSidebarComponent,\r\n    ContactsHeaderComponent,\r\n    SearchBarComponent,\r\n    ContactListHeaderComponent,\r\n    EditContactComponent,\r\n    DrawerComponent,\r\n    NotificationsComponent,\r\n    SearchComponent\r\n  ],\r\n  entryComponents: [\r\n    EditContactComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ]\r\n})\r\nexport class ContactsModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {Contact} from './contact.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactsService implements Resolve<any> {\r\n  private contactsUrl = 'api/contacts';  // URL to web api\r\n  contacts: Contact[];\r\n  selectedContacts: Contact[] = [];\r\n  routeParams: any;\r\n\r\n  onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSelectedContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  onSearchQueryChanged: BehaviorSubject<any> = new BehaviorSubject('');\r\n\r\n  constructor(private http: HttpClient, private location: Location) {\r\n  }\r\n\r\n  /**\r\n   * Resolve\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.routeParams = route.params;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      Promise.all([\r\n        this.getContacts(),\r\n      ]).then(() => {\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getContacts(): Promise<Contact[]> {\r\n    if (this.routeParams.handle) {\r\n      return this.getContactsByParams(this.routeParams.handle);\r\n    } else {\r\n      return this.getAllContacts();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all contacts\r\n   * @returns {Promise<Contact[]>}\r\n   */\r\n  getAllContacts(): Promise<Contact[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get contacts by param\r\n   * @param param\r\n   * @return {Promise<Contact[]>}\r\n   */\r\n  getContactsByParams(param: any): Promise<Contact[]> {\r\n    const params = '?' + param + '=true';\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.contactsUrl + params)\r\n        .subscribe((response: any) => {\r\n          this.contacts = response;\r\n          this.onContactsChanged.next(this.contacts);\r\n          resolve(this.contacts);\r\n        }, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selected contact by id\r\n   * @param id\r\n   */\r\n  toggleSelectedContact(id) {\r\n    // First, check if we already have that contact as selected\r\n    if (this.selectedContacts.length > 0) {\r\n      for (const contact of this.selectedContacts) {\r\n        // delete the selected contact\r\n        if (contact.id === id) {\r\n          const index = this.selectedContacts.indexOf(contact);\r\n\r\n          if (index !== -1) {\r\n            this.selectedContacts.splice(index, 1);\r\n\r\n            // Trigger the next event\r\n            this.onSelectedContactsChanged.next(this.selectedContacts);\r\n\r\n            // Return\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we don't have it, push in selected list\r\n    this.selectedContacts.push(\r\n      this.contacts.find(contact => {\r\n        return contact.id === id;\r\n      })\r\n    );\r\n\r\n    // Trigger the next event\r\n    this.onSelectedContactsChanged.next(this.selectedContacts);\r\n  }\r\n\r\n  /**\r\n   * Toggle select all\r\n   */\r\n  toggleSelectAll() {\r\n    if (this.selectedContacts.length > 0) {\r\n      this.deselectContacts();\r\n    } else {\r\n      this.selectContacts();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Add contact in selectedContacts list\r\n   * @param filterParameter\r\n   * @param filterValue\r\n   */\r\n  selectContacts(filterParameter?, filterValue?) {\r\n    this.selectedContacts = [];\r\n\r\n    // If there is no filter, select all mails\r\n    if (filterParameter === undefined || filterValue === undefined) {\r\n      this.selectedContacts = this.contacts.map(x => Object.assign({}, x));\r\n    } else {\r\n      this.selectedContacts.push(...\r\n        this.contacts.filter(contact => {\r\n          return contact[filterParameter] === filterValue;\r\n        })\r\n      );\r\n    }\r\n\r\n    // Trigger the next event\r\n    this.onSelectedContactsChanged.next(this.selectedContacts);\r\n  }\r\n\r\n  /**\r\n   * Deselect all contacts\r\n   */\r\n  deselectContacts() {\r\n    this.selectedContacts = [];\r\n\r\n    // Trigger the next event\r\n    this.onSelectedContactsChanged.next(this.selectedContacts);\r\n  }\r\n\r\n  /**\r\n   * Set property on selected contacts\r\n   * @param property\r\n   * @param value\r\n   */\r\n  setPropertyOnSelectedContacts(property, value) {\r\n    this.selectedContacts.map(contact => {\r\n      contact[property] = value;\r\n\r\n      this.saveContact(contact);\r\n    });\r\n\r\n    this.deselectContacts();\r\n  }\r\n\r\n  /**\r\n   * Save a contact\r\n   * @param {Contact} contact\r\n   * @return {Promise<any>}\r\n   */\r\n  saveContact(contact: Contact) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(this.contactsUrl + '/' + contact.id, {...contact})\r\n        .subscribe(response => {\r\n          this.getContacts().then(contacts => {\r\n            resolve(contacts);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete a contact from data\r\n   * @param contactId\r\n   * @return {Promise<any>}\r\n   */\r\n  deleteContact(contactId) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.delete(this.contactsUrl + '/' + contactId)\r\n        .subscribe(response => {\r\n          this.getContacts().then(contacts => {\r\n            resolve(contacts);\r\n\r\n          }, reject);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9kcmF3ZXIvZHJhd2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {DrawerService} from './../../drawer.service';\r\n\r\n@Component({\r\n  selector: 'contact-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.scss']\r\n})\r\nexport class DrawerComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') draverClasses = 'dt-module__drawer dt-drawer position-left';\r\n  @HostBinding('class.open') isOpen = false;\r\n  activeMenu: string;\r\n  showLoader = false;\r\n  drawer: any;\r\n  onDrawerChanged: Subscription;\r\n\r\n  constructor(private drawerService: DrawerService) {\r\n    this.onDrawerChanged = this.drawerService.onDrawerChanged.subscribe((drawer: any) => {\r\n      if (!this.activeMenu) {\r\n        this.processLoader();\r\n      }\r\n\r\n      this.drawer = drawer;\r\n      this.isOpen = this.isOpen;\r\n      this.activeMenu = this.drawer.activeMenu;\r\n\r\n      if (!this.drawer.isOpen) {\r\n        this.activeMenu = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processLoader() {\r\n    this.showLoader = true;\r\n\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Close Drawer\r\n   * @param event\r\n   */\r\n  closeDrawer(event) {\r\n    event.preventDefault();\r\n\r\n    this.drawer.isOpen = false;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  onSelectMenu(event, activeMenu) {\r\n    event.preventDefault();\r\n    this.processLoader();\r\n\r\n    this.drawer.activeMenu = this.activeMenu = activeMenu;\r\n    this.drawerService.update(this.drawer);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDrawerChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9kcmF3ZXIvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'todo-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  notifications: any[] = [];\r\n  onNotificationsChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.onNotificationsChanged = this.appService.onNotificationsChanged.subscribe((notifications: any[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onNotificationsChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9kcmF3ZXIvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {AppService} from '@app/app.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'todo-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class') classlist = 'dt-notification';\r\n  messages: any[] = [];\r\n  searchText = '';\r\n  searchQuery: FormControl;\r\n  onMessagesChanged: Subscription;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.searchQuery = new FormControl('');\r\n    this.onMessagesChanged = this.appService.onMessagesChanged.subscribe((messages: any[]) => {\r\n      this.messages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.valueChanges.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged()\r\n    ).subscribe(searchText => {\r\n      this.searchText = searchText;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onMessagesChanged.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvYXBwcy9jb250YWN0cy9lZGl0LWNvbnRhY3QvZWRpdC1jb250YWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {NgForm} from '@angular/forms';\r\n\r\nimport {Contact} from './../contact.model';\r\nimport {ContactsService} from './../contacts.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-contact',\r\n  templateUrl: './edit-contact.component.html',\r\n  styleUrls: ['./edit-contact.component.scss']\r\n})\r\nexport class EditContactComponent implements OnInit {\r\n  @Input() title = 'Add Contact';\r\n  @Input() contact: Contact;\r\n  private imageSrc: string = '';\r\n  filename = 'Change Thumb';\r\n\r\n  @ViewChild('contactForm', {static: false}) public contactForm: NgForm;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private contactService: ContactsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    const pattern = /image-*/;\r\n    const reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n\r\n    this.filename = file.name\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  /**\r\n   * Handle file reader loaded\r\n   * @param e\r\n   * @private\r\n   */\r\n  _handleReaderLoaded(e) {\r\n    const reader = e.target;\r\n    this.contact.thumb = reader.result;\r\n  }\r\n\r\n  /**\r\n   * On form submit call this function\r\n   */\r\n  onFormSubmit() {\r\n    if (this.contactForm.valid) {\r\n      this.contactService.saveContact(this.contact).then((response) => {\r\n        this.contactForm.resetForm();\r\n        this.activeModal.close();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}